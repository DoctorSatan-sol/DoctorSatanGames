{
	"id": "310d8566f208d36120d1b87d1c587204",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ProofOfClick.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\";\r\nimport \"@paintswap/vrf/contracts/interfaces/IPaintswapVRFCoordinator.sol\";\r\n\r\ncontract POC is PaintswapVRFConsumer, ERC20 {\r\n    error FeeTooLow();\r\n    error FeeTransferFailed();\r\n    error RefundFailed();\r\n    error InsufficientContractBalance();\r\n    error NothingToBurn();\r\n    error TransferFailed();\r\n\r\n    uint256 public maxSupply;\r\n    uint256 public currentReward;\r\n    uint256 public roundId;\r\n    uint256 public lastHalvingRound;\r\n    uint256 public lastRoundTs;\r\n    address public liquidityVault;\r\n\r\n    uint256 public constant INITIAL_REWARD          = 666 * 1e18;\r\n    uint256 public constant HALVING_INTERVAL_ROUNDS = 50050;\r\n    uint256 public constant ROUND_DURATION          = 60;\r\n    uint256 public constant FEE                     = 0.1 ether;\r\n    uint256 public constant LIQUIDITY_SHARE         = 5;\r\n    uint32  public constant CALLBACK_GAS_LIMIT      = 200_000;\r\n\r\n    mapping(uint256 => mapping(uint256 => address)) public players;\r\n    mapping(uint256 => uint256) public playerCount;\r\n    mapping(uint256 => uint256) private requestToRoundId;\r\n    mapping(uint256 => uint256) private rewardPerRound;\r\n\r\n    event Clicked(uint256 indexed roundId, address indexed player);\r\n    event RoundRequested(uint256 indexed requestId, uint256 indexed roundId, uint256 playersCount, uint256 reward);\r\n    event WinnerMinted(uint256 indexed requestId, uint256 indexed roundId, address indexed winner, uint256 amount);\r\n    event Burned(address indexed burner, uint256 amount, uint256 ethOut);\r\n\r\n    constructor(address vrfCoordinatorAddress, address _vaultAddress)\r\n        ERC20(\"SatanGames S Token\", \"sgS\")\r\n        PaintswapVRFConsumer(vrfCoordinatorAddress)\r\n    {\r\n        maxSupply = 66_666_666 * 1e18;\r\n        currentReward = INITIAL_REWARD;\r\n        liquidityVault = _vaultAddress;\r\n        lastRoundTs = block.timestamp;\r\n        roundId = 0;\r\n        lastHalvingRound = 0;\r\n    }\r\n\r\n    function Click() external payable {\r\n        if (msg.value < FEE) revert FeeTooLow();\r\n\r\n        bool timeIsUp = (block.timestamp >= lastRoundTs + ROUND_DURATION);\r\n        bool hasPlayers = (playerCount[roundId] > 0);\r\n\r\n        if (timeIsUp && hasPlayers) {\r\n            uint256 vrfFee = IPaintswapVRFCoordinator(_vrfCoordinator).calculateRequestPriceNative(CALLBACK_GAS_LIMIT);\r\n            if (address(this).balance < vrfFee) revert InsufficientContractBalance();\r\n\r\n            uint256 count = playerCount[roundId];\r\n            uint256 rewardForRound = rewardPerRound[roundId];\r\n            if (rewardForRound == 0) rewardForRound = currentReward;\r\n\r\n            uint256 requestId = IPaintswapVRFCoordinator(_vrfCoordinator)\r\n                .requestRandomnessPayInNative{value: vrfFee}(\r\n                    CALLBACK_GAS_LIMIT,\r\n                    1,\r\n                    address(this)\r\n                );\r\n\r\n            requestToRoundId[requestId] = roundId;\r\n            rewardPerRound[roundId] = rewardForRound;\r\n            emit RoundRequested(requestId, roundId, count, rewardForRound);\r\n\r\n            if (roundId >= lastHalvingRound + HALVING_INTERVAL_ROUNDS) {\r\n                currentReward /= 2;\r\n                lastHalvingRound = roundId;\r\n            }\r\n\r\n            roundId += 1;\r\n            lastRoundTs = block.timestamp;\r\n        }\r\n\r\n        uint256 idx = playerCount[roundId];\r\n        players[roundId][idx] = msg.sender;\r\n        playerCount[roundId] = idx + 1;\r\n\r\n        emit Clicked(roundId, msg.sender);\r\n\r\n        uint256 liquidityAmount = (FEE * LIQUIDITY_SHARE) / 100;\r\n        (bool ok, ) = payable(liquidityVault).call{value: liquidityAmount}(\"\");\r\n        if (!ok) revert FeeTransferFailed();\r\n\r\n        uint256 change = msg.value - FEE;\r\n        if (change > 0) {\r\n            (ok, ) = payable(msg.sender).call{value: change}(\"\");\r\n            if (!ok) revert RefundFailed();\r\n        }\r\n    }\r\n\r\n    function burn(uint256 amount) external {\r\n        if (amount == 0) revert NothingToBurn();\r\n\r\n        uint256 contractBalance = address(this).balance;\r\n        if (contractBalance == 0) revert InsufficientContractBalance();\r\n\r\n        uint256 supply = totalSupply();\r\n        if (supply == 0) revert InsufficientContractBalance();\r\n\r\n        uint256 ethOut = (amount * contractBalance) / supply;\r\n\r\n        _burn(msg.sender, amount);\r\n        maxSupply -= amount;\r\n\r\n        (bool success, ) = payable(msg.sender).call{value: ethOut}(\"\");\r\n        if (!success) revert TransferFailed();\r\n\r\n        emit Burned(msg.sender, amount, ethOut);\r\n    }\r\n\r\n    function _fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal override {\r\n        uint256 resolvedRound = requestToRoundId[requestId];\r\n        delete requestToRoundId[requestId];\r\n\r\n        uint256 n = playerCount[resolvedRound];\r\n        if (n > 0) {\r\n            uint256 idx = randomWords[0] % n;\r\n            address winner = players[resolvedRound][idx];\r\n\r\n            uint256 reward = rewardPerRound[resolvedRound];\r\n            if (reward == 0) reward = currentReward;\r\n\r\n            if (totalSupply() + reward > maxSupply) {\r\n                reward = maxSupply - totalSupply();\r\n            }\r\n            if (reward > 0) {\r\n                _mint(winner, reward);\r\n                emit WinnerMinted(requestId, resolvedRound, winner, reward);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getPlayersCountInRound(uint256 _roundId) external view returns (uint256) {\r\n        return playerCount[_roundId];\r\n    }\r\n\r\n    function nextHalvingRound() external view returns (uint256) {\r\n        return lastHalvingRound + HALVING_INTERVAL_ROUNDS;\r\n    }\r\n}"
			},
			"@paintswap/vrf/contracts/interfaces/IPaintswapVRFCoordinator.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.20;\n\ninterface IPaintswapVRFCoordinator {\n  /* -------------------------------------------------------------------------- */\n  /*                                 Events                                     */\n  /* -------------------------------------------------------------------------- */\n\n  /// @dev Emitted when a request is made to PaintswapVRFCoordinator\n  event RandomWordsRequested(\n    uint256 indexed requestId,\n    uint256 callbackGasLimit,\n    uint256 numWords,\n    address indexed origin,\n    address indexed consumer,\n    uint256 nonce,\n    address refundee,\n    uint256 gasPricePaid,\n    uint256 requestedAt\n  );\n  /// @dev Emitted when PaintswapVRFCoordinator fulfills a request\n  event RandomWordsFulfilled(\n    uint256 indexed requestId,\n    uint256[] randomWords,\n    address indexed oracle,\n    bool callSuccess,\n    uint256 fulfilledAt\n  );\n  /// @dev Emitted when a consumer callback is not successful\n  event ConsumerCallbackFailed(\n    uint256 indexed requestId,\n    uint8 indexed reason, // 1 = not enough gas, 2 = no code, 3 = reverted or out of gas\n    address indexed target,\n    uint256 gasLeft\n  );\n\n  /// @dev Emitted when the gas refund after fulfillment fails\n  event FulfillmentGasRefunded(\n    uint256 indexed requestId,\n    address indexed refundee,\n    uint256 gasRefunded,\n    bool refundedSuccessfully\n  );\n  /// @dev Emitted when the signer address is updated\n  event SignerAddressUpdated(address indexed signerAddress);\n  /// @dev Emitted when a new oracle is registered\n  event OracleRegistered(address indexed oracle);\n  /// @dev Emitted whne the gas price history window is updated\n  event GasPriceHistoryWindowUpdated(uint256 newWindow);\n  /// @dev Emitted when request limits are updated\n  event RandomRequestLimitsUpdated(\n    uint32 minimumGasLimit,\n    uint32 maximumGasLimit,\n    uint16 maxNumWords\n  );\n\n  /* -------------------------------------------------------------------------- */\n  /*                                 Errors                                     */\n  /* -------------------------------------------------------------------------- */\n\n  /// @dev Revert when submitted address is the zero address\n  error ZeroAddress();\n  /// @dev Revert when the oracle is already registered\n  error OracleAlreadyRegistered(address oracle);\n  /// @dev Revert when the oracle has an insufficient balance\n  error InsufficientOracleBalance(address oracle, uint256 balance);\n  /// @dev Revert when the address is not an oracle\n  error NotOracle(address invalid);\n  /// @dev Revert when the request has an insufficient gas limit to fulfill\n  error InsufficientGasLimit(uint256 sent, uint256 required);\n  /// @dev Revert when the consumer gas limit is too high\n  error OverConsumerGasLimit(uint256 sent, uint256 max);\n  /// @dev Revert when the payment is too low for the requested gas limit\n  error InsufficientGasPayment(uint256 sent, uint256 required);\n  /// @dev Revert when the request has an invalid number of words\n  error InvalidNumWords(uint256 numWords, uint256 max);\n  /// @dev Revert when the fufillment call does not match the commitment\n  error CommitmentMismatch(uint256 requestId);\n  /// @dev Revert when the oracle has an invalid public key\n  error InvalidPublicKey(\n    uint256 requestId,\n    address proofSigner,\n    address vrfSigner\n  );\n  /// @dev Revert when the proof is invalid\n  error InvalidProof(uint256 requestId);\n  /// @dev Revert when the withdraw fails\n  error WithdrawFailed(address recipient, uint256 amount);\n  /// @dev Revert when the gas price history is invalid\n  error InvalidGasPriceHistoryWindow(uint256 window);\n  /// @dev Revert when funding has failed\n  error FundingFailed(address oracle, uint256 amount);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               Oracle structs                               */\n  /* -------------------------------------------------------------------------- */\n\n  struct VRFStatistics {\n    uint64 totalRequests;\n    uint64 totalWordsRequested;\n    uint64 successfulFulfillments;\n    uint64 failedFulfillments;\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                               Oracle enums                                 */\n  /* -------------------------------------------------------------------------- */\n\n  enum CallbackStatus {\n    PENDING,\n    SUCCESS,\n    FAILURE\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                               Oracle methods                               */\n  /* -------------------------------------------------------------------------- */\n\n  /// @notice Calculate the payment for a given amount of gas using native currency\n  /// @param callbackGasLimit The amount of gas to provide for the callback\n  /// @return payment The amount to pay\n  function calculateRequestPriceNative(\n    uint256 callbackGasLimit\n  ) external view returns (uint256 payment);\n\n  /// @notice Request some random words\n  ///\n  /// @param callbackGasLimit The amount of gas to provide for the callback\n  /// @param numWords The number of words to request\n  /// @param refundee The address to refund the gas fees to\n  /// @return requestId The ID of the request\n  function requestRandomnessPayInNative(\n    uint256 callbackGasLimit,\n    uint256 numWords,\n    address refundee\n  ) external payable returns (uint256 requestId);\n\n  /// @notice Check to see if a request is pending\n  ///\n  /// @param requestId The ID of the request\n  /// @return isPending True if the request is pending, false otherwise/does not exist\n  function isRequestPending(\n    uint256 requestId\n  ) external view returns (bool isPending);\n\n  /// @notice Fulfill the request for random words\n  ///\n  /// @param requestId The ID of the request\n  /// @param consumer The address to fulfill the request\n  /// @param consumer The amount of gas fees paid to fulfill the request\n  /// @param numWords The number of words to fulfill\n  /// @param refundee The address to refund the gas fees to\n  /// @param gasPricePaid The gas price paid for the request\n  /// @param publicKey The public key of the oracle\n  /// @param proof The proof of the random words\n  /// @param uPoint The `u` EC point defined as `U = s*B - c*Y`\n  /// @param vComponents The components required to compute `v` as `V = s*H - c*Gamma`\n  /// @param proofCtr The proof counter\n  /// @return callSuccess If the fulfillment call succeeded\n  function fulfillRandomWords(\n    uint256 requestId,\n    address consumer,\n    uint256 callbackGasLimit,\n    uint256 numWords,\n    address refundee,\n    uint256 gasPricePaid,\n    uint256[2] memory publicKey,\n    uint256[4] memory proof,\n    uint256[2] memory uPoint,\n    uint256[4] memory vComponents,\n    uint8 proofCtr\n  ) external returns (bool callSuccess);\n}\n"
			},
			"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {IPaintswapVRFCoordinator} from \"./interfaces/IPaintswapVRFCoordinator.sol\";\nimport {IPaintswapVRFConsumer} from \"./interfaces/IPaintswapVRFConsumer.sol\";\n\n/**\n * @title PaintswapVRFConsumer\n * @dev Abstract contract for consuming randomness from the Paintswap VRF (Verifiable Random Function) service\n * @notice Implement this contract to request and receive verifiable randomness from Paintswap's VRF\n */\nabstract contract PaintswapVRFConsumer is IPaintswapVRFConsumer {\n  /**\n   * @dev Reference to the Paintswap VRF coordinator contract\n   * @notice This is immutable and set during contract construction\n   */\n  IPaintswapVRFCoordinator internal immutable _vrfCoordinator;\n\n  /**\n   * @dev Error thrown when a function restricted to the VRF coordinator is called by another address\n   * @param sender The address that attempted to call the function\n   * @param coordinator The address of the authorized VRF coordinator\n   */\n  error OnlyVRFCoordinator(address sender, address coordinator);\n\n  /**\n   * @dev Restricts function access to only the VRF coordinator\n   * @notice Functions with this modifier can only be called by the VRF coordinator contract\n   */\n  modifier onlyCoordinator() {\n    if (msg.sender != address(_vrfCoordinator)) {\n      revert OnlyVRFCoordinator(msg.sender, address(_vrfCoordinator));\n    }\n    _;\n  }\n\n  /**\n   * @dev Initializes the consumer contract with the VRF coordinator address\n   * @param vrfCoordinator Address of the Paintswap VRF coordinator contract\n   */\n  constructor(address vrfCoordinator) {\n    _vrfCoordinator = IPaintswapVRFCoordinator(vrfCoordinator);\n  }\n\n  /**\n   * @dev Calculates the price in native currency for a randomness request\n   * @param callbackGasLimit Maximum gas allowed for the fulfillment callback\n   * @return requestPrice The price in native currency for the request\n   * @notice The price depends on the current gas price and the callback gas limit\n   */\n  function _calculateRequestPriceNative(\n    uint256 callbackGasLimit\n  ) internal view returns (uint256 requestPrice) {\n    requestPrice = _vrfCoordinator.calculateRequestPriceNative(\n      callbackGasLimit\n    );\n  }\n\n  /**\n   * @dev Requests random words from the VRF coordinator, paying with native currency, specifying a refundee\n   * @param callbackGasLimit Maximum gas allowed for the fulfillment callback\n   * @param numWords Number of random words to request\n   * @param refundee Address to receive any unused gas refund\n   * @param gasPayment Amount of native currency to pay for the request\n   * @return requestId Unique identifier for this randomness request\n   * @notice The contract must have sufficient balance to cover the value parameter\n   */\n  function _requestRandomnessPayInNative(\n    uint256 callbackGasLimit,\n    uint256 numWords,\n    address refundee,\n    uint256 gasPayment\n  ) internal returns (uint256 requestId) {\n    return\n      _vrfCoordinator.requestRandomnessPayInNative{value: gasPayment}(\n        callbackGasLimit,\n        numWords,\n        refundee\n      );\n  }\n\n  /**\n   * @dev Processes the received random words\n   * @param requestId The ID of the request that corresponds to these random words\n   * @param randomWords The array of random words received from the VRF coordinator\n   * @notice This function must be implemented by the inheriting contract\n   */\n  function _fulfillRandomWords(\n    uint256 requestId,\n    uint256[] calldata randomWords\n  ) internal virtual;\n\n  /**\n   * @dev Callback function called by the VRF coordinator to deliver random words\n   * @dev Special care should be taken when overriding this function. Use `_fulfillRandomWords()` instead.\n   * @param requestId The ID of the request to which these random words belong\n   * @param randomWords The array of random words for the request\n   * @notice This function can only be called by the VRF coordinator\n   */\n  function rawFulfillRandomWords(\n    uint256 requestId,\n    uint256[] calldata randomWords\n  ) external override onlyCoordinator {\n    _fulfillRandomWords(requestId, randomWords);\n  }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@paintswap/vrf/contracts/interfaces/IPaintswapVRFConsumer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.20;\n\ninterface IPaintswapVRFConsumer {\n  /**\n   * @notice rawFulfillRandomWords handles the VRF response and your contract must implement it!\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords The VRF output expanded to the requested number of words\n   */\n  function rawFulfillRandomWords(\n    uint256 requestId,\n    uint256[] calldata randomWords\n  ) external;\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol": {
				"PaintswapVRFConsumer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "coordinator",
									"type": "address"
								}
							],
							"name": "OnlyVRFCoordinator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "randomWords",
									"type": "uint256[]"
								}
							],
							"name": "rawFulfillRandomWords",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Abstract contract for consuming randomness from the Paintswap VRF (Verifiable Random Function) service",
						"errors": {
							"OnlyVRFCoordinator(address,address)": [
								{
									"details": "Error thrown when a function restricted to the VRF coordinator is called by another address",
									"params": {
										"coordinator": "The address of the authorized VRF coordinator",
										"sender": "The address that attempted to call the function"
									}
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the consumer contract with the VRF coordinator address",
								"params": {
									"vrfCoordinator": "Address of the Paintswap VRF coordinator contract"
								}
							},
							"rawFulfillRandomWords(uint256,uint256[])": {
								"details": "Callback function called by the VRF coordinator to deliver random wordsSpecial care should be taken when overriding this function. Use `_fulfillRandomWords()` instead.",
								"params": {
									"randomWords": "The array of random words for the request",
									"requestId": "The ID of the request to which these random words belong"
								}
							}
						},
						"stateVariables": {
							"_vrfCoordinator": {
								"details": "Reference to the Paintswap VRF coordinator contract"
							}
						},
						"title": "PaintswapVRFConsumer",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"rawFulfillRandomWords(uint256,uint256[])": "1fe543e3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyVRFCoordinator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract contract for consuming randomness from the Paintswap VRF (Verifiable Random Function) service\",\"errors\":{\"OnlyVRFCoordinator(address,address)\":[{\"details\":\"Error thrown when a function restricted to the VRF coordinator is called by another address\",\"params\":{\"coordinator\":\"The address of the authorized VRF coordinator\",\"sender\":\"The address that attempted to call the function\"}}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the consumer contract with the VRF coordinator address\",\"params\":{\"vrfCoordinator\":\"Address of the Paintswap VRF coordinator contract\"}},\"rawFulfillRandomWords(uint256,uint256[])\":{\"details\":\"Callback function called by the VRF coordinator to deliver random wordsSpecial care should be taken when overriding this function. Use `_fulfillRandomWords()` instead.\",\"params\":{\"randomWords\":\"The array of random words for the request\",\"requestId\":\"The ID of the request to which these random words belong\"}}},\"stateVariables\":{\"_vrfCoordinator\":{\"details\":\"Reference to the Paintswap VRF coordinator contract\"}},\"title\":\"PaintswapVRFConsumer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"rawFulfillRandomWords(uint256,uint256[])\":{\"notice\":\"This function can only be called by the VRF coordinator\"}},\"notice\":\"Implement this contract to request and receive verifiable randomness from Paintswap's VRF\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":\"PaintswapVRFConsumer\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":{\"keccak256\":\"0xdefecf647e6ea3284c0e41fc72b08559661d1dc4b6a3d9988325cd11173f9139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fad97744d1fc398a844cde07a845e2ccda64e03f58f8d077de99ff7cb98e121\",\"dweb:/ipfs/QmceonZfb4mPY23yq4eTXupNNPdXeMLgAk8hmpdjSrj6LF\"]},\"@paintswap/vrf/contracts/interfaces/IPaintswapVRFConsumer.sol\":{\"keccak256\":\"0x0c266266faa3223f24913ba79232558b0d4a4d415dc9b7f1f4c444767977485c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d9023a63870ed706b12a1c6d6d429511cd4df23f0de482f8abdef0e78d11b99\",\"dweb:/ipfs/QmNoCywrmrX7gCqQgLSmasJ2G3RDX4LYzks2XG7qKkSH7x\"]},\"@paintswap/vrf/contracts/interfaces/IPaintswapVRFCoordinator.sol\":{\"keccak256\":\"0x496c76c11862c9d689e88f982f8e4c592c60b860eb66cc96e767f1148f583681\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86dc962111b535627f179d7120033da364a0d41489ad58b16ce9842df490283d\",\"dweb:/ipfs/QmbxHks3Nd4VUfZp1nPCVjZ4yCEWquu5vB6CfdJMm7jTQx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"rawFulfillRandomWords(uint256,uint256[])": {
								"notice": "This function can only be called by the VRF coordinator"
							}
						},
						"notice": "Implement this contract to request and receive verifiable randomness from Paintswap's VRF",
						"version": 1
					}
				}
			},
			"@paintswap/vrf/contracts/interfaces/IPaintswapVRFConsumer.sol": {
				"IPaintswapVRFConsumer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "randomWords",
									"type": "uint256[]"
								}
							],
							"name": "rawFulfillRandomWords",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"rawFulfillRandomWords(uint256,uint256[])": {
								"params": {
									"randomWords": "The VRF output expanded to the requested number of words",
									"requestId": "The Id initially returned by requestRandomness"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"rawFulfillRandomWords(uint256,uint256[])": "1fe543e3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"rawFulfillRandomWords(uint256,uint256[])\":{\"params\":{\"randomWords\":\"The VRF output expanded to the requested number of words\",\"requestId\":\"The Id initially returned by requestRandomness\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"rawFulfillRandomWords(uint256,uint256[])\":{\"notice\":\"rawFulfillRandomWords handles the VRF response and your contract must implement it!\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@paintswap/vrf/contracts/interfaces/IPaintswapVRFConsumer.sol\":\"IPaintswapVRFConsumer\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@paintswap/vrf/contracts/interfaces/IPaintswapVRFConsumer.sol\":{\"keccak256\":\"0x0c266266faa3223f24913ba79232558b0d4a4d415dc9b7f1f4c444767977485c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d9023a63870ed706b12a1c6d6d429511cd4df23f0de482f8abdef0e78d11b99\",\"dweb:/ipfs/QmNoCywrmrX7gCqQgLSmasJ2G3RDX4LYzks2XG7qKkSH7x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"rawFulfillRandomWords(uint256,uint256[])": {
								"notice": "rawFulfillRandomWords handles the VRF response and your contract must implement it!"
							}
						},
						"version": 1
					}
				}
			},
			"@paintswap/vrf/contracts/interfaces/IPaintswapVRFCoordinator.sol": {
				"IPaintswapVRFCoordinator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "CommitmentMismatch",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "FundingFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "sent",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "required",
									"type": "uint256"
								}
							],
							"name": "InsufficientGasLimit",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "sent",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "required",
									"type": "uint256"
								}
							],
							"name": "InsufficientGasPayment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"name": "InsufficientOracleBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "window",
									"type": "uint256"
								}
							],
							"name": "InvalidGasPriceHistoryWindow",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numWords",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "max",
									"type": "uint256"
								}
							],
							"name": "InvalidNumWords",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "InvalidProof",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "proofSigner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vrfSigner",
									"type": "address"
								}
							],
							"name": "InvalidPublicKey",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "invalid",
									"type": "address"
								}
							],
							"name": "NotOracle",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								}
							],
							"name": "OracleAlreadyRegistered",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "sent",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "max",
									"type": "uint256"
								}
							],
							"name": "OverConsumerGasLimit",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint8",
									"name": "reason",
									"type": "uint8"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gasLeft",
									"type": "uint256"
								}
							],
							"name": "ConsumerCallbackFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "refundee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gasRefunded",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "refundedSuccessfully",
									"type": "bool"
								}
							],
							"name": "FulfillmentGasRefunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newWindow",
									"type": "uint256"
								}
							],
							"name": "GasPriceHistoryWindowUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								}
							],
							"name": "OracleRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "minimumGasLimit",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "maximumGasLimit",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "maxNumWords",
									"type": "uint16"
								}
							],
							"name": "RandomRequestLimitsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "randomWords",
									"type": "uint256[]"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "callSuccess",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fulfilledAt",
									"type": "uint256"
								}
							],
							"name": "RandomWordsFulfilled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "callbackGasLimit",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "numWords",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "origin",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "consumer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "refundee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gasPricePaid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "requestedAt",
									"type": "uint256"
								}
							],
							"name": "RandomWordsRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "signerAddress",
									"type": "address"
								}
							],
							"name": "SignerAddressUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "callbackGasLimit",
									"type": "uint256"
								}
							],
							"name": "calculateRequestPriceNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "payment",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "consumer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "callbackGasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numWords",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "refundee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "gasPricePaid",
									"type": "uint256"
								},
								{
									"internalType": "uint256[2]",
									"name": "publicKey",
									"type": "uint256[2]"
								},
								{
									"internalType": "uint256[4]",
									"name": "proof",
									"type": "uint256[4]"
								},
								{
									"internalType": "uint256[2]",
									"name": "uPoint",
									"type": "uint256[2]"
								},
								{
									"internalType": "uint256[4]",
									"name": "vComponents",
									"type": "uint256[4]"
								},
								{
									"internalType": "uint8",
									"name": "proofCtr",
									"type": "uint8"
								}
							],
							"name": "fulfillRandomWords",
							"outputs": [
								{
									"internalType": "bool",
									"name": "callSuccess",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "isRequestPending",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isPending",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "callbackGasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numWords",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "refundee",
									"type": "address"
								}
							],
							"name": "requestRandomnessPayInNative",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"CommitmentMismatch(uint256)": [
								{
									"details": "Revert when the fufillment call does not match the commitment"
								}
							],
							"FundingFailed(address,uint256)": [
								{
									"details": "Revert when funding has failed"
								}
							],
							"InsufficientGasLimit(uint256,uint256)": [
								{
									"details": "Revert when the request has an insufficient gas limit to fulfill"
								}
							],
							"InsufficientGasPayment(uint256,uint256)": [
								{
									"details": "Revert when the payment is too low for the requested gas limit"
								}
							],
							"InsufficientOracleBalance(address,uint256)": [
								{
									"details": "Revert when the oracle has an insufficient balance"
								}
							],
							"InvalidGasPriceHistoryWindow(uint256)": [
								{
									"details": "Revert when the gas price history is invalid"
								}
							],
							"InvalidNumWords(uint256,uint256)": [
								{
									"details": "Revert when the request has an invalid number of words"
								}
							],
							"InvalidProof(uint256)": [
								{
									"details": "Revert when the proof is invalid"
								}
							],
							"InvalidPublicKey(uint256,address,address)": [
								{
									"details": "Revert when the oracle has an invalid public key"
								}
							],
							"NotOracle(address)": [
								{
									"details": "Revert when the address is not an oracle"
								}
							],
							"OracleAlreadyRegistered(address)": [
								{
									"details": "Revert when the oracle is already registered"
								}
							],
							"OverConsumerGasLimit(uint256,uint256)": [
								{
									"details": "Revert when the consumer gas limit is too high"
								}
							],
							"WithdrawFailed(address,uint256)": [
								{
									"details": "Revert when the withdraw fails"
								}
							],
							"ZeroAddress()": [
								{
									"details": "Revert when submitted address is the zero address"
								}
							]
						},
						"events": {
							"ConsumerCallbackFailed(uint256,uint8,address,uint256)": {
								"details": "Emitted when a consumer callback is not successful"
							},
							"FulfillmentGasRefunded(uint256,address,uint256,bool)": {
								"details": "Emitted when the gas refund after fulfillment fails"
							},
							"GasPriceHistoryWindowUpdated(uint256)": {
								"details": "Emitted whne the gas price history window is updated"
							},
							"OracleRegistered(address)": {
								"details": "Emitted when a new oracle is registered"
							},
							"RandomRequestLimitsUpdated(uint32,uint32,uint16)": {
								"details": "Emitted when request limits are updated"
							},
							"RandomWordsFulfilled(uint256,uint256[],address,bool,uint256)": {
								"details": "Emitted when PaintswapVRFCoordinator fulfills a request"
							},
							"RandomWordsRequested(uint256,uint256,uint256,address,address,uint256,address,uint256,uint256)": {
								"details": "Emitted when a request is made to PaintswapVRFCoordinator"
							},
							"SignerAddressUpdated(address)": {
								"details": "Emitted when the signer address is updated"
							}
						},
						"kind": "dev",
						"methods": {
							"calculateRequestPriceNative(uint256)": {
								"params": {
									"callbackGasLimit": "The amount of gas to provide for the callback"
								},
								"returns": {
									"payment": "The amount to pay"
								}
							},
							"fulfillRandomWords(uint256,address,uint256,uint256,address,uint256,uint256[2],uint256[4],uint256[2],uint256[4],uint8)": {
								"params": {
									"consumer": "The amount of gas fees paid to fulfill the request",
									"gasPricePaid": "The gas price paid for the request",
									"numWords": "The number of words to fulfill",
									"proof": "The proof of the random words",
									"proofCtr": "The proof counter",
									"publicKey": "The public key of the oracle",
									"refundee": "The address to refund the gas fees to",
									"requestId": "The ID of the request",
									"uPoint": "The `u` EC point defined as `U = s*B - c*Y`",
									"vComponents": "The components required to compute `v` as `V = s*H - c*Gamma`"
								},
								"returns": {
									"callSuccess": "If the fulfillment call succeeded"
								}
							},
							"isRequestPending(uint256)": {
								"params": {
									"requestId": "The ID of the request"
								},
								"returns": {
									"isPending": "True if the request is pending, false otherwise/does not exist"
								}
							},
							"requestRandomnessPayInNative(uint256,uint256,address)": {
								"params": {
									"callbackGasLimit": "The amount of gas to provide for the callback",
									"numWords": "The number of words to request",
									"refundee": "The address to refund the gas fees to"
								},
								"returns": {
									"requestId": "The ID of the request"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateRequestPriceNative(uint256)": "c66d3d18",
							"fulfillRandomWords(uint256,address,uint256,uint256,address,uint256,uint256[2],uint256[4],uint256[2],uint256[4],uint8)": "61c978ff",
							"isRequestPending(uint256)": "16221fdf",
							"requestRandomnessPayInNative(uint256,uint256,address)": "cb9bb27f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"CommitmentMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundingFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"InsufficientGasLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"InsufficientGasPayment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"InsufficientOracleBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"window\",\"type\":\"uint256\"}],\"name\":\"InvalidGasPriceHistoryWindow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numWords\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"InvalidNumWords\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proofSigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vrfSigner\",\"type\":\"address\"}],\"name\":\"InvalidPublicKey\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"invalid\",\"type\":\"address\"}],\"name\":\"NotOracle\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"OracleAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"OverConsumerGasLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"reason\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasLeft\",\"type\":\"uint256\"}],\"name\":\"ConsumerCallbackFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasRefunded\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"refundedSuccessfully\",\"type\":\"bool\"}],\"name\":\"FulfillmentGasRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newWindow\",\"type\":\"uint256\"}],\"name\":\"GasPriceHistoryWindowUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"OracleRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minimumGasLimit\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"maximumGasLimit\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"maxNumWords\",\"type\":\"uint16\"}],\"name\":\"RandomRequestLimitsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"callSuccess\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fulfilledAt\",\"type\":\"uint256\"}],\"name\":\"RandomWordsFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"callbackGasLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numWords\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasPricePaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestedAt\",\"type\":\"uint256\"}],\"name\":\"RandomWordsRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signerAddress\",\"type\":\"address\"}],\"name\":\"SignerAddressUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackGasLimit\",\"type\":\"uint256\"}],\"name\":\"calculateRequestPriceNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"callbackGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numWords\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasPricePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"publicKey\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[4]\",\"name\":\"proof\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256[2]\",\"name\":\"uPoint\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[4]\",\"name\":\"vComponents\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint8\",\"name\":\"proofCtr\",\"type\":\"uint8\"}],\"name\":\"fulfillRandomWords\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"callSuccess\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"isRequestPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isPending\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numWords\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"name\":\"requestRandomnessPayInNative\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"CommitmentMismatch(uint256)\":[{\"details\":\"Revert when the fufillment call does not match the commitment\"}],\"FundingFailed(address,uint256)\":[{\"details\":\"Revert when funding has failed\"}],\"InsufficientGasLimit(uint256,uint256)\":[{\"details\":\"Revert when the request has an insufficient gas limit to fulfill\"}],\"InsufficientGasPayment(uint256,uint256)\":[{\"details\":\"Revert when the payment is too low for the requested gas limit\"}],\"InsufficientOracleBalance(address,uint256)\":[{\"details\":\"Revert when the oracle has an insufficient balance\"}],\"InvalidGasPriceHistoryWindow(uint256)\":[{\"details\":\"Revert when the gas price history is invalid\"}],\"InvalidNumWords(uint256,uint256)\":[{\"details\":\"Revert when the request has an invalid number of words\"}],\"InvalidProof(uint256)\":[{\"details\":\"Revert when the proof is invalid\"}],\"InvalidPublicKey(uint256,address,address)\":[{\"details\":\"Revert when the oracle has an invalid public key\"}],\"NotOracle(address)\":[{\"details\":\"Revert when the address is not an oracle\"}],\"OracleAlreadyRegistered(address)\":[{\"details\":\"Revert when the oracle is already registered\"}],\"OverConsumerGasLimit(uint256,uint256)\":[{\"details\":\"Revert when the consumer gas limit is too high\"}],\"WithdrawFailed(address,uint256)\":[{\"details\":\"Revert when the withdraw fails\"}],\"ZeroAddress()\":[{\"details\":\"Revert when submitted address is the zero address\"}]},\"events\":{\"ConsumerCallbackFailed(uint256,uint8,address,uint256)\":{\"details\":\"Emitted when a consumer callback is not successful\"},\"FulfillmentGasRefunded(uint256,address,uint256,bool)\":{\"details\":\"Emitted when the gas refund after fulfillment fails\"},\"GasPriceHistoryWindowUpdated(uint256)\":{\"details\":\"Emitted whne the gas price history window is updated\"},\"OracleRegistered(address)\":{\"details\":\"Emitted when a new oracle is registered\"},\"RandomRequestLimitsUpdated(uint32,uint32,uint16)\":{\"details\":\"Emitted when request limits are updated\"},\"RandomWordsFulfilled(uint256,uint256[],address,bool,uint256)\":{\"details\":\"Emitted when PaintswapVRFCoordinator fulfills a request\"},\"RandomWordsRequested(uint256,uint256,uint256,address,address,uint256,address,uint256,uint256)\":{\"details\":\"Emitted when a request is made to PaintswapVRFCoordinator\"},\"SignerAddressUpdated(address)\":{\"details\":\"Emitted when the signer address is updated\"}},\"kind\":\"dev\",\"methods\":{\"calculateRequestPriceNative(uint256)\":{\"params\":{\"callbackGasLimit\":\"The amount of gas to provide for the callback\"},\"returns\":{\"payment\":\"The amount to pay\"}},\"fulfillRandomWords(uint256,address,uint256,uint256,address,uint256,uint256[2],uint256[4],uint256[2],uint256[4],uint8)\":{\"params\":{\"consumer\":\"The amount of gas fees paid to fulfill the request\",\"gasPricePaid\":\"The gas price paid for the request\",\"numWords\":\"The number of words to fulfill\",\"proof\":\"The proof of the random words\",\"proofCtr\":\"The proof counter\",\"publicKey\":\"The public key of the oracle\",\"refundee\":\"The address to refund the gas fees to\",\"requestId\":\"The ID of the request\",\"uPoint\":\"The `u` EC point defined as `U = s*B - c*Y`\",\"vComponents\":\"The components required to compute `v` as `V = s*H - c*Gamma`\"},\"returns\":{\"callSuccess\":\"If the fulfillment call succeeded\"}},\"isRequestPending(uint256)\":{\"params\":{\"requestId\":\"The ID of the request\"},\"returns\":{\"isPending\":\"True if the request is pending, false otherwise/does not exist\"}},\"requestRandomnessPayInNative(uint256,uint256,address)\":{\"params\":{\"callbackGasLimit\":\"The amount of gas to provide for the callback\",\"numWords\":\"The number of words to request\",\"refundee\":\"The address to refund the gas fees to\"},\"returns\":{\"requestId\":\"The ID of the request\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculateRequestPriceNative(uint256)\":{\"notice\":\"Calculate the payment for a given amount of gas using native currency\"},\"fulfillRandomWords(uint256,address,uint256,uint256,address,uint256,uint256[2],uint256[4],uint256[2],uint256[4],uint8)\":{\"notice\":\"Fulfill the request for random words\"},\"isRequestPending(uint256)\":{\"notice\":\"Check to see if a request is pending\"},\"requestRandomnessPayInNative(uint256,uint256,address)\":{\"notice\":\"Request some random words\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@paintswap/vrf/contracts/interfaces/IPaintswapVRFCoordinator.sol\":\"IPaintswapVRFCoordinator\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@paintswap/vrf/contracts/interfaces/IPaintswapVRFCoordinator.sol\":{\"keccak256\":\"0x496c76c11862c9d689e88f982f8e4c592c60b860eb66cc96e767f1148f583681\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86dc962111b535627f179d7120033da364a0d41489ad58b16ce9842df490283d\",\"dweb:/ipfs/QmbxHks3Nd4VUfZp1nPCVjZ4yCEWquu5vB6CfdJMm7jTQx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"calculateRequestPriceNative(uint256)": {
								"notice": "Calculate the payment for a given amount of gas using native currency"
							},
							"fulfillRandomWords(uint256,address,uint256,uint256,address,uint256,uint256[2],uint256[4],uint256[2],uint256[4],uint8)": {
								"notice": "Fulfill the request for random words"
							},
							"isRequestPending(uint256)": {
								"notice": "Check to see if a request is pending"
							},
							"requestRandomnessPayInNative(uint256,uint256,address)": {
								"notice": "Request some random words"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/ProofOfClick.sol": {
				"POC": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vrfCoordinatorAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_vaultAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FeeTooLow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FeeTransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientContractBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NothingToBurn",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "coordinator",
									"type": "address"
								}
							],
							"name": "OnlyVRFCoordinator",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RefundFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "burner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethOut",
									"type": "uint256"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "Clicked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "playersCount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RoundRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WinnerMinted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CALLBACK_GAS_LIMIT",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Click",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "HALVING_INTERVAL_ROUNDS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INITIAL_REWARD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LIQUIDITY_SHARE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_roundId",
									"type": "uint256"
								}
							],
							"name": "getPlayersCountInRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastHalvingRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastRoundTs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityVault",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextHalvingRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "playerCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "players",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "randomWords",
									"type": "uint256[]"
								}
							],
							"name": "rawFulfillRandomWords",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "roundId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OnlyVRFCoordinator(address,address)": [
								{
									"details": "Error thrown when a function restricted to the VRF coordinator is called by another address",
									"params": {
										"coordinator": "The address of the authorized VRF coordinator",
										"sender": "The address that attempted to call the function"
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"rawFulfillRandomWords(uint256,uint256[])": {
								"details": "Callback function called by the VRF coordinator to deliver random wordsSpecial care should be taken when overriding this function. Use `_fulfillRandomWords()` instead.",
								"params": {
									"randomWords": "The array of random words for the request",
									"requestId": "The ID of the request to which these random words belong"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ProofOfClick.sol\":257:5771  contract POC is PaintswapVRFConsumer, ERC20 {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/ProofOfClick.sol\":1694:2085  constructor(address vrfCoordinatorAddress, address _vaultAddress)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x12\n  dup2\n  mstore\n  0x20\n  add\n  0x536174616e47616d6573205320546f6b656e0000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x7367530000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/ProofOfClick.sol\":1834:1855  vrfCoordinatorAddress */\n  dup4\n    /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":1653:1667  vrfCoordinator */\n  dup1\n    /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":1610:1668  _vrfCoordinator = IPaintswapVRFCoordinator(vrfCoordinator) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":1568:1673  constructor(address vrfCoordinator) {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/ProofOfClick.sol\":1885:1902  66_666_666 * 1e18 */\n  0x372537349a396a28680000\n    /* \"contracts/ProofOfClick.sol\":1873:1882  maxSupply */\n  0x05\n    /* \"contracts/ProofOfClick.sol\":1873:1902  maxSupply = 66_666_666 * 1e18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ProofOfClick.sol\":746:756  666 * 1e18 */\n  0x241a9b4f617a280000\n    /* \"contracts/ProofOfClick.sol\":1913:1926  currentReward */\n  0x06\n    /* \"contracts/ProofOfClick.sol\":1913:1943  currentReward = INITIAL_REWARD */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ProofOfClick.sol\":1971:1984  _vaultAddress */\n  dup1\n    /* \"contracts/ProofOfClick.sol\":1954:1968  liquidityVault */\n  0x0a\n  0x00\n    /* \"contracts/ProofOfClick.sol\":1954:1984  liquidityVault = _vaultAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ProofOfClick.sol\":2009:2024  block.timestamp */\n  timestamp\n    /* \"contracts/ProofOfClick.sol\":1995:2006  lastRoundTs */\n  0x09\n    /* \"contracts/ProofOfClick.sol\":1995:2024  lastRoundTs = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ProofOfClick.sol\":2045:2046  0 */\n  0x00\n    /* \"contracts/ProofOfClick.sol\":2035:2042  roundId */\n  0x07\n    /* \"contracts/ProofOfClick.sol\":2035:2046  roundId = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ProofOfClick.sol\":2076:2077  0 */\n  0x00\n    /* \"contracts/ProofOfClick.sol\":2057:2073  lastHalvingRound */\n  0x08\n    /* \"contracts/ProofOfClick.sol\":2057:2077  lastHalvingRound = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ProofOfClick.sol\":1694:2085  constructor(address vrfCoordinatorAddress, address _vaultAddress)... */\n  pop\n  pop\n    /* \"contracts/ProofOfClick.sol\":257:5771  contract POC is PaintswapVRFConsumer, ERC20 {... */\n  jump(tag_13)\n    /* \"#utility.yul\":88:205   */\ntag_15:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_17:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_18:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_47\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_17\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_19:\n    /* \"#utility.yul\":641:665   */\n  tag_49\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_50:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_20:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_52\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_19\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  0x00\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_55\n  tag_15\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":949:1068   */\ntag_54:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_56\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_20\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_57\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_20\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1457   */\ntag_21:\n    /* \"#utility.yul\":1410:1416   */\n  0x00\n    /* \"#utility.yul\":1444:1449   */\n  dup2\n    /* \"#utility.yul\":1438:1450   */\n  mload\n    /* \"#utility.yul\":1428:1450   */\n  swap1\n  pop\n    /* \"#utility.yul\":1358:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1643   */\ntag_22:\n    /* \"#utility.yul\":1511:1588   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1589   */\n  mstore\n    /* \"#utility.yul\":1608:1612   */\n  0x41\n    /* \"#utility.yul\":1605:1606   */\n  0x04\n    /* \"#utility.yul\":1598:1613   */\n  mstore\n    /* \"#utility.yul\":1632:1636   */\n  0x24\n    /* \"#utility.yul\":1629:1630   */\n  0x00\n    /* \"#utility.yul\":1622:1637   */\n  revert\n    /* \"#utility.yul\":1649:1829   */\ntag_23:\n    /* \"#utility.yul\":1697:1774   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1687:1775   */\n  mstore\n    /* \"#utility.yul\":1794:1798   */\n  0x22\n    /* \"#utility.yul\":1791:1792   */\n  0x04\n    /* \"#utility.yul\":1784:1799   */\n  mstore\n    /* \"#utility.yul\":1818:1822   */\n  0x24\n    /* \"#utility.yul\":1815:1816   */\n  0x00\n    /* \"#utility.yul\":1808:1823   */\n  revert\n    /* \"#utility.yul\":1835:2155   */\ntag_24:\n    /* \"#utility.yul\":1879:1885   */\n  0x00\n    /* \"#utility.yul\":1916:1917   */\n  0x02\n    /* \"#utility.yul\":1910:1914   */\n  dup3\n    /* \"#utility.yul\":1906:1918   */\n  div\n    /* \"#utility.yul\":1896:1918   */\n  swap1\n  pop\n    /* \"#utility.yul\":1963:1964   */\n  0x01\n    /* \"#utility.yul\":1957:1961   */\n  dup3\n    /* \"#utility.yul\":1953:1965   */\n  and\n    /* \"#utility.yul\":1984:2002   */\n  dup1\n    /* \"#utility.yul\":1974:2055   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2040:2044   */\n  0x7f\n    /* \"#utility.yul\":2032:2038   */\n  dup3\n    /* \"#utility.yul\":2028:2045   */\n  and\n    /* \"#utility.yul\":2018:2045   */\n  swap2\n  pop\n    /* \"#utility.yul\":1974:2055   */\ntag_62:\n    /* \"#utility.yul\":2102:2104   */\n  0x20\n    /* \"#utility.yul\":2094:2100   */\n  dup3\n    /* \"#utility.yul\":2091:2105   */\n  lt\n    /* \"#utility.yul\":2071:2089   */\n  dup2\n    /* \"#utility.yul\":2068:2106   */\n  sub\n    /* \"#utility.yul\":2065:2149   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2121:2139   */\n  tag_64\n  tag_23\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2065:2149   */\ntag_63:\n    /* \"#utility.yul\":1886:2155   */\n  pop\n    /* \"#utility.yul\":1835:2155   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2161:2302   */\ntag_25:\n    /* \"#utility.yul\":2210:2214   */\n  0x00\n    /* \"#utility.yul\":2233:2236   */\n  dup2\n    /* \"#utility.yul\":2225:2236   */\n  swap1\n  pop\n    /* \"#utility.yul\":2256:2259   */\n  dup2\n    /* \"#utility.yul\":2253:2254   */\n  0x00\n    /* \"#utility.yul\":2246:2260   */\n  mstore\n    /* \"#utility.yul\":2290:2294   */\n  0x20\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2277:2295   */\n  keccak256\n    /* \"#utility.yul\":2269:2295   */\n  swap1\n  pop\n    /* \"#utility.yul\":2161:2302   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2308:2401   */\ntag_26:\n    /* \"#utility.yul\":2345:2351   */\n  0x00\n    /* \"#utility.yul\":2392:2394   */\n  0x20\n    /* \"#utility.yul\":2387:2389   */\n  0x1f\n    /* \"#utility.yul\":2380:2385   */\n  dup4\n    /* \"#utility.yul\":2376:2390   */\n  add\n    /* \"#utility.yul\":2372:2395   */\n  div\n    /* \"#utility.yul\":2362:2395   */\n  swap1\n  pop\n    /* \"#utility.yul\":2308:2401   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2407:2514   */\ntag_27:\n    /* \"#utility.yul\":2451:2459   */\n  0x00\n    /* \"#utility.yul\":2501:2506   */\n  dup3\n    /* \"#utility.yul\":2495:2499   */\n  dup3\n    /* \"#utility.yul\":2491:2507   */\n  shl\n    /* \"#utility.yul\":2470:2507   */\n  swap1\n  pop\n    /* \"#utility.yul\":2407:2514   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2520:2913   */\ntag_28:\n    /* \"#utility.yul\":2589:2595   */\n  0x00\n    /* \"#utility.yul\":2639:2640   */\n  0x08\n    /* \"#utility.yul\":2627:2637   */\n  dup4\n    /* \"#utility.yul\":2623:2641   */\n  mul\n    /* \"#utility.yul\":2662:2759   */\n  tag_69\n    /* \"#utility.yul\":2692:2758   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2681:2690   */\n  dup3\n    /* \"#utility.yul\":2662:2759   */\n  tag_27\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2780:2819   */\n  tag_70\n    /* \"#utility.yul\":2810:2818   */\n  dup7\n    /* \"#utility.yul\":2799:2808   */\n  dup4\n    /* \"#utility.yul\":2780:2819   */\n  tag_27\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2768:2819   */\n  swap6\n  pop\n    /* \"#utility.yul\":2852:2856   */\n  dup1\n    /* \"#utility.yul\":2848:2857   */\n  not\n    /* \"#utility.yul\":2841:2846   */\n  dup5\n    /* \"#utility.yul\":2837:2858   */\n  and\n    /* \"#utility.yul\":2828:2858   */\n  swap4\n  pop\n    /* \"#utility.yul\":2901:2905   */\n  dup1\n    /* \"#utility.yul\":2891:2899   */\n  dup7\n    /* \"#utility.yul\":2887:2906   */\n  and\n    /* \"#utility.yul\":2880:2885   */\n  dup5\n    /* \"#utility.yul\":2877:2907   */\n  or\n    /* \"#utility.yul\":2867:2907   */\n  swap3\n  pop\n    /* \"#utility.yul\":2596:2913   */\n  pop\n  pop\n    /* \"#utility.yul\":2520:2913   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2919:2996   */\ntag_29:\n    /* \"#utility.yul\":2956:2963   */\n  0x00\n    /* \"#utility.yul\":2985:2990   */\n  dup2\n    /* \"#utility.yul\":2974:2990   */\n  swap1\n  pop\n    /* \"#utility.yul\":2919:2996   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3002:3062   */\ntag_30:\n    /* \"#utility.yul\":3030:3033   */\n  0x00\n    /* \"#utility.yul\":3051:3056   */\n  dup2\n    /* \"#utility.yul\":3044:3056   */\n  swap1\n  pop\n    /* \"#utility.yul\":3002:3062   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3068:3210   */\ntag_31:\n    /* \"#utility.yul\":3118:3127   */\n  0x00\n    /* \"#utility.yul\":3151:3204   */\n  tag_74\n    /* \"#utility.yul\":3169:3203   */\n  tag_75\n    /* \"#utility.yul\":3178:3202   */\n  tag_76\n    /* \"#utility.yul\":3196:3201   */\n  dup5\n    /* \"#utility.yul\":3178:3202   */\n  tag_29\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3169:3203   */\n  tag_30\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3151:3204   */\n  tag_29\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3138:3204   */\n  swap1\n  pop\n    /* \"#utility.yul\":3068:3210   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3216:3291   */\ntag_32:\n    /* \"#utility.yul\":3259:3262   */\n  0x00\n    /* \"#utility.yul\":3280:3285   */\n  dup2\n    /* \"#utility.yul\":3273:3285   */\n  swap1\n  pop\n    /* \"#utility.yul\":3216:3291   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3297:3566   */\ntag_33:\n    /* \"#utility.yul\":3407:3446   */\n  tag_79\n    /* \"#utility.yul\":3438:3445   */\n  dup4\n    /* \"#utility.yul\":3407:3446   */\n  tag_31\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3468:3559   */\n  tag_80\n    /* \"#utility.yul\":3517:3558   */\n  tag_81\n    /* \"#utility.yul\":3541:3557   */\n  dup3\n    /* \"#utility.yul\":3517:3558   */\n  tag_32\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3509:3515   */\n  dup5\n    /* \"#utility.yul\":3502:3506   */\n  dup5\n    /* \"#utility.yul\":3496:3507   */\n  sload\n    /* \"#utility.yul\":3468:3559   */\n  tag_28\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3462:3466   */\n  dup3\n    /* \"#utility.yul\":3455:3560   */\n  sstore\n    /* \"#utility.yul\":3373:3566   */\n  pop\n    /* \"#utility.yul\":3297:3566   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3572:3645   */\ntag_34:\n    /* \"#utility.yul\":3617:3620   */\n  0x00\n    /* \"#utility.yul\":3638:3639   */\n  0x00\n    /* \"#utility.yul\":3631:3639   */\n  swap1\n  pop\n    /* \"#utility.yul\":3572:3645   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3651:3840   */\ntag_35:\n    /* \"#utility.yul\":3728:3760   */\n  tag_84\n  tag_34\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3769:3834   */\n  tag_85\n    /* \"#utility.yul\":3827:3833   */\n  dup2\n    /* \"#utility.yul\":3819:3825   */\n  dup5\n    /* \"#utility.yul\":3813:3817   */\n  dup5\n    /* \"#utility.yul\":3769:3834   */\n  tag_33\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3704:3840   */\n  pop\n    /* \"#utility.yul\":3651:3840   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3846:4032   */\ntag_36:\n    /* \"#utility.yul\":3906:4026   */\ntag_87:\n    /* \"#utility.yul\":3923:3926   */\n  dup2\n    /* \"#utility.yul\":3916:3921   */\n  dup2\n    /* \"#utility.yul\":3913:3927   */\n  lt\n    /* \"#utility.yul\":3906:4026   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":3977:4016   */\n  tag_90\n    /* \"#utility.yul\":4014:4015   */\n  0x00\n    /* \"#utility.yul\":4007:4012   */\n  dup3\n    /* \"#utility.yul\":3977:4016   */\n  tag_35\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3950:3951   */\n  0x01\n    /* \"#utility.yul\":3943:3948   */\n  dup2\n    /* \"#utility.yul\":3939:3952   */\n  add\n    /* \"#utility.yul\":3930:3952   */\n  swap1\n  pop\n    /* \"#utility.yul\":3906:4026   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":3846:4032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4038:4581   */\ntag_37:\n    /* \"#utility.yul\":4139:4141   */\n  0x1f\n    /* \"#utility.yul\":4134:4137   */\n  dup3\n    /* \"#utility.yul\":4131:4142   */\n  gt\n    /* \"#utility.yul\":4128:4574   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4173:4211   */\n  tag_93\n    /* \"#utility.yul\":4205:4210   */\n  dup2\n    /* \"#utility.yul\":4173:4211   */\n  tag_25\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4257:4286   */\n  tag_94\n    /* \"#utility.yul\":4275:4285   */\n  dup5\n    /* \"#utility.yul\":4257:4286   */\n  tag_26\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4247:4255   */\n  dup2\n    /* \"#utility.yul\":4243:4287   */\n  add\n    /* \"#utility.yul\":4440:4442   */\n  0x20\n    /* \"#utility.yul\":4428:4438   */\n  dup6\n    /* \"#utility.yul\":4425:4443   */\n  lt\n    /* \"#utility.yul\":4422:4471   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":4461:4469   */\n  dup2\n    /* \"#utility.yul\":4446:4469   */\n  swap1\n  pop\n    /* \"#utility.yul\":4422:4471   */\ntag_95:\n    /* \"#utility.yul\":4484:4564   */\n  tag_96\n    /* \"#utility.yul\":4540:4562   */\n  tag_97\n    /* \"#utility.yul\":4558:4561   */\n  dup6\n    /* \"#utility.yul\":4540:4562   */\n  tag_26\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4530:4538   */\n  dup4\n    /* \"#utility.yul\":4526:4563   */\n  add\n    /* \"#utility.yul\":4513:4524   */\n  dup3\n    /* \"#utility.yul\":4484:4564   */\n  tag_36\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4143:4574   */\n  pop\n  pop\n    /* \"#utility.yul\":4128:4574   */\ntag_92:\n    /* \"#utility.yul\":4038:4581   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4587:4704   */\ntag_38:\n    /* \"#utility.yul\":4641:4649   */\n  0x00\n    /* \"#utility.yul\":4691:4696   */\n  dup3\n    /* \"#utility.yul\":4685:4689   */\n  dup3\n    /* \"#utility.yul\":4681:4697   */\n  shr\n    /* \"#utility.yul\":4660:4697   */\n  swap1\n  pop\n    /* \"#utility.yul\":4587:4704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4710:4879   */\ntag_39:\n    /* \"#utility.yul\":4754:4760   */\n  0x00\n    /* \"#utility.yul\":4787:4838   */\n  tag_100\n    /* \"#utility.yul\":4835:4836   */\n  0x00\n    /* \"#utility.yul\":4831:4837   */\n  not\n    /* \"#utility.yul\":4823:4828   */\n  dup5\n    /* \"#utility.yul\":4820:4821   */\n  0x08\n    /* \"#utility.yul\":4816:4829   */\n  mul\n    /* \"#utility.yul\":4787:4838   */\n  tag_38\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4783:4839   */\n  not\n    /* \"#utility.yul\":4868:4872   */\n  dup1\n    /* \"#utility.yul\":4862:4866   */\n  dup4\n    /* \"#utility.yul\":4858:4873   */\n  and\n    /* \"#utility.yul\":4848:4873   */\n  swap2\n  pop\n    /* \"#utility.yul\":4761:4879   */\n  pop\n    /* \"#utility.yul\":4710:4879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4884:5179   */\ntag_40:\n    /* \"#utility.yul\":4960:4964   */\n  0x00\n    /* \"#utility.yul\":5106:5135   */\n  tag_102\n    /* \"#utility.yul\":5131:5134   */\n  dup4\n    /* \"#utility.yul\":5125:5129   */\n  dup4\n    /* \"#utility.yul\":5106:5135   */\n  tag_39\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5098:5135   */\n  swap2\n  pop\n    /* \"#utility.yul\":5168:5171   */\n  dup3\n    /* \"#utility.yul\":5165:5166   */\n  0x02\n    /* \"#utility.yul\":5161:5172   */\n  mul\n    /* \"#utility.yul\":5155:5159   */\n  dup3\n    /* \"#utility.yul\":5152:5173   */\n  or\n    /* \"#utility.yul\":5144:5173   */\n  swap1\n  pop\n    /* \"#utility.yul\":4884:5179   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5184:6579   */\ntag_10:\n    /* \"#utility.yul\":5301:5338   */\n  tag_104\n    /* \"#utility.yul\":5334:5337   */\n  dup3\n    /* \"#utility.yul\":5301:5338   */\n  tag_21\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5403:5421   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5395:5401   */\n  dup2\n    /* \"#utility.yul\":5392:5422   */\n  gt\n    /* \"#utility.yul\":5389:5445   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":5425:5443   */\n  tag_106\n  tag_22\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5389:5445   */\ntag_105:\n    /* \"#utility.yul\":5469:5507   */\n  tag_107\n    /* \"#utility.yul\":5501:5505   */\n  dup3\n    /* \"#utility.yul\":5495:5506   */\n  sload\n    /* \"#utility.yul\":5469:5507   */\n  tag_24\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5554:5621   */\n  tag_108\n    /* \"#utility.yul\":5614:5620   */\n  dup3\n    /* \"#utility.yul\":5606:5612   */\n  dup3\n    /* \"#utility.yul\":5600:5604   */\n  dup6\n    /* \"#utility.yul\":5554:5621   */\n  tag_37\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5648:5649   */\n  0x00\n    /* \"#utility.yul\":5672:5676   */\n  0x20\n    /* \"#utility.yul\":5659:5676   */\n  swap1\n  pop\n    /* \"#utility.yul\":5704:5706   */\n  0x1f\n    /* \"#utility.yul\":5696:5702   */\n  dup4\n    /* \"#utility.yul\":5693:5707   */\n  gt\n    /* \"#utility.yul\":5721:5722   */\n  0x01\n    /* \"#utility.yul\":5716:6334   */\n  dup2\n  eq\n  tag_110\n  jumpi\n    /* \"#utility.yul\":6378:6379   */\n  0x00\n    /* \"#utility.yul\":6395:6401   */\n  dup5\n    /* \"#utility.yul\":6392:6469   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":6444:6453   */\n  dup3\n    /* \"#utility.yul\":6439:6442   */\n  dup8\n    /* \"#utility.yul\":6435:6454   */\n  add\n    /* \"#utility.yul\":6429:6455   */\n  mload\n    /* \"#utility.yul\":6420:6455   */\n  swap1\n  pop\n    /* \"#utility.yul\":6392:6469   */\ntag_111:\n    /* \"#utility.yul\":6495:6562   */\n  tag_112\n    /* \"#utility.yul\":6555:6561   */\n  dup6\n    /* \"#utility.yul\":6548:6553   */\n  dup3\n    /* \"#utility.yul\":6495:6562   */\n  tag_40\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":6489:6493   */\n  dup7\n    /* \"#utility.yul\":6482:6563   */\n  sstore\n    /* \"#utility.yul\":6351:6573   */\n  pop\n    /* \"#utility.yul\":5686:6573   */\n  jump(tag_109)\n    /* \"#utility.yul\":5716:6334   */\ntag_110:\n    /* \"#utility.yul\":5768:5772   */\n  0x1f\n    /* \"#utility.yul\":5764:5773   */\n  not\n    /* \"#utility.yul\":5756:5762   */\n  dup5\n    /* \"#utility.yul\":5752:5774   */\n  and\n    /* \"#utility.yul\":5802:5839   */\n  tag_113\n    /* \"#utility.yul\":5834:5838   */\n  dup7\n    /* \"#utility.yul\":5802:5839   */\n  tag_25\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5861:5862   */\n  0x00\n    /* \"#utility.yul\":5875:6083   */\ntag_114:\n    /* \"#utility.yul\":5889:5896   */\n  dup3\n    /* \"#utility.yul\":5886:5887   */\n  dup2\n    /* \"#utility.yul\":5883:5897   */\n  lt\n    /* \"#utility.yul\":5875:6083   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":5968:5977   */\n  dup5\n    /* \"#utility.yul\":5963:5966   */\n  dup10\n    /* \"#utility.yul\":5959:5978   */\n  add\n    /* \"#utility.yul\":5953:5979   */\n  mload\n    /* \"#utility.yul\":5945:5951   */\n  dup3\n    /* \"#utility.yul\":5938:5980   */\n  sstore\n    /* \"#utility.yul\":6019:6020   */\n  0x01\n    /* \"#utility.yul\":6011:6017   */\n  dup3\n    /* \"#utility.yul\":6007:6021   */\n  add\n    /* \"#utility.yul\":5997:6021   */\n  swap2\n  pop\n    /* \"#utility.yul\":6066:6068   */\n  0x20\n    /* \"#utility.yul\":6055:6064   */\n  dup6\n    /* \"#utility.yul\":6051:6069   */\n  add\n    /* \"#utility.yul\":6038:6069   */\n  swap5\n  pop\n    /* \"#utility.yul\":5912:5916   */\n  0x20\n    /* \"#utility.yul\":5909:5910   */\n  dup2\n    /* \"#utility.yul\":5905:5917   */\n  add\n    /* \"#utility.yul\":5900:5917   */\n  swap1\n  pop\n    /* \"#utility.yul\":5875:6083   */\n  jump(tag_114)\ntag_116:\n    /* \"#utility.yul\":6111:6117   */\n  dup7\n    /* \"#utility.yul\":6102:6109   */\n  dup4\n    /* \"#utility.yul\":6099:6118   */\n  lt\n    /* \"#utility.yul\":6096:6275   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6169:6178   */\n  dup5\n    /* \"#utility.yul\":6164:6167   */\n  dup10\n    /* \"#utility.yul\":6160:6179   */\n  add\n    /* \"#utility.yul\":6154:6180   */\n  mload\n    /* \"#utility.yul\":6212:6260   */\n  tag_118\n    /* \"#utility.yul\":6254:6258   */\n  0x1f\n    /* \"#utility.yul\":6246:6252   */\n  dup10\n    /* \"#utility.yul\":6242:6259   */\n  and\n    /* \"#utility.yul\":6231:6240   */\n  dup3\n    /* \"#utility.yul\":6212:6260   */\n  tag_39\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6204:6210   */\n  dup4\n    /* \"#utility.yul\":6197:6261   */\n  sstore\n    /* \"#utility.yul\":6119:6275   */\n  pop\n    /* \"#utility.yul\":6096:6275   */\ntag_117:\n    /* \"#utility.yul\":6321:6322   */\n  0x01\n    /* \"#utility.yul\":6317:6318   */\n  0x02\n    /* \"#utility.yul\":6309:6315   */\n  dup9\n    /* \"#utility.yul\":6305:6319   */\n  mul\n    /* \"#utility.yul\":6301:6323   */\n  add\n    /* \"#utility.yul\":6295:6299   */\n  dup9\n    /* \"#utility.yul\":6288:6324   */\n  sstore\n    /* \"#utility.yul\":5723:6334   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5686:6573   */\ntag_109:\n  pop\n    /* \"#utility.yul\":5276:6579   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5184:6579   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ProofOfClick.sol\":257:5771  contract POC is PaintswapVRFConsumer, ERC20 {... */\ntag_13:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x4c4fd4da8ae1c1f2895da0cdd646517e3d75688175eb5d33ccff8a0b8439df64\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ProofOfClick.sol\":257:5771  contract POC is PaintswapVRFConsumer, ERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x43270d56\n      gt\n      tag_30\n      jumpi\n      dup1\n      0x967372a3\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xc57981b5\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xc57981b5\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf68c2bfd\n      eq\n      tag_29\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x967372a3\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x998f1b80\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_25\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0x708666ad\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x708666ad\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8cd221c9\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x43270d56\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x47fec1a2\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x6641ea08\n      eq\n      tag_18\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0x23b872dd\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x33d608f1\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x33d608f1\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x36667e7f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x36bcf7d6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_35:\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2566c9ea\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0x18160ddd\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1d6ad8e2\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1d729c5a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1fe543e3\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_36:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x07621eca\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      revert(0x00, 0x00)\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ProofOfClick.sol\":523:551  uint256 public currentReward */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      revert(0x00, 0x00)\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      revert(0x00, 0x00)\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      revert(0x00, 0x00)\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ProofOfClick.sol\":2093:4025  function Click() external payable {... */\n    tag_6:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/ProofOfClick.sol\":5640:5768  function nextHalvingRound() external view returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      revert(0x00, 0x00)\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":3923:4105  function rawFulfillRandomWords(... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      revert(0x00, 0x00)\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      revert(0x00, 0x00)\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ProofOfClick.sol\":1143:1189  mapping(uint256 => uint256) public playerCount */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      revert(0x00, 0x00)\n    tag_75:\n      pop\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      revert(0x00, 0x00)\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ProofOfClick.sol\":1008:1065  uint32  public constant CALLBACK_GAS_LIMIT      = 200_000 */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      revert(0x00, 0x00)\n    tag_86:\n      pop\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ProofOfClick.sol\":763:818  uint256 public constant HALVING_INTERVAL_ROUNDS = 50050 */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      revert(0x00, 0x00)\n    tag_91:\n      pop\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ProofOfClick.sol\":696:756  uint256 public constant INITIAL_REWARD          = 666 * 1e18 */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      revert(0x00, 0x00)\n    tag_95:\n      pop\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ProofOfClick.sol\":4033:4678  function burn(uint256 amount) external {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      revert(0x00, 0x00)\n    tag_99:\n      pop\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"contracts/ProofOfClick.sol\":950:1001  uint256 public constant LIQUIDITY_SHARE         = 5 */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      revert(0x00, 0x00)\n    tag_103:\n      pop\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ProofOfClick.sol\":625:651  uint256 public lastRoundTs */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      revert(0x00, 0x00)\n    tag_107:\n      pop\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ProofOfClick.sol\":825:877  uint256 public constant ROUND_DURATION          = 60 */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      revert(0x00, 0x00)\n    tag_111:\n      pop\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ProofOfClick.sol\":658:687  address public liquidityVault */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      revert(0x00, 0x00)\n    tag_115:\n      pop\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      revert(0x00, 0x00)\n    tag_120:\n      pop\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      tag_124\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ProofOfClick.sol\":558:580  uint256 public roundId */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      revert(0x00, 0x00)\n    tag_126:\n      pop\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      revert(0x00, 0x00)\n    tag_130:\n      pop\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ProofOfClick.sol\":587:618  uint256 public lastHalvingRound */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      revert(0x00, 0x00)\n    tag_134:\n      pop\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ProofOfClick.sol\":1074:1136  mapping(uint256 => mapping(uint256 => address)) public players */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      revert(0x00, 0x00)\n    tag_138:\n      pop\n      tag_139\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      tag_142\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      revert(0x00, 0x00)\n    tag_144:\n      pop\n      tag_145\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ProofOfClick.sol\":884:943  uint256 public constant FEE                     = 0.1 ether */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      revert(0x00, 0x00)\n    tag_149:\n      pop\n      tag_150\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ProofOfClick.sol\":492:516  uint256 public maxSupply */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      revert(0x00, 0x00)\n    tag_153:\n      pop\n      tag_154\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      tag_156\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      revert(0x00, 0x00)\n    tag_157:\n      pop\n      tag_158\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      tag_161\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      tag_162\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ProofOfClick.sol\":5503:5632  function getPlayersCountInRound(uint256 _roundId) external view returns (uint256) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      revert(0x00, 0x00)\n    tag_163:\n      pop\n      tag_164\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_165\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_165:\n      tag_166\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      tag_167\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_171\n      swap1\n      tag_170\n      jump\t// in\n    tag_171:\n      dup1\n      iszero\n      tag_172\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_173\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_172)\n    tag_173:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_174:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_174\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":523:551  uint256 public currentReward */\n    tag_44:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":2093:4025  function Click() external payable {... */\n    tag_59:\n        /* \"contracts/ProofOfClick.sol\":934:943  0.1 ether */\n      0x016345785d8a0000\n        /* \"contracts/ProofOfClick.sol\":2142:2151  msg.value */\n      callvalue\n        /* \"contracts/ProofOfClick.sol\":2142:2157  msg.value < FEE */\n      lt\n        /* \"contracts/ProofOfClick.sol\":2138:2177  if (msg.value < FEE) revert FeeTooLow() */\n      iszero\n      tag_182\n      jumpi\n        /* \"contracts/ProofOfClick.sol\":2166:2177  FeeTooLow() */\n      mload(0x40)\n      0x732f941300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ProofOfClick.sol\":2138:2177  if (msg.value < FEE) revert FeeTooLow() */\n    tag_182:\n        /* \"contracts/ProofOfClick.sol\":2190:2203  bool timeIsUp */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":875:877  60 */\n      0x3c\n        /* \"contracts/ProofOfClick.sol\":2226:2237  lastRoundTs */\n      sload(0x09)\n        /* \"contracts/ProofOfClick.sol\":2226:2254  lastRoundTs + ROUND_DURATION */\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"contracts/ProofOfClick.sol\":2207:2222  block.timestamp */\n      timestamp\n        /* \"contracts/ProofOfClick.sol\":2207:2254  block.timestamp >= lastRoundTs + ROUND_DURATION */\n      lt\n      iszero\n        /* \"contracts/ProofOfClick.sol\":2190:2255  bool timeIsUp = (block.timestamp >= lastRoundTs + ROUND_DURATION) */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":2266:2281  bool hasPlayers */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":2308:2309  0 */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":2285:2296  playerCount */\n      0x0c\n        /* \"contracts/ProofOfClick.sol\":2285:2305  playerCount[roundId] */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":2297:2304  roundId */\n      sload(0x07)\n        /* \"contracts/ProofOfClick.sol\":2285:2305  playerCount[roundId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ProofOfClick.sol\":2285:2309  playerCount[roundId] > 0 */\n      gt\n        /* \"contracts/ProofOfClick.sol\":2266:2310  bool hasPlayers = (playerCount[roundId] > 0) */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":2327:2335  timeIsUp */\n      dup2\n        /* \"contracts/ProofOfClick.sol\":2327:2349  timeIsUp && hasPlayers */\n      dup1\n      iszero\n      tag_185\n      jumpi\n      pop\n        /* \"contracts/ProofOfClick.sol\":2339:2349  hasPlayers */\n      dup1\n        /* \"contracts/ProofOfClick.sol\":2327:2349  timeIsUp && hasPlayers */\n    tag_185:\n        /* \"contracts/ProofOfClick.sol\":2323:3449  if (timeIsUp && hasPlayers) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"contracts/ProofOfClick.sol\":2366:2380  uint256 vrfFee */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":2408:2423  _vrfCoordinator */\n      immutable(\"0x4c4fd4da8ae1c1f2895da0cdd646517e3d75688175eb5d33ccff8a0b8439df64\")\n        /* \"contracts/ProofOfClick.sol\":2383:2452  IPaintswapVRFCoordinator(_vrfCoordinator).calculateRequestPriceNative */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc66d3d18\n        /* \"contracts/ProofOfClick.sol\":1058:1065  200_000 */\n      0x030d40\n        /* \"contracts/ProofOfClick.sol\":2383:2472  IPaintswapVRFCoordinator(_vrfCoordinator).calculateRequestPriceNative(CALLBACK_GAS_LIMIT) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"contracts/ProofOfClick.sol\":2366:2472  uint256 vrfFee = IPaintswapVRFCoordinator(_vrfCoordinator).calculateRequestPriceNative(CALLBACK_GAS_LIMIT) */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":2515:2521  vrfFee */\n      dup1\n        /* \"contracts/ProofOfClick.sol\":2491:2512  address(this).balance */\n      selfbalance\n        /* \"contracts/ProofOfClick.sol\":2491:2521  address(this).balance < vrfFee */\n      lt\n        /* \"contracts/ProofOfClick.sol\":2487:2559  if (address(this).balance < vrfFee) revert InsufficientContractBalance() */\n      iszero\n      tag_193\n      jumpi\n        /* \"contracts/ProofOfClick.sol\":2530:2559  InsufficientContractBalance() */\n      mload(0x40)\n      0x786e0a9900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ProofOfClick.sol\":2487:2559  if (address(this).balance < vrfFee) revert InsufficientContractBalance() */\n    tag_193:\n        /* \"contracts/ProofOfClick.sol\":2576:2589  uint256 count */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":2592:2603  playerCount */\n      0x0c\n        /* \"contracts/ProofOfClick.sol\":2592:2612  playerCount[roundId] */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":2604:2611  roundId */\n      sload(0x07)\n        /* \"contracts/ProofOfClick.sol\":2592:2612  playerCount[roundId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ProofOfClick.sol\":2576:2612  uint256 count = playerCount[roundId] */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":2627:2649  uint256 rewardForRound */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":2652:2666  rewardPerRound */\n      0x0e\n        /* \"contracts/ProofOfClick.sol\":2652:2675  rewardPerRound[roundId] */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":2667:2674  roundId */\n      sload(0x07)\n        /* \"contracts/ProofOfClick.sol\":2652:2675  rewardPerRound[roundId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ProofOfClick.sol\":2627:2675  uint256 rewardForRound = rewardPerRound[roundId] */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":2712:2713  0 */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":2694:2708  rewardForRound */\n      dup2\n        /* \"contracts/ProofOfClick.sol\":2694:2713  rewardForRound == 0 */\n      sub\n        /* \"contracts/ProofOfClick.sol\":2690:2745  if (rewardForRound == 0) rewardForRound = currentReward */\n      tag_194\n      jumpi\n        /* \"contracts/ProofOfClick.sol\":2732:2745  currentReward */\n      sload(0x06)\n        /* \"contracts/ProofOfClick.sol\":2715:2745  rewardForRound = currentReward */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":2690:2745  if (rewardForRound == 0) rewardForRound = currentReward */\n    tag_194:\n        /* \"contracts/ProofOfClick.sol\":2762:2779  uint256 requestId */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":2807:2822  _vrfCoordinator */\n      immutable(\"0x4c4fd4da8ae1c1f2895da0cdd646517e3d75688175eb5d33ccff8a0b8439df64\")\n        /* \"contracts/ProofOfClick.sol\":2782:2870  IPaintswapVRFCoordinator(_vrfCoordinator)... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcb9bb27f\n        /* \"contracts/ProofOfClick.sol\":2878:2884  vrfFee */\n      dup6\n        /* \"contracts/ProofOfClick.sol\":1058:1065  200_000 */\n      0x030d40\n        /* \"contracts/ProofOfClick.sol\":2949:2950  1 */\n      0x01\n        /* \"contracts/ProofOfClick.sol\":2981:2985  this */\n      address\n        /* \"contracts/ProofOfClick.sol\":2782:3005  IPaintswapVRFCoordinator(_vrfCoordinator)... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_199:\n        /* \"contracts/ProofOfClick.sol\":2762:3005  uint256 requestId = IPaintswapVRFCoordinator(_vrfCoordinator)... */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":3052:3059  roundId */\n      sload(0x07)\n        /* \"contracts/ProofOfClick.sol\":3022:3038  requestToRoundId */\n      0x0d\n        /* \"contracts/ProofOfClick.sol\":3022:3049  requestToRoundId[requestId] */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":3039:3048  requestId */\n      dup4\n        /* \"contracts/ProofOfClick.sol\":3022:3049  requestToRoundId[requestId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ProofOfClick.sol\":3022:3059  requestToRoundId[requestId] = roundId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ProofOfClick.sol\":3100:3114  rewardForRound */\n      dup2\n        /* \"contracts/ProofOfClick.sol\":3074:3088  rewardPerRound */\n      0x0e\n        /* \"contracts/ProofOfClick.sol\":3074:3097  rewardPerRound[roundId] */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":3089:3096  roundId */\n      sload(0x07)\n        /* \"contracts/ProofOfClick.sol\":3074:3097  rewardPerRound[roundId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ProofOfClick.sol\":3074:3114  rewardPerRound[roundId] = rewardForRound */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ProofOfClick.sol\":3160:3167  roundId */\n      sload(0x07)\n        /* \"contracts/ProofOfClick.sol\":3149:3158  requestId */\n      dup2\n        /* \"contracts/ProofOfClick.sol\":3134:3191  RoundRequested(requestId, roundId, count, rewardForRound) */\n      0xa77018cfa060263f92c58b53277f73d2eade9d69e943460421e26e648eed9f33\n        /* \"contracts/ProofOfClick.sol\":3169:3174  count */\n      dup6\n        /* \"contracts/ProofOfClick.sol\":3176:3190  rewardForRound */\n      dup6\n        /* \"contracts/ProofOfClick.sol\":3134:3191  RoundRequested(requestId, roundId, count, rewardForRound) */\n      mload(0x40)\n      tag_200\n      swap3\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ProofOfClick.sol\":813:818  50050 */\n      0xc382\n        /* \"contracts/ProofOfClick.sol\":3223:3239  lastHalvingRound */\n      sload(0x08)\n        /* \"contracts/ProofOfClick.sol\":3223:3265  lastHalvingRound + HALVING_INTERVAL_ROUNDS */\n      tag_202\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_202:\n        /* \"contracts/ProofOfClick.sol\":3212:3219  roundId */\n      sload(0x07)\n        /* \"contracts/ProofOfClick.sol\":3212:3265  roundId >= lastHalvingRound + HALVING_INTERVAL_ROUNDS */\n      lt\n        /* \"contracts/ProofOfClick.sol\":3208:3365  if (roundId >= lastHalvingRound + HALVING_INTERVAL_ROUNDS) {... */\n      tag_203\n      jumpi\n        /* \"contracts/ProofOfClick.sol\":3303:3304  2 */\n      0x02\n        /* \"contracts/ProofOfClick.sol\":3286:3299  currentReward */\n      0x06\n      0x00\n        /* \"contracts/ProofOfClick.sol\":3286:3304  currentReward /= 2 */\n      dup3\n      dup3\n      sload\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ProofOfClick.sol\":3342:3349  roundId */\n      sload(0x07)\n        /* \"contracts/ProofOfClick.sol\":3323:3339  lastHalvingRound */\n      0x08\n        /* \"contracts/ProofOfClick.sol\":3323:3349  lastHalvingRound = roundId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ProofOfClick.sol\":3208:3365  if (roundId >= lastHalvingRound + HALVING_INTERVAL_ROUNDS) {... */\n    tag_203:\n        /* \"contracts/ProofOfClick.sol\":3392:3393  1 */\n      0x01\n        /* \"contracts/ProofOfClick.sol\":3381:3388  roundId */\n      0x07\n      0x00\n        /* \"contracts/ProofOfClick.sol\":3381:3393  roundId += 1 */\n      dup3\n      dup3\n      sload\n      tag_206\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_206:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ProofOfClick.sol\":3422:3437  block.timestamp */\n      timestamp\n        /* \"contracts/ProofOfClick.sol\":3408:3419  lastRoundTs */\n      0x09\n        /* \"contracts/ProofOfClick.sol\":3408:3437  lastRoundTs = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ProofOfClick.sol\":2351:3449  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ProofOfClick.sol\":2323:3449  if (timeIsUp && hasPlayers) {... */\n    tag_186:\n        /* \"contracts/ProofOfClick.sol\":3461:3472  uint256 idx */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":3475:3486  playerCount */\n      0x0c\n        /* \"contracts/ProofOfClick.sol\":3475:3495  playerCount[roundId] */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":3487:3494  roundId */\n      sload(0x07)\n        /* \"contracts/ProofOfClick.sol\":3475:3495  playerCount[roundId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ProofOfClick.sol\":3461:3495  uint256 idx = playerCount[roundId] */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":3530:3540  msg.sender */\n      caller\n        /* \"contracts/ProofOfClick.sol\":3506:3513  players */\n      0x0b\n        /* \"contracts/ProofOfClick.sol\":3506:3522  players[roundId] */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":3514:3521  roundId */\n      sload(0x07)\n        /* \"contracts/ProofOfClick.sol\":3506:3522  players[roundId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ProofOfClick.sol\":3506:3527  players[roundId][idx] */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":3523:3526  idx */\n      dup4\n        /* \"contracts/ProofOfClick.sol\":3506:3527  players[roundId][idx] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ProofOfClick.sol\":3506:3540  players[roundId][idx] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ProofOfClick.sol\":3580:3581  1 */\n      0x01\n        /* \"contracts/ProofOfClick.sol\":3574:3577  idx */\n      dup2\n        /* \"contracts/ProofOfClick.sol\":3574:3581  idx + 1 */\n      tag_207\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_207:\n        /* \"contracts/ProofOfClick.sol\":3551:3562  playerCount */\n      0x0c\n        /* \"contracts/ProofOfClick.sol\":3551:3571  playerCount[roundId] */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":3563:3570  roundId */\n      sload(0x07)\n        /* \"contracts/ProofOfClick.sol\":3551:3571  playerCount[roundId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ProofOfClick.sol\":3551:3581  playerCount[roundId] = idx + 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ProofOfClick.sol\":3616:3626  msg.sender */\n      caller\n        /* \"contracts/ProofOfClick.sol\":3599:3627  Clicked(roundId, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ProofOfClick.sol\":3607:3614  roundId */\n      sload(0x07)\n        /* \"contracts/ProofOfClick.sol\":3599:3627  Clicked(roundId, msg.sender) */\n      0x66f19fb732c3e13893ea1bb5573839d7d0b41effc0aef6b59283c15ea5a0dbf9\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ProofOfClick.sol\":3640:3663  uint256 liquidityAmount */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":3692:3695  100 */\n      0x64\n        /* \"contracts/ProofOfClick.sol\":1000:1001  5 */\n      0x05\n        /* \"contracts/ProofOfClick.sol\":934:943  0.1 ether */\n      0x016345785d8a0000\n        /* \"contracts/ProofOfClick.sol\":3667:3688  FEE * LIQUIDITY_SHARE */\n      tag_208\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"contracts/ProofOfClick.sol\":3666:3695  (FEE * LIQUIDITY_SHARE) / 100 */\n      tag_210\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_210:\n        /* \"contracts/ProofOfClick.sol\":3640:3695  uint256 liquidityAmount = (FEE * LIQUIDITY_SHARE) / 100 */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":3707:3714  bool ok */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":3728:3742  liquidityVault */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ProofOfClick.sol\":3720:3748  payable(liquidityVault).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ProofOfClick.sol\":3756:3771  liquidityAmount */\n      dup3\n        /* \"contracts/ProofOfClick.sol\":3720:3776  payable(liquidityVault).call{value: liquidityAmount}(\"\") */\n      mload(0x40)\n      tag_211\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_215\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_214)\n    tag_215:\n      0x60\n      swap2\n      pop\n    tag_214:\n      pop\n        /* \"contracts/ProofOfClick.sol\":3706:3776  (bool ok, ) = payable(liquidityVault).call{value: liquidityAmount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":3792:3794  ok */\n      dup1\n        /* \"contracts/ProofOfClick.sol\":3787:3822  if (!ok) revert FeeTransferFailed() */\n      tag_216\n      jumpi\n        /* \"contracts/ProofOfClick.sol\":3803:3822  FeeTransferFailed() */\n      mload(0x40)\n      0x4033e4e300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ProofOfClick.sol\":3787:3822  if (!ok) revert FeeTransferFailed() */\n    tag_216:\n        /* \"contracts/ProofOfClick.sol\":3835:3849  uint256 change */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":934:943  0.1 ether */\n      0x016345785d8a0000\n        /* \"contracts/ProofOfClick.sol\":3852:3861  msg.value */\n      callvalue\n        /* \"contracts/ProofOfClick.sol\":3852:3867  msg.value - FEE */\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"contracts/ProofOfClick.sol\":3835:3867  uint256 change = msg.value - FEE */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":3891:3892  0 */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":3882:3888  change */\n      dup2\n        /* \"contracts/ProofOfClick.sol\":3882:3892  change > 0 */\n      gt\n        /* \"contracts/ProofOfClick.sol\":3878:4018  if (change > 0) {... */\n      iszero\n      tag_219\n      jumpi\n        /* \"contracts/ProofOfClick.sol\":3926:3936  msg.sender */\n      caller\n        /* \"contracts/ProofOfClick.sol\":3918:3942  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ProofOfClick.sol\":3950:3956  change */\n      dup2\n        /* \"contracts/ProofOfClick.sol\":3918:3961  payable(msg.sender).call{value: change}(\"\") */\n      mload(0x40)\n      tag_220\n      swap1\n      tag_212\n      jump\t// in\n    tag_220:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_223\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_222)\n    tag_223:\n      0x60\n      swap2\n      pop\n    tag_222:\n      pop\n        /* \"contracts/ProofOfClick.sol\":3909:3961  (ok, ) = payable(msg.sender).call{value: change}(\"\") */\n      pop\n      dup1\n      swap3\n      pop\n      pop\n        /* \"contracts/ProofOfClick.sol\":3981:3983  ok */\n      dup2\n        /* \"contracts/ProofOfClick.sol\":3976:4006  if (!ok) revert RefundFailed() */\n      tag_224\n      jumpi\n        /* \"contracts/ProofOfClick.sol\":3992:4006  RefundFailed() */\n      mload(0x40)\n      0xf0c49d4400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ProofOfClick.sol\":3976:4006  if (!ok) revert RefundFailed() */\n    tag_224:\n        /* \"contracts/ProofOfClick.sol\":3878:4018  if (change > 0) {... */\n    tag_219:\n        /* \"contracts/ProofOfClick.sol\":2127:4025  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ProofOfClick.sol\":2093:4025  function Click() external payable {... */\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":5640:5768  function nextHalvingRound() external view returns (uint256) {... */\n    tag_62:\n        /* \"contracts/ProofOfClick.sol\":5691:5698  uint256 */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":813:818  50050 */\n      0xc382\n        /* \"contracts/ProofOfClick.sol\":5718:5734  lastHalvingRound */\n      sload(0x08)\n        /* \"contracts/ProofOfClick.sol\":5718:5760  lastHalvingRound + HALVING_INTERVAL_ROUNDS */\n      tag_226\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_226:\n        /* \"contracts/ProofOfClick.sol\":5711:5760  return lastHalvingRound + HALVING_INTERVAL_ROUNDS */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":5640:5768  function nextHalvingRound() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":3923:4105  function rawFulfillRandomWords(... */\n    tag_68:\n        /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":1291:1306  _vrfCoordinator */\n      immutable(\"0x4c4fd4da8ae1c1f2895da0cdd646517e3d75688175eb5d33ccff8a0b8439df64\")\n        /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":1269:1307  msg.sender != address(_vrfCoordinator) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":1269:1279  msg.sender */\n      caller\n        /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":1269:1307  msg.sender != address(_vrfCoordinator) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":1265:1387  if (msg.sender != address(_vrfCoordinator)) {... */\n      tag_228\n      jumpi\n        /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":1343:1353  msg.sender */\n      caller\n        /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":1363:1378  _vrfCoordinator */\n      immutable(\"0x4c4fd4da8ae1c1f2895da0cdd646517e3d75688175eb5d33ccff8a0b8439df64\")\n        /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":1324:1380  OnlyVRFCoordinator(msg.sender, address(_vrfCoordinator)) */\n      mload(0x40)\n      0x20138a9f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap3\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":1265:1387  if (msg.sender != address(_vrfCoordinator)) {... */\n    tag_228:\n        /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":4057:4100  _fulfillRandomWords(requestId, randomWords) */\n      tag_232\n        /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":4077:4086  requestId */\n      dup4\n        /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":4088:4099  randomWords */\n      dup4\n      dup4\n        /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":4057:4076  _fulfillRandomWords */\n      tag_233\n        /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":4057:4100  _fulfillRandomWords(requestId, randomWords) */\n      jump\t// in\n    tag_232:\n        /* \"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":3923:4105  function rawFulfillRandomWords(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4798  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4811  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4813  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4845:4852  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_238\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4906:4917  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":1143:1189  mapping(uint256 => uint256) public playerCount */\n    tag_79:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":1008:1065  uint32  public constant CALLBACK_GAS_LIMIT      = 200_000 */\n    tag_88:\n        /* \"contracts/ProofOfClick.sol\":1058:1065  200_000 */\n      0x030d40\n        /* \"contracts/ProofOfClick.sol\":1008:1065  uint32  public constant CALLBACK_GAS_LIMIT      = 200_000 */\n      dup2\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":763:818  uint256 public constant HALVING_INTERVAL_ROUNDS = 50050 */\n    tag_93:\n        /* \"contracts/ProofOfClick.sol\":813:818  50050 */\n      0xc382\n        /* \"contracts/ProofOfClick.sol\":763:818  uint256 public constant HALVING_INTERVAL_ROUNDS = 50050 */\n      dup2\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":696:756  uint256 public constant INITIAL_REWARD          = 666 * 1e18 */\n    tag_97:\n        /* \"contracts/ProofOfClick.sol\":746:756  666 * 1e18 */\n      0x241a9b4f617a280000\n        /* \"contracts/ProofOfClick.sol\":696:756  uint256 public constant INITIAL_REWARD          = 666 * 1e18 */\n      dup2\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":4033:4678  function burn(uint256 amount) external {... */\n    tag_102:\n        /* \"contracts/ProofOfClick.sol\":4097:4098  0 */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":4087:4093  amount */\n      dup2\n        /* \"contracts/ProofOfClick.sol\":4087:4098  amount == 0 */\n      sub\n        /* \"contracts/ProofOfClick.sol\":4083:4122  if (amount == 0) revert NothingToBurn() */\n      tag_242\n      jumpi\n        /* \"contracts/ProofOfClick.sol\":4107:4122  NothingToBurn() */\n      mload(0x40)\n      0x98642b8600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ProofOfClick.sol\":4083:4122  if (amount == 0) revert NothingToBurn() */\n    tag_242:\n        /* \"contracts/ProofOfClick.sol\":4135:4158  uint256 contractBalance */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":4161:4182  address(this).balance */\n      selfbalance\n        /* \"contracts/ProofOfClick.sol\":4135:4182  uint256 contractBalance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":4216:4217  0 */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":4197:4212  contractBalance */\n      dup2\n        /* \"contracts/ProofOfClick.sol\":4197:4217  contractBalance == 0 */\n      sub\n        /* \"contracts/ProofOfClick.sol\":4193:4255  if (contractBalance == 0) revert InsufficientContractBalance() */\n      tag_243\n      jumpi\n        /* \"contracts/ProofOfClick.sol\":4226:4255  InsufficientContractBalance() */\n      mload(0x40)\n      0x786e0a9900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ProofOfClick.sol\":4193:4255  if (contractBalance == 0) revert InsufficientContractBalance() */\n    tag_243:\n        /* \"contracts/ProofOfClick.sol\":4268:4282  uint256 supply */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":4285:4298  totalSupply() */\n      tag_244\n        /* \"contracts/ProofOfClick.sol\":4285:4296  totalSupply */\n      tag_56\n        /* \"contracts/ProofOfClick.sol\":4285:4298  totalSupply() */\n      jump\t// in\n    tag_244:\n        /* \"contracts/ProofOfClick.sol\":4268:4298  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":4323:4324  0 */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":4313:4319  supply */\n      dup2\n        /* \"contracts/ProofOfClick.sol\":4313:4324  supply == 0 */\n      sub\n        /* \"contracts/ProofOfClick.sol\":4309:4362  if (supply == 0) revert InsufficientContractBalance() */\n      tag_245\n      jumpi\n        /* \"contracts/ProofOfClick.sol\":4333:4362  InsufficientContractBalance() */\n      mload(0x40)\n      0x786e0a9900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ProofOfClick.sol\":4309:4362  if (supply == 0) revert InsufficientContractBalance() */\n    tag_245:\n        /* \"contracts/ProofOfClick.sol\":4375:4389  uint256 ethOut */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":4421:4427  supply */\n      dup2\n        /* \"contracts/ProofOfClick.sol\":4402:4417  contractBalance */\n      dup4\n        /* \"contracts/ProofOfClick.sol\":4393:4399  amount */\n      dup6\n        /* \"contracts/ProofOfClick.sol\":4393:4417  amount * contractBalance */\n      tag_246\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_246:\n        /* \"contracts/ProofOfClick.sol\":4392:4427  (amount * contractBalance) / supply */\n      tag_247\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_247:\n        /* \"contracts/ProofOfClick.sol\":4375:4427  uint256 ethOut = (amount * contractBalance) / supply */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":4440:4465  _burn(msg.sender, amount) */\n      tag_248\n        /* \"contracts/ProofOfClick.sol\":4446:4456  msg.sender */\n      caller\n        /* \"contracts/ProofOfClick.sol\":4458:4464  amount */\n      dup6\n        /* \"contracts/ProofOfClick.sol\":4440:4445  _burn */\n      tag_249\n        /* \"contracts/ProofOfClick.sol\":4440:4465  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/ProofOfClick.sol\":4489:4495  amount */\n      dup4\n        /* \"contracts/ProofOfClick.sol\":4476:4485  maxSupply */\n      0x05\n      0x00\n        /* \"contracts/ProofOfClick.sol\":4476:4495  maxSupply -= amount */\n      dup3\n      dup3\n      sload\n      tag_250\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_250:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ProofOfClick.sol\":4509:4521  bool success */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":4535:4545  msg.sender */\n      caller\n        /* \"contracts/ProofOfClick.sol\":4527:4551  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ProofOfClick.sol\":4559:4565  ethOut */\n      dup3\n        /* \"contracts/ProofOfClick.sol\":4527:4570  payable(msg.sender).call{value: ethOut}(\"\") */\n      mload(0x40)\n      tag_251\n      swap1\n      tag_212\n      jump\t// in\n    tag_251:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_254\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_253)\n    tag_254:\n      0x60\n      swap2\n      pop\n    tag_253:\n      pop\n        /* \"contracts/ProofOfClick.sol\":4508:4570  (bool success, ) = payable(msg.sender).call{value: ethOut}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":4586:4593  success */\n      dup1\n        /* \"contracts/ProofOfClick.sol\":4581:4618  if (!success) revert TransferFailed() */\n      tag_255\n      jumpi\n        /* \"contracts/ProofOfClick.sol\":4602:4618  TransferFailed() */\n      mload(0x40)\n      0x90b8ec1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ProofOfClick.sol\":4581:4618  if (!success) revert TransferFailed() */\n    tag_255:\n        /* \"contracts/ProofOfClick.sol\":4643:4653  msg.sender */\n      caller\n        /* \"contracts/ProofOfClick.sol\":4636:4670  Burned(msg.sender, amount, ethOut) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23ff0e75edf108e3d0392d92e13e8c8a868ef19001bd49f9e94876dc46dff87f\n        /* \"contracts/ProofOfClick.sol\":4655:4661  amount */\n      dup7\n        /* \"contracts/ProofOfClick.sol\":4663:4669  ethOut */\n      dup5\n        /* \"contracts/ProofOfClick.sol\":4636:4670  Burned(msg.sender, amount, ethOut) */\n      mload(0x40)\n      tag_256\n      swap3\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ProofOfClick.sol\":4072:4678  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ProofOfClick.sol\":4033:4678  function burn(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":950:1001  uint256 public constant LIQUIDITY_SHARE         = 5 */\n    tag_105:\n        /* \"contracts/ProofOfClick.sol\":1000:1001  5 */\n      0x05\n        /* \"contracts/ProofOfClick.sol\":950:1001  uint256 public constant LIQUIDITY_SHARE         = 5 */\n      dup2\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":625:651  uint256 public lastRoundTs */\n    tag_109:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":825:877  uint256 public constant ROUND_DURATION          = 60 */\n    tag_113:\n        /* \"contracts/ProofOfClick.sol\":875:877  60 */\n      0x3c\n        /* \"contracts/ProofOfClick.sol\":825:877  uint256 public constant ROUND_DURATION          = 60 */\n      dup2\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":658:687  address public liquidityVault */\n    tag_117:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":558:580  uint256 public roundId */\n    tag_128:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_259\n      swap1\n      tag_170\n      jump\t// in\n    tag_259:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_260\n      swap1\n      tag_170\n      jump\t// in\n    tag_260:\n      dup1\n      iszero\n      tag_261\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_262\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_261)\n    tag_262:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_263:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_263\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_261:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":587:618  uint256 public lastHalvingRound */\n    tag_136:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":1074:1136  mapping(uint256 => mapping(uint256 => address)) public players */\n    tag_142:\n      mstore(0x20, 0x0b)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3342  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3355  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3357  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3411:3415  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3404:3415  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":884:943  uint256 public constant FEE                     = 0.1 ether */\n    tag_151:\n        /* \"contracts/ProofOfClick.sol\":934:943  0.1 ether */\n      0x016345785d8a0000\n        /* \"contracts/ProofOfClick.sol\":884:943  uint256 public constant FEE                     = 0.1 ether */\n      dup2\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":492:516  uint256 public maxSupply */\n    tag_155:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":5503:5632  function getPlayersCountInRound(uint256 _roundId) external view returns (uint256) {... */\n    tag_166:\n        /* \"contracts/ProofOfClick.sol\":5576:5583  uint256 */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":5603:5614  playerCount */\n      0x0c\n        /* \"contracts/ProofOfClick.sol\":5603:5624  playerCount[_roundId] */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":5615:5623  _roundId */\n      dup4\n        /* \"contracts/ProofOfClick.sol\":5603:5624  playerCount[_roundId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ProofOfClick.sol\":5596:5624  return playerCount[_roundId] */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":5503:5632  function getPlayersCountInRound(uint256 _roundId) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ProofOfClick.sol\":4686:5495  function _fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal override {... */\n    tag_233:\n        /* \"contracts/ProofOfClick.sol\":4795:4816  uint256 resolvedRound */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":4819:4835  requestToRoundId */\n      0x0d\n        /* \"contracts/ProofOfClick.sol\":4819:4846  requestToRoundId[requestId] */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":4836:4845  requestId */\n      dup6\n        /* \"contracts/ProofOfClick.sol\":4819:4846  requestToRoundId[requestId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ProofOfClick.sol\":4795:4846  uint256 resolvedRound = requestToRoundId[requestId] */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":4864:4880  requestToRoundId */\n      0x0d\n        /* \"contracts/ProofOfClick.sol\":4864:4891  requestToRoundId[requestId] */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":4881:4890  requestId */\n      dup6\n        /* \"contracts/ProofOfClick.sol\":4864:4891  requestToRoundId[requestId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ProofOfClick.sol\":4857:4891  delete requestToRoundId[requestId] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/ProofOfClick.sol\":4904:4913  uint256 n */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":4916:4927  playerCount */\n      0x0c\n        /* \"contracts/ProofOfClick.sol\":4916:4942  playerCount[resolvedRound] */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":4928:4941  resolvedRound */\n      dup4\n        /* \"contracts/ProofOfClick.sol\":4916:4942  playerCount[resolvedRound] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ProofOfClick.sol\":4904:4942  uint256 n = playerCount[resolvedRound] */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":4961:4962  0 */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":4957:4958  n */\n      dup2\n        /* \"contracts/ProofOfClick.sol\":4957:4962  n > 0 */\n      gt\n        /* \"contracts/ProofOfClick.sol\":4953:5488  if (n > 0) {... */\n      iszero\n      tag_274\n      jumpi\n        /* \"contracts/ProofOfClick.sol\":4979:4990  uint256 idx */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":5010:5011  n */\n      dup2\n        /* \"contracts/ProofOfClick.sol\":4993:5004  randomWords */\n      dup6\n      dup6\n        /* \"contracts/ProofOfClick.sol\":5005:5006  0 */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":4993:5007  randomWords[0] */\n      dup2\n      dup2\n      lt\n      tag_275\n      jumpi\n      tag_276\n      tag_277\n      jump\t// in\n    tag_276:\n    tag_275:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ProofOfClick.sol\":4993:5011  randomWords[0] % n */\n      tag_278\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"contracts/ProofOfClick.sol\":4979:5011  uint256 idx = randomWords[0] % n */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":5026:5040  address winner */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":5043:5050  players */\n      0x0b\n        /* \"contracts/ProofOfClick.sol\":5043:5065  players[resolvedRound] */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":5051:5064  resolvedRound */\n      dup6\n        /* \"contracts/ProofOfClick.sol\":5043:5065  players[resolvedRound] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ProofOfClick.sol\":5043:5070  players[resolvedRound][idx] */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":5066:5069  idx */\n      dup4\n        /* \"contracts/ProofOfClick.sol\":5043:5070  players[resolvedRound][idx] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ProofOfClick.sol\":5026:5070  address winner = players[resolvedRound][idx] */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":5087:5101  uint256 reward */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":5104:5118  rewardPerRound */\n      0x0e\n        /* \"contracts/ProofOfClick.sol\":5104:5133  rewardPerRound[resolvedRound] */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":5119:5132  resolvedRound */\n      dup7\n        /* \"contracts/ProofOfClick.sol\":5104:5133  rewardPerRound[resolvedRound] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ProofOfClick.sol\":5087:5133  uint256 reward = rewardPerRound[resolvedRound] */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":5162:5163  0 */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":5152:5158  reward */\n      dup2\n        /* \"contracts/ProofOfClick.sol\":5152:5163  reward == 0 */\n      sub\n        /* \"contracts/ProofOfClick.sol\":5148:5187  if (reward == 0) reward = currentReward */\n      tag_280\n      jumpi\n        /* \"contracts/ProofOfClick.sol\":5174:5187  currentReward */\n      sload(0x06)\n        /* \"contracts/ProofOfClick.sol\":5165:5187  reward = currentReward */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":5148:5187  if (reward == 0) reward = currentReward */\n    tag_280:\n        /* \"contracts/ProofOfClick.sol\":5233:5242  maxSupply */\n      sload(0x05)\n        /* \"contracts/ProofOfClick.sol\":5224:5230  reward */\n      dup2\n        /* \"contracts/ProofOfClick.sol\":5208:5221  totalSupply() */\n      tag_281\n        /* \"contracts/ProofOfClick.sol\":5208:5219  totalSupply */\n      tag_56\n        /* \"contracts/ProofOfClick.sol\":5208:5221  totalSupply() */\n      jump\t// in\n    tag_281:\n        /* \"contracts/ProofOfClick.sol\":5208:5230  totalSupply() + reward */\n      tag_282\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_282:\n        /* \"contracts/ProofOfClick.sol\":5208:5242  totalSupply() + reward > maxSupply */\n      gt\n        /* \"contracts/ProofOfClick.sol\":5204:5313  if (totalSupply() + reward > maxSupply) {... */\n      iszero\n      tag_283\n      jumpi\n        /* \"contracts/ProofOfClick.sol\":5284:5297  totalSupply() */\n      tag_284\n        /* \"contracts/ProofOfClick.sol\":5284:5295  totalSupply */\n      tag_56\n        /* \"contracts/ProofOfClick.sol\":5284:5297  totalSupply() */\n      jump\t// in\n    tag_284:\n        /* \"contracts/ProofOfClick.sol\":5272:5281  maxSupply */\n      sload(0x05)\n        /* \"contracts/ProofOfClick.sol\":5272:5297  maxSupply - totalSupply() */\n      tag_285\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_285:\n        /* \"contracts/ProofOfClick.sol\":5263:5297  reward = maxSupply - totalSupply() */\n      swap1\n      pop\n        /* \"contracts/ProofOfClick.sol\":5204:5313  if (totalSupply() + reward > maxSupply) {... */\n    tag_283:\n        /* \"contracts/ProofOfClick.sol\":5340:5341  0 */\n      0x00\n        /* \"contracts/ProofOfClick.sol\":5331:5337  reward */\n      dup2\n        /* \"contracts/ProofOfClick.sol\":5331:5341  reward > 0 */\n      gt\n        /* \"contracts/ProofOfClick.sol\":5327:5477  if (reward > 0) {... */\n      iszero\n      tag_286\n      jumpi\n        /* \"contracts/ProofOfClick.sol\":5362:5383  _mint(winner, reward) */\n      tag_287\n        /* \"contracts/ProofOfClick.sol\":5368:5374  winner */\n      dup3\n        /* \"contracts/ProofOfClick.sol\":5376:5382  reward */\n      dup3\n        /* \"contracts/ProofOfClick.sol\":5362:5367  _mint */\n      tag_288\n        /* \"contracts/ProofOfClick.sol\":5362:5383  _mint(winner, reward) */\n      jump\t// in\n    tag_287:\n        /* \"contracts/ProofOfClick.sol\":5446:5452  winner */\n      dup2\n        /* \"contracts/ProofOfClick.sol\":5407:5461  WinnerMinted(requestId, resolvedRound, winner, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ProofOfClick.sol\":5431:5444  resolvedRound */\n      dup6\n        /* \"contracts/ProofOfClick.sol\":5420:5429  requestId */\n      dup10\n        /* \"contracts/ProofOfClick.sol\":5407:5461  WinnerMinted(requestId, resolvedRound, winner, reward) */\n      0xdd7933a060407298571fe36223f480ee3508053fdb7238a1fe246f52b62c8e73\n        /* \"contracts/ProofOfClick.sol\":5454:5460  reward */\n      dup5\n        /* \"contracts/ProofOfClick.sol\":5407:5461  WinnerMinted(requestId, resolvedRound, winner, reward) */\n      mload(0x40)\n      tag_289\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ProofOfClick.sol\":5327:5477  if (reward > 0) {... */\n    tag_286:\n        /* \"contracts/ProofOfClick.sol\":4964:5488  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/ProofOfClick.sol\":4953:5488  if (n > 0) {... */\n    tag_274:\n        /* \"contracts/ProofOfClick.sol\":4784:5495  {... */\n      pop\n      pop\n        /* \"contracts/ProofOfClick.sol\":4686:5495  function _fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10503:10520  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_302\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_303\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7977:7978  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7965  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8029:8030  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8002:8032  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      tag_307\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8067  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8077:8078  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8081:8086  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8059  _update */\n      tag_303\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_312\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_314\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_317\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      tag_318\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n      tag_303\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_321\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_321:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_322)\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_326)\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_327\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_327:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_328:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_329:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_330:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_331:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_332:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_374\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_328\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":711:782   */\n      tag_375\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_329\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_376\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_330\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":881:910   */\n      tag_377\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_331\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_41:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_379\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_332\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1319   */\n    tag_333:\n        /* \"#utility.yul\":1279:1286   */\n      0x00\n        /* \"#utility.yul\":1308:1313   */\n      dup2\n        /* \"#utility.yul\":1297:1313   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1319   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1325:1443   */\n    tag_334:\n        /* \"#utility.yul\":1412:1436   */\n      tag_382\n        /* \"#utility.yul\":1430:1435   */\n      dup2\n        /* \"#utility.yul\":1412:1436   */\n      tag_333\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":1407:1410   */\n      dup3\n        /* \"#utility.yul\":1400:1437   */\n      mstore\n        /* \"#utility.yul\":1325:1443   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1449:1671   */\n    tag_46:\n        /* \"#utility.yul\":1542:1546   */\n      0x00\n        /* \"#utility.yul\":1580:1582   */\n      0x20\n        /* \"#utility.yul\":1569:1578   */\n      dup3\n        /* \"#utility.yul\":1565:1583   */\n      add\n        /* \"#utility.yul\":1557:1583   */\n      swap1\n      pop\n        /* \"#utility.yul\":1593:1664   */\n      tag_384\n        /* \"#utility.yul\":1661:1662   */\n      0x00\n        /* \"#utility.yul\":1650:1659   */\n      dup4\n        /* \"#utility.yul\":1646:1663   */\n      add\n        /* \"#utility.yul\":1637:1643   */\n      dup5\n        /* \"#utility.yul\":1593:1664   */\n      tag_334\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":1449:1671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1758:1875   */\n    tag_336:\n        /* \"#utility.yul\":1867:1868   */\n      0x00\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1857:1869   */\n      revert\n        /* \"#utility.yul\":1881:1998   */\n    tag_337:\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      0x00\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":2004:2130   */\n    tag_338:\n        /* \"#utility.yul\":2041:2048   */\n      0x00\n        /* \"#utility.yul\":2081:2123   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2074:2079   */\n      dup3\n        /* \"#utility.yul\":2070:2124   */\n      and\n        /* \"#utility.yul\":2059:2124   */\n      swap1\n      pop\n        /* \"#utility.yul\":2004:2130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2136:2232   */\n    tag_339:\n        /* \"#utility.yul\":2173:2180   */\n      0x00\n        /* \"#utility.yul\":2202:2226   */\n      tag_390\n        /* \"#utility.yul\":2220:2225   */\n      dup3\n        /* \"#utility.yul\":2202:2226   */\n      tag_338\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":2191:2226   */\n      swap1\n      pop\n        /* \"#utility.yul\":2136:2232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2238:2360   */\n    tag_340:\n        /* \"#utility.yul\":2311:2335   */\n      tag_392\n        /* \"#utility.yul\":2329:2334   */\n      dup2\n        /* \"#utility.yul\":2311:2335   */\n      tag_339\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2304:2309   */\n      dup2\n        /* \"#utility.yul\":2301:2336   */\n      eq\n        /* \"#utility.yul\":2291:2354   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":2350:2351   */\n      0x00\n        /* \"#utility.yul\":2347:2348   */\n      0x00\n        /* \"#utility.yul\":2340:2352   */\n      revert\n        /* \"#utility.yul\":2291:2354   */\n    tag_393:\n        /* \"#utility.yul\":2238:2360   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2366:2505   */\n    tag_341:\n        /* \"#utility.yul\":2412:2417   */\n      0x00\n        /* \"#utility.yul\":2450:2456   */\n      dup2\n        /* \"#utility.yul\":2437:2457   */\n      calldataload\n        /* \"#utility.yul\":2428:2457   */\n      swap1\n      pop\n        /* \"#utility.yul\":2466:2499   */\n      tag_395\n        /* \"#utility.yul\":2493:2498   */\n      dup2\n        /* \"#utility.yul\":2466:2499   */\n      tag_340\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":2366:2505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:2633   */\n    tag_342:\n        /* \"#utility.yul\":2584:2608   */\n      tag_397\n        /* \"#utility.yul\":2602:2607   */\n      dup2\n        /* \"#utility.yul\":2584:2608   */\n      tag_333\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":2577:2582   */\n      dup2\n        /* \"#utility.yul\":2574:2609   */\n      eq\n        /* \"#utility.yul\":2564:2627   */\n      tag_398\n      jumpi\n        /* \"#utility.yul\":2623:2624   */\n      0x00\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2613:2625   */\n      revert\n        /* \"#utility.yul\":2564:2627   */\n    tag_398:\n        /* \"#utility.yul\":2511:2633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2639:2778   */\n    tag_343:\n        /* \"#utility.yul\":2685:2690   */\n      0x00\n        /* \"#utility.yul\":2723:2729   */\n      dup2\n        /* \"#utility.yul\":2710:2730   */\n      calldataload\n        /* \"#utility.yul\":2701:2730   */\n      swap1\n      pop\n        /* \"#utility.yul\":2739:2772   */\n      tag_400\n        /* \"#utility.yul\":2766:2771   */\n      dup2\n        /* \"#utility.yul\":2739:2772   */\n      tag_342\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":2639:2778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2784:3258   */\n    tag_50:\n        /* \"#utility.yul\":2852:2858   */\n      0x00\n        /* \"#utility.yul\":2860:2866   */\n      0x00\n        /* \"#utility.yul\":2909:2911   */\n      0x40\n        /* \"#utility.yul\":2897:2906   */\n      dup4\n        /* \"#utility.yul\":2888:2895   */\n      dup6\n        /* \"#utility.yul\":2884:2907   */\n      sub\n        /* \"#utility.yul\":2880:2912   */\n      slt\n        /* \"#utility.yul\":2877:2996   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":2915:2994   */\n      tag_403\n      tag_336\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":2877:2996   */\n    tag_402:\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3060:3113   */\n      tag_404\n        /* \"#utility.yul\":3105:3112   */\n      dup6\n        /* \"#utility.yul\":3096:3102   */\n      dup3\n        /* \"#utility.yul\":3085:3094   */\n      dup7\n        /* \"#utility.yul\":3081:3103   */\n      add\n        /* \"#utility.yul\":3060:3113   */\n      tag_341\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":3050:3113   */\n      swap3\n      pop\n        /* \"#utility.yul\":3006:3123   */\n      pop\n        /* \"#utility.yul\":3162:3164   */\n      0x20\n        /* \"#utility.yul\":3188:3241   */\n      tag_405\n        /* \"#utility.yul\":3233:3240   */\n      dup6\n        /* \"#utility.yul\":3224:3230   */\n      dup3\n        /* \"#utility.yul\":3213:3222   */\n      dup7\n        /* \"#utility.yul\":3209:3231   */\n      add\n        /* \"#utility.yul\":3188:3241   */\n      tag_343\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":3178:3241   */\n      swap2\n      pop\n        /* \"#utility.yul\":3133:3251   */\n      pop\n        /* \"#utility.yul\":2784:3258   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3354   */\n    tag_344:\n        /* \"#utility.yul\":3298:3305   */\n      0x00\n        /* \"#utility.yul\":3341:3346   */\n      dup2\n        /* \"#utility.yul\":3334:3347   */\n      iszero\n        /* \"#utility.yul\":3327:3348   */\n      iszero\n        /* \"#utility.yul\":3316:3348   */\n      swap1\n      pop\n        /* \"#utility.yul\":3264:3354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3360:3469   */\n    tag_345:\n        /* \"#utility.yul\":3441:3462   */\n      tag_408\n        /* \"#utility.yul\":3456:3461   */\n      dup2\n        /* \"#utility.yul\":3441:3462   */\n      tag_344\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":3436:3439   */\n      dup3\n        /* \"#utility.yul\":3429:3463   */\n      mstore\n        /* \"#utility.yul\":3360:3469   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:3685   */\n    tag_53:\n        /* \"#utility.yul\":3562:3566   */\n      0x00\n        /* \"#utility.yul\":3600:3602   */\n      0x20\n        /* \"#utility.yul\":3589:3598   */\n      dup3\n        /* \"#utility.yul\":3585:3603   */\n      add\n        /* \"#utility.yul\":3577:3603   */\n      swap1\n      pop\n        /* \"#utility.yul\":3613:3678   */\n      tag_410\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3613:3678   */\n      tag_345\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":3475:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:3808   */\n    tag_346:\n        /* \"#utility.yul\":3800:3801   */\n      0x00\n        /* \"#utility.yul\":3797:3798   */\n      0x00\n        /* \"#utility.yul\":3790:3802   */\n      revert\n        /* \"#utility.yul\":3814:3931   */\n    tag_347:\n        /* \"#utility.yul\":3923:3924   */\n      0x00\n        /* \"#utility.yul\":3920:3921   */\n      0x00\n        /* \"#utility.yul\":3913:3925   */\n      revert\n        /* \"#utility.yul\":3937:4054   */\n    tag_348:\n        /* \"#utility.yul\":4046:4047   */\n      0x00\n        /* \"#utility.yul\":4043:4044   */\n      0x00\n        /* \"#utility.yul\":4036:4048   */\n      revert\n        /* \"#utility.yul\":4077:4645   */\n    tag_349:\n        /* \"#utility.yul\":4150:4158   */\n      0x00\n        /* \"#utility.yul\":4160:4166   */\n      0x00\n        /* \"#utility.yul\":4210:4213   */\n      dup4\n        /* \"#utility.yul\":4203:4207   */\n      0x1f\n        /* \"#utility.yul\":4195:4201   */\n      dup5\n        /* \"#utility.yul\":4191:4208   */\n      add\n        /* \"#utility.yul\":4187:4214   */\n      slt\n        /* \"#utility.yul\":4177:4299   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":4218:4297   */\n      tag_416\n      tag_346\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":4177:4299   */\n    tag_415:\n        /* \"#utility.yul\":4331:4337   */\n      dup3\n        /* \"#utility.yul\":4318:4338   */\n      calldataload\n        /* \"#utility.yul\":4308:4338   */\n      swap1\n      pop\n        /* \"#utility.yul\":4361:4379   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4353:4359   */\n      dup2\n        /* \"#utility.yul\":4350:4380   */\n      gt\n        /* \"#utility.yul\":4347:4464   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":4383:4462   */\n      tag_418\n      tag_347\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":4347:4464   */\n    tag_417:\n        /* \"#utility.yul\":4497:4501   */\n      0x20\n        /* \"#utility.yul\":4489:4495   */\n      dup4\n        /* \"#utility.yul\":4485:4502   */\n      add\n        /* \"#utility.yul\":4473:4502   */\n      swap2\n      pop\n        /* \"#utility.yul\":4551:4554   */\n      dup4\n        /* \"#utility.yul\":4543:4547   */\n      0x20\n        /* \"#utility.yul\":4535:4541   */\n      dup3\n        /* \"#utility.yul\":4531:4548   */\n      mul\n        /* \"#utility.yul\":4521:4529   */\n      dup4\n        /* \"#utility.yul\":4517:4549   */\n      add\n        /* \"#utility.yul\":4514:4555   */\n      gt\n        /* \"#utility.yul\":4511:4639   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":4558:4637   */\n      tag_420\n      tag_348\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":4511:4639   */\n    tag_419:\n        /* \"#utility.yul\":4077:4645   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4651:5355   */\n    tag_67:\n        /* \"#utility.yul\":4746:4752   */\n      0x00\n        /* \"#utility.yul\":4754:4760   */\n      0x00\n        /* \"#utility.yul\":4762:4768   */\n      0x00\n        /* \"#utility.yul\":4811:4813   */\n      0x40\n        /* \"#utility.yul\":4799:4808   */\n      dup5\n        /* \"#utility.yul\":4790:4797   */\n      dup7\n        /* \"#utility.yul\":4786:4809   */\n      sub\n        /* \"#utility.yul\":4782:4814   */\n      slt\n        /* \"#utility.yul\":4779:4898   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":4817:4896   */\n      tag_423\n      tag_336\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":4779:4898   */\n    tag_422:\n        /* \"#utility.yul\":4937:4938   */\n      0x00\n        /* \"#utility.yul\":4962:5015   */\n      tag_424\n        /* \"#utility.yul\":5007:5014   */\n      dup7\n        /* \"#utility.yul\":4998:5004   */\n      dup3\n        /* \"#utility.yul\":4987:4996   */\n      dup8\n        /* \"#utility.yul\":4983:5005   */\n      add\n        /* \"#utility.yul\":4962:5015   */\n      tag_343\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":4952:5015   */\n      swap4\n      pop\n        /* \"#utility.yul\":4908:5025   */\n      pop\n        /* \"#utility.yul\":5092:5094   */\n      0x20\n        /* \"#utility.yul\":5081:5090   */\n      dup5\n        /* \"#utility.yul\":5077:5095   */\n      add\n        /* \"#utility.yul\":5064:5096   */\n      calldataload\n        /* \"#utility.yul\":5123:5141   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5115:5121   */\n      dup2\n        /* \"#utility.yul\":5112:5142   */\n      gt\n        /* \"#utility.yul\":5109:5226   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":5145:5224   */\n      tag_426\n      tag_337\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5109:5226   */\n    tag_425:\n        /* \"#utility.yul\":5258:5338   */\n      tag_427\n        /* \"#utility.yul\":5330:5337   */\n      dup7\n        /* \"#utility.yul\":5321:5327   */\n      dup3\n        /* \"#utility.yul\":5310:5319   */\n      dup8\n        /* \"#utility.yul\":5306:5328   */\n      add\n        /* \"#utility.yul\":5258:5338   */\n      tag_349\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":5240:5338   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":5035:5348   */\n      pop\n        /* \"#utility.yul\":4651:5355   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5361:5980   */\n    tag_72:\n        /* \"#utility.yul\":5438:5444   */\n      0x00\n        /* \"#utility.yul\":5446:5452   */\n      0x00\n        /* \"#utility.yul\":5454:5460   */\n      0x00\n        /* \"#utility.yul\":5503:5505   */\n      0x60\n        /* \"#utility.yul\":5491:5500   */\n      dup5\n        /* \"#utility.yul\":5482:5489   */\n      dup7\n        /* \"#utility.yul\":5478:5501   */\n      sub\n        /* \"#utility.yul\":5474:5506   */\n      slt\n        /* \"#utility.yul\":5471:5590   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":5509:5588   */\n      tag_430\n      tag_336\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":5471:5590   */\n    tag_429:\n        /* \"#utility.yul\":5629:5630   */\n      0x00\n        /* \"#utility.yul\":5654:5707   */\n      tag_431\n        /* \"#utility.yul\":5699:5706   */\n      dup7\n        /* \"#utility.yul\":5690:5696   */\n      dup3\n        /* \"#utility.yul\":5679:5688   */\n      dup8\n        /* \"#utility.yul\":5675:5697   */\n      add\n        /* \"#utility.yul\":5654:5707   */\n      tag_341\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":5644:5707   */\n      swap4\n      pop\n        /* \"#utility.yul\":5600:5717   */\n      pop\n        /* \"#utility.yul\":5756:5758   */\n      0x20\n        /* \"#utility.yul\":5782:5835   */\n      tag_432\n        /* \"#utility.yul\":5827:5834   */\n      dup7\n        /* \"#utility.yul\":5818:5824   */\n      dup3\n        /* \"#utility.yul\":5807:5816   */\n      dup8\n        /* \"#utility.yul\":5803:5825   */\n      add\n        /* \"#utility.yul\":5782:5835   */\n      tag_341\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":5772:5835   */\n      swap3\n      pop\n        /* \"#utility.yul\":5727:5845   */\n      pop\n        /* \"#utility.yul\":5884:5886   */\n      0x40\n        /* \"#utility.yul\":5910:5963   */\n      tag_433\n        /* \"#utility.yul\":5955:5962   */\n      dup7\n        /* \"#utility.yul\":5946:5952   */\n      dup3\n        /* \"#utility.yul\":5935:5944   */\n      dup8\n        /* \"#utility.yul\":5931:5953   */\n      add\n        /* \"#utility.yul\":5910:5963   */\n      tag_343\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":5900:5963   */\n      swap2\n      pop\n        /* \"#utility.yul\":5855:5973   */\n      pop\n        /* \"#utility.yul\":5361:5980   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5986:6315   */\n    tag_78:\n        /* \"#utility.yul\":6045:6051   */\n      0x00\n        /* \"#utility.yul\":6094:6096   */\n      0x20\n        /* \"#utility.yul\":6082:6091   */\n      dup3\n        /* \"#utility.yul\":6073:6080   */\n      dup5\n        /* \"#utility.yul\":6069:6092   */\n      sub\n        /* \"#utility.yul\":6065:6097   */\n      slt\n        /* \"#utility.yul\":6062:6181   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":6100:6179   */\n      tag_436\n      tag_336\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6062:6181   */\n    tag_435:\n        /* \"#utility.yul\":6220:6221   */\n      0x00\n        /* \"#utility.yul\":6245:6298   */\n      tag_437\n        /* \"#utility.yul\":6290:6297   */\n      dup5\n        /* \"#utility.yul\":6281:6287   */\n      dup3\n        /* \"#utility.yul\":6270:6279   */\n      dup6\n        /* \"#utility.yul\":6266:6288   */\n      add\n        /* \"#utility.yul\":6245:6298   */\n      tag_343\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":6235:6298   */\n      swap2\n      pop\n        /* \"#utility.yul\":6191:6308   */\n      pop\n        /* \"#utility.yul\":5986:6315   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6321:6407   */\n    tag_350:\n        /* \"#utility.yul\":6356:6363   */\n      0x00\n        /* \"#utility.yul\":6396:6400   */\n      0xff\n        /* \"#utility.yul\":6389:6394   */\n      dup3\n        /* \"#utility.yul\":6385:6401   */\n      and\n        /* \"#utility.yul\":6374:6401   */\n      swap1\n      pop\n        /* \"#utility.yul\":6321:6407   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6413:6525   */\n    tag_351:\n        /* \"#utility.yul\":6496:6518   */\n      tag_440\n        /* \"#utility.yul\":6512:6517   */\n      dup2\n        /* \"#utility.yul\":6496:6518   */\n      tag_350\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":6491:6494   */\n      dup3\n        /* \"#utility.yul\":6484:6519   */\n      mstore\n        /* \"#utility.yul\":6413:6525   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6531:6745   */\n    tag_85:\n        /* \"#utility.yul\":6620:6624   */\n      0x00\n        /* \"#utility.yul\":6658:6660   */\n      0x20\n        /* \"#utility.yul\":6647:6656   */\n      dup3\n        /* \"#utility.yul\":6643:6661   */\n      add\n        /* \"#utility.yul\":6635:6661   */\n      swap1\n      pop\n        /* \"#utility.yul\":6671:6738   */\n      tag_442\n        /* \"#utility.yul\":6735:6736   */\n      0x00\n        /* \"#utility.yul\":6724:6733   */\n      dup4\n        /* \"#utility.yul\":6720:6737   */\n      add\n        /* \"#utility.yul\":6711:6717   */\n      dup5\n        /* \"#utility.yul\":6671:6738   */\n      tag_351\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":6531:6745   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6751:6844   */\n    tag_352:\n        /* \"#utility.yul\":6787:6794   */\n      0x00\n        /* \"#utility.yul\":6827:6837   */\n      0xffffffff\n        /* \"#utility.yul\":6820:6825   */\n      dup3\n        /* \"#utility.yul\":6816:6838   */\n      and\n        /* \"#utility.yul\":6805:6838   */\n      swap1\n      pop\n        /* \"#utility.yul\":6751:6844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6850:6965   */\n    tag_353:\n        /* \"#utility.yul\":6935:6958   */\n      tag_445\n        /* \"#utility.yul\":6952:6957   */\n      dup2\n        /* \"#utility.yul\":6935:6958   */\n      tag_352\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":6930:6933   */\n      dup3\n        /* \"#utility.yul\":6923:6959   */\n      mstore\n        /* \"#utility.yul\":6850:6965   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6971:7189   */\n    tag_90:\n        /* \"#utility.yul\":7062:7066   */\n      0x00\n        /* \"#utility.yul\":7100:7102   */\n      0x20\n        /* \"#utility.yul\":7089:7098   */\n      dup3\n        /* \"#utility.yul\":7085:7103   */\n      add\n        /* \"#utility.yul\":7077:7103   */\n      swap1\n      pop\n        /* \"#utility.yul\":7113:7182   */\n      tag_447\n        /* \"#utility.yul\":7179:7180   */\n      0x00\n        /* \"#utility.yul\":7168:7177   */\n      dup4\n        /* \"#utility.yul\":7164:7181   */\n      add\n        /* \"#utility.yul\":7155:7161   */\n      dup5\n        /* \"#utility.yul\":7113:7182   */\n      tag_353\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":6971:7189   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7195:7313   */\n    tag_354:\n        /* \"#utility.yul\":7282:7306   */\n      tag_449\n        /* \"#utility.yul\":7300:7305   */\n      dup2\n        /* \"#utility.yul\":7282:7306   */\n      tag_339\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":7277:7280   */\n      dup3\n        /* \"#utility.yul\":7270:7307   */\n      mstore\n        /* \"#utility.yul\":7195:7313   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7319:7541   */\n    tag_119:\n        /* \"#utility.yul\":7412:7416   */\n      0x00\n        /* \"#utility.yul\":7450:7452   */\n      0x20\n        /* \"#utility.yul\":7439:7448   */\n      dup3\n        /* \"#utility.yul\":7435:7453   */\n      add\n        /* \"#utility.yul\":7427:7453   */\n      swap1\n      pop\n        /* \"#utility.yul\":7463:7534   */\n      tag_451\n        /* \"#utility.yul\":7531:7532   */\n      0x00\n        /* \"#utility.yul\":7520:7529   */\n      dup4\n        /* \"#utility.yul\":7516:7533   */\n      add\n        /* \"#utility.yul\":7507:7513   */\n      dup5\n        /* \"#utility.yul\":7463:7534   */\n      tag_354\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":7319:7541   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7547:7876   */\n    tag_123:\n        /* \"#utility.yul\":7606:7612   */\n      0x00\n        /* \"#utility.yul\":7655:7657   */\n      0x20\n        /* \"#utility.yul\":7643:7652   */\n      dup3\n        /* \"#utility.yul\":7634:7641   */\n      dup5\n        /* \"#utility.yul\":7630:7653   */\n      sub\n        /* \"#utility.yul\":7626:7658   */\n      slt\n        /* \"#utility.yul\":7623:7742   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":7661:7740   */\n      tag_454\n      tag_336\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":7623:7742   */\n    tag_453:\n        /* \"#utility.yul\":7781:7782   */\n      0x00\n        /* \"#utility.yul\":7806:7859   */\n      tag_455\n        /* \"#utility.yul\":7851:7858   */\n      dup5\n        /* \"#utility.yul\":7842:7848   */\n      dup3\n        /* \"#utility.yul\":7831:7840   */\n      dup6\n        /* \"#utility.yul\":7827:7849   */\n      add\n        /* \"#utility.yul\":7806:7859   */\n      tag_341\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":7796:7859   */\n      swap2\n      pop\n        /* \"#utility.yul\":7752:7869   */\n      pop\n        /* \"#utility.yul\":7547:7876   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7882:8356   */\n    tag_141:\n        /* \"#utility.yul\":7950:7956   */\n      0x00\n        /* \"#utility.yul\":7958:7964   */\n      0x00\n        /* \"#utility.yul\":8007:8009   */\n      0x40\n        /* \"#utility.yul\":7995:8004   */\n      dup4\n        /* \"#utility.yul\":7986:7993   */\n      dup6\n        /* \"#utility.yul\":7982:8005   */\n      sub\n        /* \"#utility.yul\":7978:8010   */\n      slt\n        /* \"#utility.yul\":7975:8094   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":8013:8092   */\n      tag_458\n      tag_336\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":7975:8094   */\n    tag_457:\n        /* \"#utility.yul\":8133:8134   */\n      0x00\n        /* \"#utility.yul\":8158:8211   */\n      tag_459\n        /* \"#utility.yul\":8203:8210   */\n      dup6\n        /* \"#utility.yul\":8194:8200   */\n      dup3\n        /* \"#utility.yul\":8183:8192   */\n      dup7\n        /* \"#utility.yul\":8179:8201   */\n      add\n        /* \"#utility.yul\":8158:8211   */\n      tag_343\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":8148:8211   */\n      swap3\n      pop\n        /* \"#utility.yul\":8104:8221   */\n      pop\n        /* \"#utility.yul\":8260:8262   */\n      0x20\n        /* \"#utility.yul\":8286:8339   */\n      tag_460\n        /* \"#utility.yul\":8331:8338   */\n      dup6\n        /* \"#utility.yul\":8322:8328   */\n      dup3\n        /* \"#utility.yul\":8311:8320   */\n      dup7\n        /* \"#utility.yul\":8307:8329   */\n      add\n        /* \"#utility.yul\":8286:8339   */\n      tag_343\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":8276:8339   */\n      swap2\n      pop\n        /* \"#utility.yul\":8231:8349   */\n      pop\n        /* \"#utility.yul\":7882:8356   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8362:8836   */\n    tag_160:\n        /* \"#utility.yul\":8430:8436   */\n      0x00\n        /* \"#utility.yul\":8438:8444   */\n      0x00\n        /* \"#utility.yul\":8487:8489   */\n      0x40\n        /* \"#utility.yul\":8475:8484   */\n      dup4\n        /* \"#utility.yul\":8466:8473   */\n      dup6\n        /* \"#utility.yul\":8462:8485   */\n      sub\n        /* \"#utility.yul\":8458:8490   */\n      slt\n        /* \"#utility.yul\":8455:8574   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":8493:8572   */\n      tag_463\n      tag_336\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":8455:8574   */\n    tag_462:\n        /* \"#utility.yul\":8613:8614   */\n      0x00\n        /* \"#utility.yul\":8638:8691   */\n      tag_464\n        /* \"#utility.yul\":8683:8690   */\n      dup6\n        /* \"#utility.yul\":8674:8680   */\n      dup3\n        /* \"#utility.yul\":8663:8672   */\n      dup7\n        /* \"#utility.yul\":8659:8681   */\n      add\n        /* \"#utility.yul\":8638:8691   */\n      tag_341\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":8628:8691   */\n      swap3\n      pop\n        /* \"#utility.yul\":8584:8701   */\n      pop\n        /* \"#utility.yul\":8740:8742   */\n      0x20\n        /* \"#utility.yul\":8766:8819   */\n      tag_465\n        /* \"#utility.yul\":8811:8818   */\n      dup6\n        /* \"#utility.yul\":8802:8808   */\n      dup3\n        /* \"#utility.yul\":8791:8800   */\n      dup7\n        /* \"#utility.yul\":8787:8809   */\n      add\n        /* \"#utility.yul\":8766:8819   */\n      tag_341\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":8756:8819   */\n      swap2\n      pop\n        /* \"#utility.yul\":8711:8829   */\n      pop\n        /* \"#utility.yul\":8362:8836   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8842:9022   */\n    tag_355:\n        /* \"#utility.yul\":8890:8967   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8887:8888   */\n      0x00\n        /* \"#utility.yul\":8880:8968   */\n      mstore\n        /* \"#utility.yul\":8987:8991   */\n      0x22\n        /* \"#utility.yul\":8984:8985   */\n      0x04\n        /* \"#utility.yul\":8977:8992   */\n      mstore\n        /* \"#utility.yul\":9011:9015   */\n      0x24\n        /* \"#utility.yul\":9008:9009   */\n      0x00\n        /* \"#utility.yul\":9001:9016   */\n      revert\n        /* \"#utility.yul\":9028:9348   */\n    tag_170:\n        /* \"#utility.yul\":9072:9078   */\n      0x00\n        /* \"#utility.yul\":9109:9110   */\n      0x02\n        /* \"#utility.yul\":9103:9107   */\n      dup3\n        /* \"#utility.yul\":9099:9111   */\n      div\n        /* \"#utility.yul\":9089:9111   */\n      swap1\n      pop\n        /* \"#utility.yul\":9156:9157   */\n      0x01\n        /* \"#utility.yul\":9150:9154   */\n      dup3\n        /* \"#utility.yul\":9146:9158   */\n      and\n        /* \"#utility.yul\":9177:9195   */\n      dup1\n        /* \"#utility.yul\":9167:9248   */\n      tag_468\n      jumpi\n        /* \"#utility.yul\":9233:9237   */\n      0x7f\n        /* \"#utility.yul\":9225:9231   */\n      dup3\n        /* \"#utility.yul\":9221:9238   */\n      and\n        /* \"#utility.yul\":9211:9238   */\n      swap2\n      pop\n        /* \"#utility.yul\":9167:9248   */\n    tag_468:\n        /* \"#utility.yul\":9295:9297   */\n      0x20\n        /* \"#utility.yul\":9287:9293   */\n      dup3\n        /* \"#utility.yul\":9284:9298   */\n      lt\n        /* \"#utility.yul\":9264:9282   */\n      dup2\n        /* \"#utility.yul\":9261:9299   */\n      sub\n        /* \"#utility.yul\":9258:9342   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":9314:9332   */\n      tag_470\n      tag_355\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":9258:9342   */\n    tag_469:\n        /* \"#utility.yul\":9079:9348   */\n      pop\n        /* \"#utility.yul\":9028:9348   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9354:9534   */\n    tag_356:\n        /* \"#utility.yul\":9402:9479   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9399:9400   */\n      0x00\n        /* \"#utility.yul\":9392:9480   */\n      mstore\n        /* \"#utility.yul\":9499:9503   */\n      0x11\n        /* \"#utility.yul\":9496:9497   */\n      0x04\n        /* \"#utility.yul\":9489:9504   */\n      mstore\n        /* \"#utility.yul\":9523:9527   */\n      0x24\n        /* \"#utility.yul\":9520:9521   */\n      0x00\n        /* \"#utility.yul\":9513:9528   */\n      revert\n        /* \"#utility.yul\":9540:9731   */\n    tag_184:\n        /* \"#utility.yul\":9580:9583   */\n      0x00\n        /* \"#utility.yul\":9599:9619   */\n      tag_473\n        /* \"#utility.yul\":9617:9618   */\n      dup3\n        /* \"#utility.yul\":9599:9619   */\n      tag_333\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":9594:9619   */\n      swap2\n      pop\n        /* \"#utility.yul\":9633:9653   */\n      tag_474\n        /* \"#utility.yul\":9651:9652   */\n      dup4\n        /* \"#utility.yul\":9633:9653   */\n      tag_333\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":9628:9653   */\n      swap3\n      pop\n        /* \"#utility.yul\":9676:9677   */\n      dup3\n        /* \"#utility.yul\":9673:9674   */\n      dup3\n        /* \"#utility.yul\":9669:9678   */\n      add\n        /* \"#utility.yul\":9662:9678   */\n      swap1\n      pop\n        /* \"#utility.yul\":9697:9700   */\n      dup1\n        /* \"#utility.yul\":9694:9695   */\n      dup3\n        /* \"#utility.yul\":9691:9701   */\n      gt\n        /* \"#utility.yul\":9688:9724   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":9704:9722   */\n      tag_476\n      tag_356\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":9688:9724   */\n    tag_475:\n        /* \"#utility.yul\":9540:9731   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9737:9797   */\n    tag_357:\n        /* \"#utility.yul\":9765:9768   */\n      0x00\n        /* \"#utility.yul\":9786:9791   */\n      dup2\n        /* \"#utility.yul\":9779:9791   */\n      swap1\n      pop\n        /* \"#utility.yul\":9737:9797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9803:9943   */\n    tag_358:\n        /* \"#utility.yul\":9852:9861   */\n      0x00\n        /* \"#utility.yul\":9885:9937   */\n      tag_479\n        /* \"#utility.yul\":9903:9936   */\n      tag_480\n        /* \"#utility.yul\":9912:9935   */\n      tag_481\n        /* \"#utility.yul\":9929:9934   */\n      dup5\n        /* \"#utility.yul\":9912:9935   */\n      tag_352\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":9903:9936   */\n      tag_357\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":9885:9937   */\n      tag_333\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":9872:9937   */\n      swap1\n      pop\n        /* \"#utility.yul\":9803:9943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9949:10078   */\n    tag_359:\n        /* \"#utility.yul\":10035:10071   */\n      tag_483\n        /* \"#utility.yul\":10065:10070   */\n      dup2\n        /* \"#utility.yul\":10035:10071   */\n      tag_358\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":10030:10033   */\n      dup3\n        /* \"#utility.yul\":10023:10072   */\n      mstore\n        /* \"#utility.yul\":9949:10078   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10084:10304   */\n    tag_188:\n        /* \"#utility.yul\":10176:10180   */\n      0x00\n        /* \"#utility.yul\":10214:10216   */\n      0x20\n        /* \"#utility.yul\":10203:10212   */\n      dup3\n        /* \"#utility.yul\":10199:10217   */\n      add\n        /* \"#utility.yul\":10191:10217   */\n      swap1\n      pop\n        /* \"#utility.yul\":10227:10297   */\n      tag_485\n        /* \"#utility.yul\":10294:10295   */\n      0x00\n        /* \"#utility.yul\":10283:10292   */\n      dup4\n        /* \"#utility.yul\":10279:10296   */\n      add\n        /* \"#utility.yul\":10270:10276   */\n      dup5\n        /* \"#utility.yul\":10227:10297   */\n      tag_359\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":10084:10304   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10310:10453   */\n    tag_360:\n        /* \"#utility.yul\":10367:10372   */\n      0x00\n        /* \"#utility.yul\":10398:10404   */\n      dup2\n        /* \"#utility.yul\":10392:10405   */\n      mload\n        /* \"#utility.yul\":10383:10405   */\n      swap1\n      pop\n        /* \"#utility.yul\":10414:10447   */\n      tag_487\n        /* \"#utility.yul\":10441:10446   */\n      dup2\n        /* \"#utility.yul\":10414:10447   */\n      tag_342\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":10310:10453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10459:10810   */\n    tag_192:\n        /* \"#utility.yul\":10529:10535   */\n      0x00\n        /* \"#utility.yul\":10578:10580   */\n      0x20\n        /* \"#utility.yul\":10566:10575   */\n      dup3\n        /* \"#utility.yul\":10557:10564   */\n      dup5\n        /* \"#utility.yul\":10553:10576   */\n      sub\n        /* \"#utility.yul\":10549:10581   */\n      slt\n        /* \"#utility.yul\":10546:10665   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":10584:10663   */\n      tag_490\n      tag_336\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":10546:10665   */\n    tag_489:\n        /* \"#utility.yul\":10704:10705   */\n      0x00\n        /* \"#utility.yul\":10729:10793   */\n      tag_491\n        /* \"#utility.yul\":10785:10792   */\n      dup5\n        /* \"#utility.yul\":10776:10782   */\n      dup3\n        /* \"#utility.yul\":10765:10774   */\n      dup6\n        /* \"#utility.yul\":10761:10783   */\n      add\n        /* \"#utility.yul\":10729:10793   */\n      tag_360\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":10719:10793   */\n      swap2\n      pop\n        /* \"#utility.yul\":10675:10803   */\n      pop\n        /* \"#utility.yul\":10459:10810   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10816:10901   */\n    tag_361:\n        /* \"#utility.yul\":10861:10868   */\n      0x00\n        /* \"#utility.yul\":10890:10895   */\n      dup2\n        /* \"#utility.yul\":10879:10895   */\n      swap1\n      pop\n        /* \"#utility.yul\":10816:10901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10907:11065   */\n    tag_362:\n        /* \"#utility.yul\":10965:10974   */\n      0x00\n        /* \"#utility.yul\":10998:11059   */\n      tag_494\n        /* \"#utility.yul\":11016:11058   */\n      tag_495\n        /* \"#utility.yul\":11025:11057   */\n      tag_496\n        /* \"#utility.yul\":11051:11056   */\n      dup5\n        /* \"#utility.yul\":11025:11057   */\n      tag_361\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":11016:11058   */\n      tag_357\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":10998:11059   */\n      tag_333\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":10985:11059   */\n      swap1\n      pop\n        /* \"#utility.yul\":10907:11065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11071:11218   */\n    tag_363:\n        /* \"#utility.yul\":11166:11211   */\n      tag_498\n        /* \"#utility.yul\":11205:11210   */\n      dup2\n        /* \"#utility.yul\":11166:11211   */\n      tag_362\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":11161:11164   */\n      dup3\n        /* \"#utility.yul\":11154:11212   */\n      mstore\n        /* \"#utility.yul\":11071:11218   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11224:11680   */\n    tag_196:\n        /* \"#utility.yul\":11380:11384   */\n      0x00\n        /* \"#utility.yul\":11418:11420   */\n      0x60\n        /* \"#utility.yul\":11407:11416   */\n      dup3\n        /* \"#utility.yul\":11403:11421   */\n      add\n        /* \"#utility.yul\":11395:11421   */\n      swap1\n      pop\n        /* \"#utility.yul\":11431:11501   */\n      tag_500\n        /* \"#utility.yul\":11498:11499   */\n      0x00\n        /* \"#utility.yul\":11487:11496   */\n      dup4\n        /* \"#utility.yul\":11483:11500   */\n      add\n        /* \"#utility.yul\":11474:11480   */\n      dup7\n        /* \"#utility.yul\":11431:11501   */\n      tag_359\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":11511:11591   */\n      tag_501\n        /* \"#utility.yul\":11587:11589   */\n      0x20\n        /* \"#utility.yul\":11576:11585   */\n      dup4\n        /* \"#utility.yul\":11572:11590   */\n      add\n        /* \"#utility.yul\":11563:11569   */\n      dup6\n        /* \"#utility.yul\":11511:11591   */\n      tag_363\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":11601:11673   */\n      tag_502\n        /* \"#utility.yul\":11669:11671   */\n      0x40\n        /* \"#utility.yul\":11658:11667   */\n      dup4\n        /* \"#utility.yul\":11654:11672   */\n      add\n        /* \"#utility.yul\":11645:11651   */\n      dup5\n        /* \"#utility.yul\":11601:11673   */\n      tag_354\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":11224:11680   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11686:12018   */\n    tag_201:\n        /* \"#utility.yul\":11807:11811   */\n      0x00\n        /* \"#utility.yul\":11845:11847   */\n      0x40\n        /* \"#utility.yul\":11834:11843   */\n      dup3\n        /* \"#utility.yul\":11830:11848   */\n      add\n        /* \"#utility.yul\":11822:11848   */\n      swap1\n      pop\n        /* \"#utility.yul\":11858:11929   */\n      tag_504\n        /* \"#utility.yul\":11926:11927   */\n      0x00\n        /* \"#utility.yul\":11915:11924   */\n      dup4\n        /* \"#utility.yul\":11911:11928   */\n      add\n        /* \"#utility.yul\":11902:11908   */\n      dup6\n        /* \"#utility.yul\":11858:11929   */\n      tag_334\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":11939:12011   */\n      tag_505\n        /* \"#utility.yul\":12007:12009   */\n      0x20\n        /* \"#utility.yul\":11996:12005   */\n      dup4\n        /* \"#utility.yul\":11992:12010   */\n      add\n        /* \"#utility.yul\":11983:11989   */\n      dup5\n        /* \"#utility.yul\":11939:12011   */\n      tag_334\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":11686:12018   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12024:12204   */\n    tag_364:\n        /* \"#utility.yul\":12072:12149   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12069:12070   */\n      0x00\n        /* \"#utility.yul\":12062:12150   */\n      mstore\n        /* \"#utility.yul\":12169:12173   */\n      0x12\n        /* \"#utility.yul\":12166:12167   */\n      0x04\n        /* \"#utility.yul\":12159:12174   */\n      mstore\n        /* \"#utility.yul\":12193:12197   */\n      0x24\n        /* \"#utility.yul\":12190:12191   */\n      0x00\n        /* \"#utility.yul\":12183:12198   */\n      revert\n        /* \"#utility.yul\":12210:12395   */\n    tag_205:\n        /* \"#utility.yul\":12250:12251   */\n      0x00\n        /* \"#utility.yul\":12267:12287   */\n      tag_508\n        /* \"#utility.yul\":12285:12286   */\n      dup3\n        /* \"#utility.yul\":12267:12287   */\n      tag_333\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":12262:12287   */\n      swap2\n      pop\n        /* \"#utility.yul\":12301:12321   */\n      tag_509\n        /* \"#utility.yul\":12319:12320   */\n      dup4\n        /* \"#utility.yul\":12301:12321   */\n      tag_333\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":12296:12321   */\n      swap3\n      pop\n        /* \"#utility.yul\":12340:12341   */\n      dup3\n        /* \"#utility.yul\":12330:12365   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":12345:12363   */\n      tag_511\n      tag_364\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":12330:12365   */\n    tag_510:\n        /* \"#utility.yul\":12387:12388   */\n      dup3\n        /* \"#utility.yul\":12384:12385   */\n      dup3\n        /* \"#utility.yul\":12380:12389   */\n      div\n        /* \"#utility.yul\":12375:12389   */\n      swap1\n      pop\n        /* \"#utility.yul\":12210:12395   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12401:12811   */\n    tag_209:\n        /* \"#utility.yul\":12441:12448   */\n      0x00\n        /* \"#utility.yul\":12464:12484   */\n      tag_513\n        /* \"#utility.yul\":12482:12483   */\n      dup3\n        /* \"#utility.yul\":12464:12484   */\n      tag_333\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":12459:12484   */\n      swap2\n      pop\n        /* \"#utility.yul\":12498:12518   */\n      tag_514\n        /* \"#utility.yul\":12516:12517   */\n      dup4\n        /* \"#utility.yul\":12498:12518   */\n      tag_333\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":12493:12518   */\n      swap3\n      pop\n        /* \"#utility.yul\":12553:12554   */\n      dup3\n        /* \"#utility.yul\":12550:12551   */\n      dup3\n        /* \"#utility.yul\":12546:12555   */\n      mul\n        /* \"#utility.yul\":12575:12605   */\n      tag_515\n        /* \"#utility.yul\":12593:12604   */\n      dup2\n        /* \"#utility.yul\":12575:12605   */\n      tag_333\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":12564:12605   */\n      swap2\n      pop\n        /* \"#utility.yul\":12754:12755   */\n      dup3\n        /* \"#utility.yul\":12745:12752   */\n      dup3\n        /* \"#utility.yul\":12741:12756   */\n      div\n        /* \"#utility.yul\":12738:12739   */\n      dup5\n        /* \"#utility.yul\":12735:12757   */\n      eq\n        /* \"#utility.yul\":12715:12716   */\n      dup4\n        /* \"#utility.yul\":12708:12717   */\n      iszero\n        /* \"#utility.yul\":12688:12771   */\n      or\n        /* \"#utility.yul\":12665:12804   */\n      tag_516\n      jumpi\n        /* \"#utility.yul\":12784:12802   */\n      tag_517\n      tag_356\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":12665:12804   */\n    tag_516:\n        /* \"#utility.yul\":12449:12811   */\n      pop\n        /* \"#utility.yul\":12401:12811   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12817:12964   */\n    tag_365:\n        /* \"#utility.yul\":12918:12929   */\n      0x00\n        /* \"#utility.yul\":12955:12958   */\n      dup2\n        /* \"#utility.yul\":12940:12958   */\n      swap1\n      pop\n        /* \"#utility.yul\":12817:12964   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12970:13084   */\n    tag_366:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13090:13488   */\n    tag_367:\n        /* \"#utility.yul\":13249:13252   */\n      0x00\n        /* \"#utility.yul\":13270:13353   */\n      tag_521\n        /* \"#utility.yul\":13351:13352   */\n      0x00\n        /* \"#utility.yul\":13346:13349   */\n      dup4\n        /* \"#utility.yul\":13270:13353   */\n      tag_365\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":13263:13353   */\n      swap2\n      pop\n        /* \"#utility.yul\":13362:13455   */\n      tag_522\n        /* \"#utility.yul\":13451:13454   */\n      dup3\n        /* \"#utility.yul\":13362:13455   */\n      tag_366\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":13480:13481   */\n      0x00\n        /* \"#utility.yul\":13475:13478   */\n      dup3\n        /* \"#utility.yul\":13471:13482   */\n      add\n        /* \"#utility.yul\":13464:13482   */\n      swap1\n      pop\n        /* \"#utility.yul\":13090:13488   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13494:13873   */\n    tag_212:\n        /* \"#utility.yul\":13678:13681   */\n      0x00\n        /* \"#utility.yul\":13700:13847   */\n      tag_524\n        /* \"#utility.yul\":13843:13846   */\n      dup3\n        /* \"#utility.yul\":13700:13847   */\n      tag_367\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":13693:13847   */\n      swap2\n      pop\n        /* \"#utility.yul\":13864:13867   */\n      dup2\n        /* \"#utility.yul\":13857:13867   */\n      swap1\n      pop\n        /* \"#utility.yul\":13494:13873   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13879:14073   */\n    tag_218:\n        /* \"#utility.yul\":13919:13923   */\n      0x00\n        /* \"#utility.yul\":13939:13959   */\n      tag_526\n        /* \"#utility.yul\":13957:13958   */\n      dup3\n        /* \"#utility.yul\":13939:13959   */\n      tag_333\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":13934:13959   */\n      swap2\n      pop\n        /* \"#utility.yul\":13973:13993   */\n      tag_527\n        /* \"#utility.yul\":13991:13992   */\n      dup4\n        /* \"#utility.yul\":13973:13993   */\n      tag_333\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":13968:13993   */\n      swap3\n      pop\n        /* \"#utility.yul\":14017:14018   */\n      dup3\n        /* \"#utility.yul\":14014:14015   */\n      dup3\n        /* \"#utility.yul\":14010:14019   */\n      sub\n        /* \"#utility.yul\":14002:14019   */\n      swap1\n      pop\n        /* \"#utility.yul\":14041:14042   */\n      dup2\n        /* \"#utility.yul\":14035:14039   */\n      dup2\n        /* \"#utility.yul\":14032:14043   */\n      gt\n        /* \"#utility.yul\":14029:14066   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":14046:14064   */\n      tag_529\n      tag_356\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":14029:14066   */\n    tag_528:\n        /* \"#utility.yul\":13879:14073   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14079:14411   */\n    tag_230:\n        /* \"#utility.yul\":14200:14204   */\n      0x00\n        /* \"#utility.yul\":14238:14240   */\n      0x40\n        /* \"#utility.yul\":14227:14236   */\n      dup3\n        /* \"#utility.yul\":14223:14241   */\n      add\n        /* \"#utility.yul\":14215:14241   */\n      swap1\n      pop\n        /* \"#utility.yul\":14251:14322   */\n      tag_531\n        /* \"#utility.yul\":14319:14320   */\n      0x00\n        /* \"#utility.yul\":14308:14317   */\n      dup4\n        /* \"#utility.yul\":14304:14321   */\n      add\n        /* \"#utility.yul\":14295:14301   */\n      dup6\n        /* \"#utility.yul\":14251:14322   */\n      tag_354\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":14332:14404   */\n      tag_532\n        /* \"#utility.yul\":14400:14402   */\n      0x20\n        /* \"#utility.yul\":14389:14398   */\n      dup4\n        /* \"#utility.yul\":14385:14403   */\n      add\n        /* \"#utility.yul\":14376:14382   */\n      dup5\n        /* \"#utility.yul\":14332:14404   */\n      tag_354\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":14079:14411   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14417:14597   */\n    tag_277:\n        /* \"#utility.yul\":14465:14542   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14462:14463   */\n      0x00\n        /* \"#utility.yul\":14455:14543   */\n      mstore\n        /* \"#utility.yul\":14562:14566   */\n      0x32\n        /* \"#utility.yul\":14559:14560   */\n      0x04\n        /* \"#utility.yul\":14552:14567   */\n      mstore\n        /* \"#utility.yul\":14586:14590   */\n      0x24\n        /* \"#utility.yul\":14583:14584   */\n      0x00\n        /* \"#utility.yul\":14576:14591   */\n      revert\n        /* \"#utility.yul\":14603:14779   */\n    tag_279:\n        /* \"#utility.yul\":14635:14636   */\n      0x00\n        /* \"#utility.yul\":14652:14672   */\n      tag_535\n        /* \"#utility.yul\":14670:14671   */\n      dup3\n        /* \"#utility.yul\":14652:14672   */\n      tag_333\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":14647:14672   */\n      swap2\n      pop\n        /* \"#utility.yul\":14686:14706   */\n      tag_536\n        /* \"#utility.yul\":14704:14705   */\n      dup4\n        /* \"#utility.yul\":14686:14706   */\n      tag_333\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":14681:14706   */\n      swap3\n      pop\n        /* \"#utility.yul\":14725:14726   */\n      dup3\n        /* \"#utility.yul\":14715:14750   */\n      tag_537\n      jumpi\n        /* \"#utility.yul\":14730:14748   */\n      tag_538\n      tag_364\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":14715:14750   */\n    tag_537:\n        /* \"#utility.yul\":14771:14772   */\n      dup3\n        /* \"#utility.yul\":14768:14769   */\n      dup3\n        /* \"#utility.yul\":14764:14773   */\n      mod\n        /* \"#utility.yul\":14759:14773   */\n      swap1\n      pop\n        /* \"#utility.yul\":14603:14779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14785:15227   */\n    tag_295:\n        /* \"#utility.yul\":14934:14938   */\n      0x00\n        /* \"#utility.yul\":14972:14974   */\n      0x60\n        /* \"#utility.yul\":14961:14970   */\n      dup3\n        /* \"#utility.yul\":14957:14975   */\n      add\n        /* \"#utility.yul\":14949:14975   */\n      swap1\n      pop\n        /* \"#utility.yul\":14985:15056   */\n      tag_540\n        /* \"#utility.yul\":15053:15054   */\n      0x00\n        /* \"#utility.yul\":15042:15051   */\n      dup4\n        /* \"#utility.yul\":15038:15055   */\n      add\n        /* \"#utility.yul\":15029:15035   */\n      dup7\n        /* \"#utility.yul\":14985:15056   */\n      tag_354\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":15066:15138   */\n      tag_541\n        /* \"#utility.yul\":15134:15136   */\n      0x20\n        /* \"#utility.yul\":15123:15132   */\n      dup4\n        /* \"#utility.yul\":15119:15137   */\n      add\n        /* \"#utility.yul\":15110:15116   */\n      dup6\n        /* \"#utility.yul\":15066:15138   */\n      tag_334\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":15148:15220   */\n      tag_542\n        /* \"#utility.yul\":15216:15218   */\n      0x40\n        /* \"#utility.yul\":15205:15214   */\n      dup4\n        /* \"#utility.yul\":15201:15219   */\n      add\n        /* \"#utility.yul\":15192:15198   */\n      dup5\n        /* \"#utility.yul\":15148:15220   */\n      tag_334\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":14785:15227   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122052b5a6f95a217bcc4e0ae20f94bbf78068a7988e3bee220c9000d0f95761064e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1315": {
									"entryPoint": null,
									"id": 1315,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_841": {
									"entryPoint": null,
									"id": 841,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 963,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 582,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 720,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 861,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 898,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6582:9",
										"nodeType": "YulBlock",
										"src": "0:6582:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "611:79:9",
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:9",
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:9",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nativeSrc": "670:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nativeSrc": "670:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nativeSrc": "641:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nativeSrc": "631:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nativeSrc": "624:43:9",
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nativeSrc": "621:63:9",
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:9",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nativeSrc": "759:80:9",
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nativeSrc": "769:22:9",
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nativeSrc": "778:13:9",
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nativeSrc": "800:33:9",
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nativeSrc": "800:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:9",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:9",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:9",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nativeSrc": "939:413:9",
													"nodeType": "YulBlock",
													"src": "939:413:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:9",
																"nodeType": "YulBlock",
																"src": "985:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:9"
																			},
																			"nativeSrc": "987:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:9"
																		},
																		"nativeSrc": "987:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:9"
																		},
																		"nativeSrc": "956:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:9",
																		"nodeType": "YulLiteral",
																		"src": "981:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:9"
																},
																"nativeSrc": "952:32:9",
																"nodeType": "YulFunctionCall",
																"src": "952:32:9"
															},
															"nativeSrc": "949:119:9",
															"nodeType": "YulIf",
															"src": "949:119:9"
														},
														{
															"nativeSrc": "1078:128:9",
															"nodeType": "YulBlock",
															"src": "1078:128:9",
															"statements": [
																{
																	"nativeSrc": "1093:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:9"
																				},
																				"nativeSrc": "1164:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:9"
																		},
																		"nativeSrc": "1132:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:9",
															"nodeType": "YulBlock",
															"src": "1216:129:9",
															"statements": [
																{
																	"nativeSrc": "1231:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:9"
																				},
																				"nativeSrc": "1303:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:9"
																		},
																		"nativeSrc": "1271:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:9",
														"nodeType": "YulTypedName",
														"src": "901:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:9",
														"nodeType": "YulTypedName",
														"src": "912:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:9",
														"nodeType": "YulTypedName",
														"src": "924:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:9",
														"nodeType": "YulTypedName",
														"src": "932:6:9",
														"type": ""
													}
												],
												"src": "845:507:9"
											},
											{
												"body": {
													"nativeSrc": "1417:40:9",
													"nodeType": "YulBlock",
													"src": "1417:40:9",
													"statements": [
														{
															"nativeSrc": "1428:22:9",
															"nodeType": "YulAssignment",
															"src": "1428:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1444:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1444:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1438:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1438:5:9"
																},
																"nativeSrc": "1438:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1438:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1428:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1358:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1400:5:9",
														"nodeType": "YulTypedName",
														"src": "1400:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1410:6:9",
														"nodeType": "YulTypedName",
														"src": "1410:6:9",
														"type": ""
													}
												],
												"src": "1358:99:9"
											},
											{
												"body": {
													"nativeSrc": "1491:152:9",
													"nodeType": "YulBlock",
													"src": "1491:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:77:9",
																		"nodeType": "YulLiteral",
																		"src": "1511:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1501:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:9"
																},
																"nativeSrc": "1501:88:9",
																"nodeType": "YulFunctionCall",
																"src": "1501:88:9"
															},
															"nativeSrc": "1501:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "1501:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1605:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1605:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1608:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1608:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1598:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:9"
																},
																"nativeSrc": "1598:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1598:15:9"
															},
															"nativeSrc": "1598:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1598:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1629:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1629:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1632:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1632:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1622:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1622:6:9"
																},
																"nativeSrc": "1622:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1622:15:9"
															},
															"nativeSrc": "1622:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1622:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1463:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1463:180:9"
											},
											{
												"body": {
													"nativeSrc": "1677:152:9",
													"nodeType": "YulBlock",
													"src": "1677:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1697:77:9",
																		"nodeType": "YulLiteral",
																		"src": "1697:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1687:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:9"
																},
																"nativeSrc": "1687:88:9",
																"nodeType": "YulFunctionCall",
																"src": "1687:88:9"
															},
															"nativeSrc": "1687:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "1687:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1791:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1791:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1794:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1794:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1784:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:9"
																},
																"nativeSrc": "1784:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1784:15:9"
															},
															"nativeSrc": "1784:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1784:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1815:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1818:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1818:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1808:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:9"
																},
																"nativeSrc": "1808:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1808:15:9"
															},
															"nativeSrc": "1808:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1808:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1649:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1649:180:9"
											},
											{
												"body": {
													"nativeSrc": "1886:269:9",
													"nodeType": "YulBlock",
													"src": "1886:269:9",
													"statements": [
														{
															"nativeSrc": "1896:22:9",
															"nodeType": "YulAssignment",
															"src": "1896:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1910:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1910:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1916:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1916:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1906:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:9"
																},
																"nativeSrc": "1906:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1906:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1896:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1896:6:9"
																}
															]
														},
														{
															"nativeSrc": "1927:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1927:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1957:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1957:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1963:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1963:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1953:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:9"
																},
																"nativeSrc": "1953:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1953:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1931:18:9",
																	"nodeType": "YulTypedName",
																	"src": "1931:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2004:51:9",
																"nodeType": "YulBlock",
																"src": "2004:51:9",
																"statements": [
																	{
																		"nativeSrc": "2018:27:9",
																		"nodeType": "YulAssignment",
																		"src": "2018:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2032:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "2032:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2040:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2040:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2028:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2028:3:9"
																			},
																			"nativeSrc": "2028:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2028:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2018:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1984:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "1984:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1977:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:9"
																},
																"nativeSrc": "1977:26:9",
																"nodeType": "YulFunctionCall",
																"src": "1977:26:9"
															},
															"nativeSrc": "1974:81:9",
															"nodeType": "YulIf",
															"src": "1974:81:9"
														},
														{
															"body": {
																"nativeSrc": "2107:42:9",
																"nodeType": "YulBlock",
																"src": "2107:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2121:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "2121:16:9"
																			},
																			"nativeSrc": "2121:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2121:18:9"
																		},
																		"nativeSrc": "2121:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2121:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2071:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2071:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2094:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2094:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2102:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2102:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2091:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2091:2:9"
																		},
																		"nativeSrc": "2091:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2091:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2068:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2068:2:9"
																},
																"nativeSrc": "2068:38:9",
																"nodeType": "YulFunctionCall",
																"src": "2068:38:9"
															},
															"nativeSrc": "2065:84:9",
															"nodeType": "YulIf",
															"src": "2065:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1835:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1870:4:9",
														"nodeType": "YulTypedName",
														"src": "1870:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1879:6:9",
														"nodeType": "YulTypedName",
														"src": "1879:6:9",
														"type": ""
													}
												],
												"src": "1835:320:9"
											},
											{
												"body": {
													"nativeSrc": "2215:87:9",
													"nodeType": "YulBlock",
													"src": "2215:87:9",
													"statements": [
														{
															"nativeSrc": "2225:11:9",
															"nodeType": "YulAssignment",
															"src": "2225:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "2233:3:9",
																"nodeType": "YulIdentifier",
																"src": "2233:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2225:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2225:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2253:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2253:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2256:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2256:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2246:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2246:6:9"
																},
																"nativeSrc": "2246:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2246:14:9"
															},
															"nativeSrc": "2246:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "2246:14:9"
														},
														{
															"nativeSrc": "2269:26:9",
															"nodeType": "YulAssignment",
															"src": "2269:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2287:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2287:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2290:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2290:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2277:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2277:9:9"
																},
																"nativeSrc": "2277:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2277:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2269:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2269:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2161:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2202:3:9",
														"nodeType": "YulTypedName",
														"src": "2202:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2210:4:9",
														"nodeType": "YulTypedName",
														"src": "2210:4:9",
														"type": ""
													}
												],
												"src": "2161:141:9"
											},
											{
												"body": {
													"nativeSrc": "2352:49:9",
													"nodeType": "YulBlock",
													"src": "2352:49:9",
													"statements": [
														{
															"nativeSrc": "2362:33:9",
															"nodeType": "YulAssignment",
															"src": "2362:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2380:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2387:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2376:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2376:3:9"
																		},
																		"nativeSrc": "2376:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2376:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2392:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2372:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2372:3:9"
																},
																"nativeSrc": "2372:23:9",
																"nodeType": "YulFunctionCall",
																"src": "2372:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2362:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2308:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2335:5:9",
														"nodeType": "YulTypedName",
														"src": "2335:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2345:6:9",
														"nodeType": "YulTypedName",
														"src": "2345:6:9",
														"type": ""
													}
												],
												"src": "2308:93:9"
											},
											{
												"body": {
													"nativeSrc": "2460:54:9",
													"nodeType": "YulBlock",
													"src": "2460:54:9",
													"statements": [
														{
															"nativeSrc": "2470:37:9",
															"nodeType": "YulAssignment",
															"src": "2470:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2495:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2495:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2501:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2501:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2491:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2491:3:9"
																},
																"nativeSrc": "2491:16:9",
																"nodeType": "YulFunctionCall",
																"src": "2491:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2470:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "2470:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2407:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2435:4:9",
														"nodeType": "YulTypedName",
														"src": "2435:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2441:5:9",
														"nodeType": "YulTypedName",
														"src": "2441:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2451:8:9",
														"nodeType": "YulTypedName",
														"src": "2451:8:9",
														"type": ""
													}
												],
												"src": "2407:107:9"
											},
											{
												"body": {
													"nativeSrc": "2596:317:9",
													"nodeType": "YulBlock",
													"src": "2596:317:9",
													"statements": [
														{
															"nativeSrc": "2606:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2606:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2627:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "2627:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2639:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2623:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2623:3:9"
																},
																"nativeSrc": "2623:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2623:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2610:9:9",
																	"nodeType": "YulTypedName",
																	"src": "2610:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2650:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2650:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2681:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:66:9",
																		"nodeType": "YulLiteral",
																		"src": "2692:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2662:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:9"
																},
																"nativeSrc": "2662:97:9",
																"nodeType": "YulFunctionCall",
																"src": "2662:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2654:4:9",
																	"nodeType": "YulTypedName",
																	"src": "2654:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2768:51:9",
															"nodeType": "YulAssignment",
															"src": "2768:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2799:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2799:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2810:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "2810:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2780:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2780:18:9"
																},
																"nativeSrc": "2780:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2780:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2768:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "2768:8:9"
																}
															]
														},
														{
															"nativeSrc": "2828:30:9",
															"nodeType": "YulAssignment",
															"src": "2828:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2841:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2841:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2852:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2852:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2848:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2848:3:9"
																		},
																		"nativeSrc": "2848:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2848:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2837:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2837:3:9"
																},
																"nativeSrc": "2837:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2837:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2828:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2828:5:9"
																}
															]
														},
														{
															"nativeSrc": "2867:40:9",
															"nodeType": "YulAssignment",
															"src": "2867:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2880:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2880:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2891:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "2891:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2901:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2901:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2887:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:9"
																		},
																		"nativeSrc": "2887:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2887:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2877:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2877:2:9"
																},
																"nativeSrc": "2877:30:9",
																"nodeType": "YulFunctionCall",
																"src": "2877:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2867:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2520:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2557:5:9",
														"nodeType": "YulTypedName",
														"src": "2557:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2564:10:9",
														"nodeType": "YulTypedName",
														"src": "2564:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2576:8:9",
														"nodeType": "YulTypedName",
														"src": "2576:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2589:6:9",
														"nodeType": "YulTypedName",
														"src": "2589:6:9",
														"type": ""
													}
												],
												"src": "2520:393:9"
											},
											{
												"body": {
													"nativeSrc": "2964:32:9",
													"nodeType": "YulBlock",
													"src": "2964:32:9",
													"statements": [
														{
															"nativeSrc": "2974:16:9",
															"nodeType": "YulAssignment",
															"src": "2974:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2985:5:9",
																"nodeType": "YulIdentifier",
																"src": "2985:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2974:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2974:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2919:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2946:5:9",
														"nodeType": "YulTypedName",
														"src": "2946:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2956:7:9",
														"nodeType": "YulTypedName",
														"src": "2956:7:9",
														"type": ""
													}
												],
												"src": "2919:77:9"
											},
											{
												"body": {
													"nativeSrc": "3034:28:9",
													"nodeType": "YulBlock",
													"src": "3034:28:9",
													"statements": [
														{
															"nativeSrc": "3044:12:9",
															"nodeType": "YulAssignment",
															"src": "3044:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "3051:5:9",
																"nodeType": "YulIdentifier",
																"src": "3051:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3044:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3044:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3002:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3020:5:9",
														"nodeType": "YulTypedName",
														"src": "3020:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3030:3:9",
														"nodeType": "YulTypedName",
														"src": "3030:3:9",
														"type": ""
													}
												],
												"src": "3002:60:9"
											},
											{
												"body": {
													"nativeSrc": "3128:82:9",
													"nodeType": "YulBlock",
													"src": "3128:82:9",
													"statements": [
														{
															"nativeSrc": "3138:66:9",
															"nodeType": "YulAssignment",
															"src": "3138:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3196:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3196:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3178:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "3178:17:9"
																				},
																				"nativeSrc": "3178:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3178:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3169:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "3169:8:9"
																		},
																		"nativeSrc": "3169:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3169:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3151:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "3151:17:9"
																},
																"nativeSrc": "3151:53:9",
																"nodeType": "YulFunctionCall",
																"src": "3151:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3138:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "3138:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3068:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3108:5:9",
														"nodeType": "YulTypedName",
														"src": "3108:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3118:9:9",
														"nodeType": "YulTypedName",
														"src": "3118:9:9",
														"type": ""
													}
												],
												"src": "3068:142:9"
											},
											{
												"body": {
													"nativeSrc": "3263:28:9",
													"nodeType": "YulBlock",
													"src": "3263:28:9",
													"statements": [
														{
															"nativeSrc": "3273:12:9",
															"nodeType": "YulAssignment",
															"src": "3273:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "3280:5:9",
																"nodeType": "YulIdentifier",
																"src": "3280:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3273:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3273:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3216:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3249:5:9",
														"nodeType": "YulTypedName",
														"src": "3249:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3259:3:9",
														"nodeType": "YulTypedName",
														"src": "3259:3:9",
														"type": ""
													}
												],
												"src": "3216:75:9"
											},
											{
												"body": {
													"nativeSrc": "3373:193:9",
													"nodeType": "YulBlock",
													"src": "3373:193:9",
													"statements": [
														{
															"nativeSrc": "3383:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3383:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3438:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "3438:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3407:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "3407:30:9"
																},
																"nativeSrc": "3407:39:9",
																"nodeType": "YulFunctionCall",
																"src": "3407:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3387:16:9",
																	"nodeType": "YulTypedName",
																	"src": "3387:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3462:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3462:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3502:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "3502:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3496:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "3496:5:9"
																				},
																				"nativeSrc": "3496:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3509:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3509:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3541:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "3541:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3517:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "3517:23:9"
																				},
																				"nativeSrc": "3517:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3517:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3468:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "3468:27:9"
																		},
																		"nativeSrc": "3468:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3468:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3455:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:9"
																},
																"nativeSrc": "3455:105:9",
																"nodeType": "YulFunctionCall",
																"src": "3455:105:9"
															},
															"nativeSrc": "3455:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "3455:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3297:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3350:4:9",
														"nodeType": "YulTypedName",
														"src": "3350:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3356:6:9",
														"nodeType": "YulTypedName",
														"src": "3356:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3364:7:9",
														"nodeType": "YulTypedName",
														"src": "3364:7:9",
														"type": ""
													}
												],
												"src": "3297:269:9"
											},
											{
												"body": {
													"nativeSrc": "3621:24:9",
													"nodeType": "YulBlock",
													"src": "3621:24:9",
													"statements": [
														{
															"nativeSrc": "3631:8:9",
															"nodeType": "YulAssignment",
															"src": "3631:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "3638:1:9",
																"nodeType": "YulLiteral",
																"src": "3638:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3631:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3631:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3572:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3617:3:9",
														"nodeType": "YulTypedName",
														"src": "3617:3:9",
														"type": ""
													}
												],
												"src": "3572:73:9"
											},
											{
												"body": {
													"nativeSrc": "3704:136:9",
													"nodeType": "YulBlock",
													"src": "3704:136:9",
													"statements": [
														{
															"nativeSrc": "3714:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3714:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3728:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "3728:30:9"
																},
																"nativeSrc": "3728:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3728:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3718:6:9",
																	"nodeType": "YulTypedName",
																	"src": "3718:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3813:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3813:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3819:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3827:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3827:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3769:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3769:43:9"
																},
																"nativeSrc": "3769:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3769:65:9"
															},
															"nativeSrc": "3769:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3769:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3651:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3690:4:9",
														"nodeType": "YulTypedName",
														"src": "3690:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3696:6:9",
														"nodeType": "YulTypedName",
														"src": "3696:6:9",
														"type": ""
													}
												],
												"src": "3651:189:9"
											},
											{
												"body": {
													"nativeSrc": "3896:136:9",
													"nodeType": "YulBlock",
													"src": "3896:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3963:63:9",
																"nodeType": "YulBlock",
																"src": "3963:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4007:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "4007:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4014:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4014:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3977:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "3977:29:9"
																			},
																			"nativeSrc": "3977:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3977:39:9"
																		},
																		"nativeSrc": "3977:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3977:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3916:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3916:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3923:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3923:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3913:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3913:2:9"
																},
																"nativeSrc": "3913:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3913:14:9"
															},
															"nativeSrc": "3906:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3928:26:9",
																"nodeType": "YulBlock",
																"src": "3928:26:9",
																"statements": [
																	{
																		"nativeSrc": "3930:22:9",
																		"nodeType": "YulAssignment",
																		"src": "3930:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3943:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "3943:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3950:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3939:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3939:3:9"
																			},
																			"nativeSrc": "3939:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3939:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3930:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3930:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3910:2:9",
																"nodeType": "YulBlock",
																"src": "3910:2:9",
																"statements": []
															},
															"src": "3906:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3846:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3884:5:9",
														"nodeType": "YulTypedName",
														"src": "3884:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3891:3:9",
														"nodeType": "YulTypedName",
														"src": "3891:3:9",
														"type": ""
													}
												],
												"src": "3846:186:9"
											},
											{
												"body": {
													"nativeSrc": "4117:464:9",
													"nodeType": "YulBlock",
													"src": "4117:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4143:431:9",
																"nodeType": "YulBlock",
																"src": "4143:431:9",
																"statements": [
																	{
																		"nativeSrc": "4157:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4157:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4205:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "4205:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4173:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "4173:31:9"
																			},
																			"nativeSrc": "4173:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4173:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4161:8:9",
																				"nodeType": "YulTypedName",
																				"src": "4161:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4224:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4224:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4247:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "4247:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4275:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "4275:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4257:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "4257:17:9"
																					},
																					"nativeSrc": "4257:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4257:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4243:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4243:3:9"
																			},
																			"nativeSrc": "4243:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4243:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4228:11:9",
																				"nodeType": "YulTypedName",
																				"src": "4228:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4444:27:9",
																			"nodeType": "YulBlock",
																			"src": "4444:27:9",
																			"statements": [
																				{
																					"nativeSrc": "4446:23:9",
																					"nodeType": "YulAssignment",
																					"src": "4446:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4461:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "4461:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4446:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "4446:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4428:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "4428:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4440:2:9",
																					"nodeType": "YulLiteral",
																					"src": "4440:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4425:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "4425:2:9"
																			},
																			"nativeSrc": "4425:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4425:18:9"
																		},
																		"nativeSrc": "4422:49:9",
																		"nodeType": "YulIf",
																		"src": "4422:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4513:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "4513:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4530:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "4530:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4558:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4558:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4540:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "4540:17:9"
																							},
																							"nativeSrc": "4540:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "4540:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4526:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "4526:3:9"
																					},
																					"nativeSrc": "4526:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4526:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4484:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "4484:28:9"
																			},
																			"nativeSrc": "4484:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4484:80:9"
																		},
																		"nativeSrc": "4484:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4484:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4134:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4134:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4139:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4139:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4131:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4131:2:9"
																},
																"nativeSrc": "4131:11:9",
																"nodeType": "YulFunctionCall",
																"src": "4131:11:9"
															},
															"nativeSrc": "4128:446:9",
															"nodeType": "YulIf",
															"src": "4128:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4038:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4093:5:9",
														"nodeType": "YulTypedName",
														"src": "4093:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4100:3:9",
														"nodeType": "YulTypedName",
														"src": "4100:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4105:10:9",
														"nodeType": "YulTypedName",
														"src": "4105:10:9",
														"type": ""
													}
												],
												"src": "4038:543:9"
											},
											{
												"body": {
													"nativeSrc": "4650:54:9",
													"nodeType": "YulBlock",
													"src": "4650:54:9",
													"statements": [
														{
															"nativeSrc": "4660:37:9",
															"nodeType": "YulAssignment",
															"src": "4660:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4685:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4685:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4691:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4691:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4681:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:9"
																},
																"nativeSrc": "4681:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4681:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4660:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "4660:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4587:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4625:4:9",
														"nodeType": "YulTypedName",
														"src": "4625:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4631:5:9",
														"nodeType": "YulTypedName",
														"src": "4631:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4641:8:9",
														"nodeType": "YulTypedName",
														"src": "4641:8:9",
														"type": ""
													}
												],
												"src": "4587:117:9"
											},
											{
												"body": {
													"nativeSrc": "4761:118:9",
													"nodeType": "YulBlock",
													"src": "4761:118:9",
													"statements": [
														{
															"nativeSrc": "4771:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4771:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4820:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4820:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4823:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4823:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4816:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4816:3:9"
																				},
																				"nativeSrc": "4816:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4816:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4835:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4835:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4831:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4831:3:9"
																				},
																				"nativeSrc": "4831:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4831:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4787:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "4787:28:9"
																		},
																		"nativeSrc": "4787:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4787:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4783:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4783:3:9"
																},
																"nativeSrc": "4783:56:9",
																"nodeType": "YulFunctionCall",
																"src": "4783:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4775:4:9",
																	"nodeType": "YulTypedName",
																	"src": "4775:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4848:25:9",
															"nodeType": "YulAssignment",
															"src": "4848:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4862:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4862:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4868:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4868:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4858:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4858:3:9"
																},
																"nativeSrc": "4858:15:9",
																"nodeType": "YulFunctionCall",
																"src": "4858:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4848:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4848:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4710:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4738:4:9",
														"nodeType": "YulTypedName",
														"src": "4738:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4744:5:9",
														"nodeType": "YulTypedName",
														"src": "4744:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4754:6:9",
														"nodeType": "YulTypedName",
														"src": "4754:6:9",
														"type": ""
													}
												],
												"src": "4710:169:9"
											},
											{
												"body": {
													"nativeSrc": "4965:214:9",
													"nodeType": "YulBlock",
													"src": "4965:214:9",
													"statements": [
														{
															"nativeSrc": "5098:37:9",
															"nodeType": "YulAssignment",
															"src": "5098:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5125:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5125:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5131:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5131:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5106:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "5106:18:9"
																},
																"nativeSrc": "5106:29:9",
																"nodeType": "YulFunctionCall",
																"src": "5106:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5098:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5098:4:9"
																}
															]
														},
														{
															"nativeSrc": "5144:29:9",
															"nodeType": "YulAssignment",
															"src": "5144:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5155:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5155:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5165:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5165:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5168:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "5168:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5161:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5161:3:9"
																		},
																		"nativeSrc": "5161:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5152:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5152:2:9"
																},
																"nativeSrc": "5152:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5152:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5144:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5144:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4884:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4946:4:9",
														"nodeType": "YulTypedName",
														"src": "4946:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4952:3:9",
														"nodeType": "YulTypedName",
														"src": "4952:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4960:4:9",
														"nodeType": "YulTypedName",
														"src": "4960:4:9",
														"type": ""
													}
												],
												"src": "4884:295:9"
											},
											{
												"body": {
													"nativeSrc": "5276:1303:9",
													"nodeType": "YulBlock",
													"src": "5276:1303:9",
													"statements": [
														{
															"nativeSrc": "5287:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5287:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5334:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5334:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5301:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "5301:32:9"
																},
																"nativeSrc": "5301:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5301:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5291:6:9",
																	"nodeType": "YulTypedName",
																	"src": "5291:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5423:22:9",
																"nodeType": "YulBlock",
																"src": "5423:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5425:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "5425:16:9"
																			},
																			"nativeSrc": "5425:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5425:18:9"
																		},
																		"nativeSrc": "5425:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5425:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5395:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5395:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:18:9",
																		"nodeType": "YulLiteral",
																		"src": "5403:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5392:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5392:2:9"
																},
																"nativeSrc": "5392:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5392:30:9"
															},
															"nativeSrc": "5389:56:9",
															"nodeType": "YulIf",
															"src": "5389:56:9"
														},
														{
															"nativeSrc": "5455:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5455:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5501:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "5501:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5495:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5495:5:9"
																		},
																		"nativeSrc": "5495:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5495:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5469:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "5469:25:9"
																},
																"nativeSrc": "5469:38:9",
																"nodeType": "YulFunctionCall",
																"src": "5469:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5459:6:9",
																	"nodeType": "YulTypedName",
																	"src": "5459:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5600:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5600:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5606:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5606:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5614:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5614:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5554:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "5554:45:9"
																},
																"nativeSrc": "5554:67:9",
																"nodeType": "YulFunctionCall",
																"src": "5554:67:9"
															},
															"nativeSrc": "5554:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "5554:67:9"
														},
														{
															"nativeSrc": "5631:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5631:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "5648:1:9",
																"nodeType": "YulLiteral",
																"src": "5648:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5635:9:9",
																	"nodeType": "YulTypedName",
																	"src": "5635:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5659:17:9",
															"nodeType": "YulAssignment",
															"src": "5659:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "5672:4:9",
																"nodeType": "YulLiteral",
																"src": "5672:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5659:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "5659:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5723:611:9",
																		"nodeType": "YulBlock",
																		"src": "5723:611:9",
																		"statements": [
																			{
																				"nativeSrc": "5737:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5737:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5756:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "5756:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5768:4:9",
																									"nodeType": "YulLiteral",
																									"src": "5768:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5764:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "5764:3:9"
																							},
																							"nativeSrc": "5764:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "5764:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5752:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5752:3:9"
																					},
																					"nativeSrc": "5752:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5752:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5741:7:9",
																						"nodeType": "YulTypedName",
																						"src": "5741:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5788:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5788:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5834:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "5834:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5802:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "5802:31:9"
																					},
																					"nativeSrc": "5802:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5802:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5792:6:9",
																						"nodeType": "YulTypedName",
																						"src": "5792:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5852:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5852:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5861:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5861:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5856:1:9",
																						"nodeType": "YulTypedName",
																						"src": "5856:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5920:163:9",
																					"nodeType": "YulBlock",
																					"src": "5920:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5945:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "5945:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5963:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "5963:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5968:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "5968:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5959:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "5959:3:9"
																												},
																												"nativeSrc": "5959:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "5959:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5953:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "5953:5:9"
																										},
																										"nativeSrc": "5953:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "5953:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5938:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "5938:6:9"
																								},
																								"nativeSrc": "5938:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5938:42:9"
																							},
																							"nativeSrc": "5938:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "5938:42:9"
																						},
																						{
																							"nativeSrc": "5997:24:9",
																							"nodeType": "YulAssignment",
																							"src": "5997:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6011:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "6011:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6019:1:9",
																										"nodeType": "YulLiteral",
																										"src": "6019:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6007:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "6007:3:9"
																								},
																								"nativeSrc": "6007:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6007:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5997:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "5997:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6038:31:9",
																							"nodeType": "YulAssignment",
																							"src": "6038:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6055:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "6055:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6066:2:9",
																										"nodeType": "YulLiteral",
																										"src": "6066:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6051:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "6051:3:9"
																								},
																								"nativeSrc": "6051:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6051:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6038:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "6038:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5886:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "5886:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5889:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "5889:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5883:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "5883:2:9"
																					},
																					"nativeSrc": "5883:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5883:14:9"
																				},
																				"nativeSrc": "5875:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5898:21:9",
																					"nodeType": "YulBlock",
																					"src": "5898:21:9",
																					"statements": [
																						{
																							"nativeSrc": "5900:17:9",
																							"nodeType": "YulAssignment",
																							"src": "5900:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5909:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "5909:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5912:4:9",
																										"nodeType": "YulLiteral",
																										"src": "5912:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5905:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "5905:3:9"
																								},
																								"nativeSrc": "5905:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5905:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5900:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "5900:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5879:3:9",
																					"nodeType": "YulBlock",
																					"src": "5879:3:9",
																					"statements": []
																				},
																				"src": "5875:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "6119:156:9",
																					"nodeType": "YulBlock",
																					"src": "6119:156:9",
																					"statements": [
																						{
																							"nativeSrc": "6137:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6137:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6164:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "6164:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6169:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "6169:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6160:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "6160:3:9"
																										},
																										"nativeSrc": "6160:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6160:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6154:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6154:5:9"
																								},
																								"nativeSrc": "6154:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6154:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6141:9:9",
																									"nodeType": "YulTypedName",
																									"src": "6141:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6204:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "6204:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6231:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "6231:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6246:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "6246:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6254:4:9",
																														"nodeType": "YulLiteral",
																														"src": "6254:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6242:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "6242:3:9"
																												},
																												"nativeSrc": "6242:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "6242:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6212:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "6212:18:9"
																										},
																										"nativeSrc": "6212:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6212:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6197:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "6197:6:9"
																								},
																								"nativeSrc": "6197:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6197:64:9"
																							},
																							"nativeSrc": "6197:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "6197:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6102:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "6102:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6111:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "6111:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6099:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "6099:2:9"
																					},
																					"nativeSrc": "6099:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6099:19:9"
																				},
																				"nativeSrc": "6096:179:9",
																				"nodeType": "YulIf",
																				"src": "6096:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6295:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "6295:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6309:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "6309:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6317:1:9",
																											"nodeType": "YulLiteral",
																											"src": "6317:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6305:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "6305:3:9"
																									},
																									"nativeSrc": "6305:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "6305:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6321:1:9",
																									"nodeType": "YulLiteral",
																									"src": "6321:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6301:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "6301:3:9"
																							},
																							"nativeSrc": "6301:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "6301:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6288:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6288:6:9"
																					},
																					"nativeSrc": "6288:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6288:36:9"
																				},
																				"nativeSrc": "6288:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "6288:36:9"
																			}
																		]
																	},
																	"nativeSrc": "5716:618:9",
																	"nodeType": "YulCase",
																	"src": "5716:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5721:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5721:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6351:222:9",
																		"nodeType": "YulBlock",
																		"src": "6351:222:9",
																		"statements": [
																			{
																				"nativeSrc": "6365:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6365:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6378:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6378:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6369:5:9",
																						"nodeType": "YulTypedName",
																						"src": "6369:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6402:67:9",
																					"nodeType": "YulBlock",
																					"src": "6402:67:9",
																					"statements": [
																						{
																							"nativeSrc": "6420:35:9",
																							"nodeType": "YulAssignment",
																							"src": "6420:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6439:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "6439:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6444:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "6444:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6435:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "6435:3:9"
																										},
																										"nativeSrc": "6435:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6435:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6429:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6429:5:9"
																								},
																								"nativeSrc": "6429:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6429:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6420:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6420:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6395:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "6395:6:9"
																				},
																				"nativeSrc": "6392:77:9",
																				"nodeType": "YulIf",
																				"src": "6392:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6489:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "6489:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6548:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6548:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6555:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "6555:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6495:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "6495:52:9"
																							},
																							"nativeSrc": "6495:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "6495:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6482:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6482:6:9"
																					},
																					"nativeSrc": "6482:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6482:81:9"
																				},
																				"nativeSrc": "6482:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "6482:81:9"
																			}
																		]
																	},
																	"nativeSrc": "6343:230:9",
																	"nodeType": "YulCase",
																	"src": "6343:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5696:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5696:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5704:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5693:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5693:2:9"
																},
																"nativeSrc": "5693:14:9",
																"nodeType": "YulFunctionCall",
																"src": "5693:14:9"
															},
															"nativeSrc": "5686:887:9",
															"nodeType": "YulSwitch",
															"src": "5686:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5184:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5265:4:9",
														"nodeType": "YulTypedName",
														"src": "5265:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5271:3:9",
														"nodeType": "YulTypedName",
														"src": "5271:3:9",
														"type": ""
													}
												],
												"src": "5184:1395:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b506040516127b13803806127b1833981810160405281019061003191906101d1565b6040518060400160405280601281526020017f536174616e47616d6573205320546f6b656e00000000000000000000000000008152506040518060400160405280600381526020017f7367530000000000000000000000000000000000000000000000000000000000815250838073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505081600390816100e2919061044c565b5080600490816100f2919061044c565b5050506a372537349a396a2868000060058190555068241a9b4f617a28000060068190555080600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426009819055505f6007819055505f600881905550505061051b565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101a082610177565b9050919050565b6101b081610196565b81146101ba575f5ffd5b50565b5f815190506101cb816101a7565b92915050565b5f5f604083850312156101e7576101e6610173565b5b5f6101f4858286016101bd565b9250506020610205858286016101bd565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061028a57607f821691505b60208210810361029d5761029c610246565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102c4565b61030986836102c4565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61034d61034861034384610321565b61032a565b610321565b9050919050565b5f819050919050565b61036683610333565b61037a61037282610354565b8484546102d0565b825550505050565b5f5f905090565b610391610382565b61039c81848461035d565b505050565b5b818110156103bf576103b45f82610389565b6001810190506103a2565b5050565b601f821115610404576103d5816102a3565b6103de846102b5565b810160208510156103ed578190505b6104016103f9856102b5565b8301826103a1565b50505b505050565b5f82821c905092915050565b5f6104245f1984600802610409565b1980831691505092915050565b5f61043c8383610415565b9150826002028217905092915050565b6104558261020f565b67ffffffffffffffff81111561046e5761046d610219565b5b6104788254610273565b6104838282856103c3565b5f60209050601f8311600181146104b4575f84156104a2578287015190505b6104ac8582610431565b865550610513565b601f1984166104c2866102a3565b5f5b828110156104e9578489015182556001820191506020850194506020810190506104c4565b868310156105065784890151610502601f891682610415565b8355505b6001600288020188555050505b505050505050565b6080516122696105485f395f81816108010152818161091401528181610d290152610d7d01526122695ff3fe6080604052600436106101b6575f3560e01c806343270d56116100eb578063967372a311610089578063c57981b511610063578063c57981b5146105f2578063d5abeb011461061c578063dd62ed3e14610646578063f68c2bfd14610682576101b6565b8063967372a314610550578063998f1b801461057a578063a9059cbb146105b6576101b6565b8063708666ad116100c5578063708666ad1461049657806370a08231146104c05780638cd221c9146104fc57806395d89b4114610526576101b6565b806343270d561461041857806347fec1a2146104425780636641ea081461046c576101b6565b806323b872dd1161015857806333d608f11161013257806333d608f11461037257806336667e7f1461039c57806336bcf7d6146103c657806342966c68146103f0576101b6565b806323b872dd146102d05780632566c9ea1461030c578063313ce56714610348576101b6565b806318160ddd1161019457806318160ddd1461024a5780631d6ad8e2146102745780631d729c5a1461027e5780631fe543e3146102a8576101b6565b806306fdde03146101ba57806307621eca146101e4578063095ea7b31461020e575b5f5ffd5b3480156101c5575f5ffd5b506101ce6106be565b6040516101db9190611ac4565b60405180910390f35b3480156101ef575f5ffd5b506101f861074e565b6040516102059190611afc565b60405180910390f35b348015610219575f5ffd5b50610234600480360381019061022f9190611ba1565b610754565b6040516102419190611bf9565b60405180910390f35b348015610255575f5ffd5b5061025e610776565b60405161026b9190611afc565b60405180910390f35b61027c61077f565b005b348015610289575f5ffd5b50610292610d11565b60405161029f9190611afc565b60405180910390f35b3480156102b3575f5ffd5b506102ce60048036038101906102c99190611c73565b610d27565b005b3480156102db575f5ffd5b506102f660048036038101906102f19190611cd0565b610de9565b6040516103039190611bf9565b60405180910390f35b348015610317575f5ffd5b50610332600480360381019061032d9190611d20565b610e17565b60405161033f9190611afc565b60405180910390f35b348015610353575f5ffd5b5061035c610e2c565b6040516103699190611d66565b60405180910390f35b34801561037d575f5ffd5b50610386610e34565b6040516103939190611d9d565b60405180910390f35b3480156103a7575f5ffd5b506103b0610e3b565b6040516103bd9190611afc565b60405180910390f35b3480156103d1575f5ffd5b506103da610e41565b6040516103e79190611afc565b60405180910390f35b3480156103fb575f5ffd5b5061041660048036038101906104119190611d20565b610e4e565b005b348015610423575f5ffd5b5061042c61103a565b6040516104399190611afc565b60405180910390f35b34801561044d575f5ffd5b5061045661103f565b6040516104639190611afc565b60405180910390f35b348015610477575f5ffd5b50610480611045565b60405161048d9190611afc565b60405180910390f35b3480156104a1575f5ffd5b506104aa61104a565b6040516104b79190611dc5565b60405180910390f35b3480156104cb575f5ffd5b506104e660048036038101906104e19190611dde565b61106f565b6040516104f39190611afc565b60405180910390f35b348015610507575f5ffd5b506105106110b4565b60405161051d9190611afc565b60405180910390f35b348015610531575f5ffd5b5061053a6110ba565b6040516105479190611ac4565b60405180910390f35b34801561055b575f5ffd5b5061056461114a565b6040516105719190611afc565b60405180910390f35b348015610585575f5ffd5b506105a0600480360381019061059b9190611e09565b611150565b6040516105ad9190611dc5565b60405180910390f35b3480156105c1575f5ffd5b506105dc60048036038101906105d79190611ba1565b61118d565b6040516105e99190611bf9565b60405180910390f35b3480156105fd575f5ffd5b506106066111af565b6040516106139190611afc565b60405180910390f35b348015610627575f5ffd5b506106306111bb565b60405161063d9190611afc565b60405180910390f35b348015610651575f5ffd5b5061066c60048036038101906106679190611e47565b6111c1565b6040516106799190611afc565b60405180910390f35b34801561068d575f5ffd5b506106a860048036038101906106a39190611d20565b611243565b6040516106b59190611afc565b60405180910390f35b6060600380546106cd90611eb2565b80601f01602080910402602001604051908101604052809291908181526020018280546106f990611eb2565b80156107445780601f1061071b57610100808354040283529160200191610744565b820191905f5260205f20905b81548152906001019060200180831161072757829003601f168201915b5050505050905090565b60065481565b5f5f61075e61125d565b905061076b818585611264565b600191505092915050565b5f600254905090565b67016345785d8a00003410156107c1576040517f732f941300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f603c6009546107d19190611f0f565b42101590505f5f600c5f60075481526020019081526020015f20541190508180156107f95750805b15610a84575f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c66d3d1862030d406040518263ffffffff1660e01b815260040161085b9190611f7b565b602060405180830381865afa158015610876573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061089a9190611fa8565b9050804710156108d6576040517f786e0a9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f600c5f60075481526020019081526020015f205490505f600e5f60075481526020019081526020015f205490505f81036109115760065490505b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663cb9bb27f8562030d406001306040518563ffffffff1660e01b81526004016109749392919061200c565b60206040518083038185885af1158015610990573d5f5f3e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906109b59190611fa8565b9050600754600d5f8381526020019081526020015f208190555081600e5f60075481526020019081526020015f2081905550600754817fa77018cfa060263f92c58b53277f73d2eade9d69e943460421e26e648eed9f338585604051610a1c929190612041565b60405180910390a361c382600854610a349190611f0f565b60075410610a5f57600260065f828254610a4e9190612095565b925050819055506007546008819055505b600160075f828254610a719190611f0f565b9250508190555042600981905550505050505b5f600c5f60075481526020019081526020015f2054905033600b5f60075481526020019081526020015f205f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600181610b089190611f0f565b600c5f60075481526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff166007547f66f19fb732c3e13893ea1bb5573839d7d0b41effc0aef6b59283c15ea5a0dbf960405160405180910390a35f6064600567016345785d8a0000610b7d91906120c5565b610b879190612095565b90505f600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610bcf90612133565b5f6040518083038185875af1925050503d805f8114610c09576040519150601f19603f3d011682016040523d82523d5f602084013e610c0e565b606091505b5050905080610c49576040517f4033e4e300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f67016345785d8a000034610c5e9190612147565b90505f811115610d09573373ffffffffffffffffffffffffffffffffffffffff1681604051610c8c90612133565b5f6040518083038185875af1925050503d805f8114610cc6576040519150601f19603f3d011682016040523d82523d5f602084013e610ccb565b606091505b50508092505081610d08576040517ff0c49d4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b505050505050565b5f61c382600854610d229190611f0f565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dd957337f00000000000000000000000000000000000000000000000000000000000000006040517f20138a9f000000000000000000000000000000000000000000000000000000008152600401610dd092919061217a565b60405180910390fd5b610de4838383611276565b505050565b5f5f610df361125d565b9050610e008582856113eb565b610e0b85858561147e565b60019150509392505050565b600c602052805f5260405f205f915090505481565b5f6012905090565b62030d4081565b61c38281565b68241a9b4f617a28000081565b5f8103610e87576040517f98642b8600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f4790505f8103610ec4576040517f786e0a9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610ecd610776565b90505f8103610f08576040517f786e0a9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f818385610f1691906120c5565b610f209190612095565b9050610f2c338561156e565b8360055f828254610f3d9190612147565b925050819055505f3373ffffffffffffffffffffffffffffffffffffffff1682604051610f6990612133565b5f6040518083038185875af1925050503d805f8114610fa3576040519150601f19603f3d011682016040523d82523d5f602084013e610fa8565b606091505b5050905080610fe3576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f23ff0e75edf108e3d0392d92e13e8c8a868ef19001bd49f9e94876dc46dff87f868460405161102b929190612041565b60405180910390a25050505050565b600581565b60095481565b603c81565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60075481565b6060600480546110c990611eb2565b80601f01602080910402602001604051908101604052809291908181526020018280546110f590611eb2565b80156111405780601f1061111757610100808354040283529160200191611140565b820191905f5260205f20905b81548152906001019060200180831161112357829003601f168201915b5050505050905090565b60085481565b600b602052815f5260405f20602052805f5260405f205f915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f61119761125d565b90506111a481858561147e565b600191505092915050565b67016345785d8a000081565b60055481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f600c5f8381526020019081526020015f20549050919050565b5f33905090565b61127183838360016115ed565b505050565b5f600d5f8581526020019081526020015f20549050600d5f8581526020019081526020015f205f90555f600c5f8381526020019081526020015f205490505f8111156113e4575f8185855f8181106112d1576112d06121a1565b5b905060200201356112e291906121ce565b90505f600b5f8581526020019081526020015f205f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f600e5f8681526020019081526020015f205490505f81036113495760065490505b60055481611355610776565b61135f9190611f0f565b111561137d5761136d610776565b60055461137a9190612147565b90505b5f8111156113e05761138f82826117bc565b8173ffffffffffffffffffffffffffffffffffffffff1685897fdd7933a060407298571fe36223f480ee3508053fdb7238a1fe246f52b62c8e73846040516113d79190611afc565b60405180910390a45b5050505b5050505050565b5f6113f684846111c1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156114785781811015611469578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611460939291906121fe565b60405180910390fd5b61147784848484035f6115ed565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114ee575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114e59190611dc5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361155e575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115559190611dc5565b60405180910390fd5b61156983838361183b565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115de575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115d59190611dc5565b60405180910390fd5b6115e9825f8361183b565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361165d575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016116549190611dc5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116cd575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016116c49190611dc5565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156117b6578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516117ad9190611afc565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361182c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016118239190611dc5565b60405180910390fd5b6118375f838361183b565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361188b578060025f82825461187f9190611f0f565b92505081905550611959565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611914578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161190b939291906121fe565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119a0578060025f82825403925050819055506119ea565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611a479190611afc565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611a9682611a54565b611aa08185611a5e565b9350611ab0818560208601611a6e565b611ab981611a7c565b840191505092915050565b5f6020820190508181035f830152611adc8184611a8c565b905092915050565b5f819050919050565b611af681611ae4565b82525050565b5f602082019050611b0f5f830184611aed565b92915050565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611b4682611b1d565b9050919050565b611b5681611b3c565b8114611b60575f5ffd5b50565b5f81359050611b7181611b4d565b92915050565b611b8081611ae4565b8114611b8a575f5ffd5b50565b5f81359050611b9b81611b77565b92915050565b5f5f60408385031215611bb757611bb6611b15565b5b5f611bc485828601611b63565b9250506020611bd585828601611b8d565b9150509250929050565b5f8115159050919050565b611bf381611bdf565b82525050565b5f602082019050611c0c5f830184611bea565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112611c3357611c32611c12565b5b8235905067ffffffffffffffff811115611c5057611c4f611c16565b5b602083019150836020820283011115611c6c57611c6b611c1a565b5b9250929050565b5f5f5f60408486031215611c8a57611c89611b15565b5b5f611c9786828701611b8d565b935050602084013567ffffffffffffffff811115611cb857611cb7611b19565b5b611cc486828701611c1e565b92509250509250925092565b5f5f5f60608486031215611ce757611ce6611b15565b5b5f611cf486828701611b63565b9350506020611d0586828701611b63565b9250506040611d1686828701611b8d565b9150509250925092565b5f60208284031215611d3557611d34611b15565b5b5f611d4284828501611b8d565b91505092915050565b5f60ff82169050919050565b611d6081611d4b565b82525050565b5f602082019050611d795f830184611d57565b92915050565b5f63ffffffff82169050919050565b611d9781611d7f565b82525050565b5f602082019050611db05f830184611d8e565b92915050565b611dbf81611b3c565b82525050565b5f602082019050611dd85f830184611db6565b92915050565b5f60208284031215611df357611df2611b15565b5b5f611e0084828501611b63565b91505092915050565b5f5f60408385031215611e1f57611e1e611b15565b5b5f611e2c85828601611b8d565b9250506020611e3d85828601611b8d565b9150509250929050565b5f5f60408385031215611e5d57611e5c611b15565b5b5f611e6a85828601611b63565b9250506020611e7b85828601611b63565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ec957607f821691505b602082108103611edc57611edb611e85565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f1982611ae4565b9150611f2483611ae4565b9250828201905080821115611f3c57611f3b611ee2565b5b92915050565b5f819050919050565b5f611f65611f60611f5b84611d7f565b611f42565b611ae4565b9050919050565b611f7581611f4b565b82525050565b5f602082019050611f8e5f830184611f6c565b92915050565b5f81519050611fa281611b77565b92915050565b5f60208284031215611fbd57611fbc611b15565b5b5f611fca84828501611f94565b91505092915050565b5f819050919050565b5f611ff6611ff1611fec84611fd3565b611f42565b611ae4565b9050919050565b61200681611fdc565b82525050565b5f60608201905061201f5f830186611f6c565b61202c6020830185611ffd565b6120396040830184611db6565b949350505050565b5f6040820190506120545f830185611aed565b6120616020830184611aed565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61209f82611ae4565b91506120aa83611ae4565b9250826120ba576120b9612068565b5b828204905092915050565b5f6120cf82611ae4565b91506120da83611ae4565b92508282026120e881611ae4565b915082820484148315176120ff576120fe611ee2565b5b5092915050565b5f81905092915050565b50565b5f61211e5f83612106565b915061212982612110565b5f82019050919050565b5f61213d82612113565b9150819050919050565b5f61215182611ae4565b915061215c83611ae4565b925082820390508181111561217457612173611ee2565b5b92915050565b5f60408201905061218d5f830185611db6565b61219a6020830184611db6565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6121d882611ae4565b91506121e383611ae4565b9250826121f3576121f2612068565b5b828206905092915050565b5f6060820190506122115f830186611db6565b61221e6020830185611aed565b61222b6040830184611aed565b94935050505056fea264697066735822122052b5a6f95a217bcc4e0ae20f94bbf78068a7988e3bee220c9000d0f95761064e64736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x27B1 CODESIZE SUB DUP1 PUSH2 0x27B1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536174616E47616D6573205320546F6B656E0000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7367530000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x44C JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x44C JUMP JUMPDEST POP POP POP PUSH11 0x372537349A396A28680000 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH9 0x241A9B4F617A280000 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x51B JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A0 DUP3 PUSH2 0x177 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B0 DUP2 PUSH2 0x196 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CB DUP2 PUSH2 0x1A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E7 JUMPI PUSH2 0x1E6 PUSH2 0x173 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F4 DUP6 DUP3 DUP7 ADD PUSH2 0x1BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x205 DUP6 DUP3 DUP7 ADD PUSH2 0x1BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x28A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x29D JUMPI PUSH2 0x29C PUSH2 0x246 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2FF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0x309 DUP7 DUP4 PUSH2 0x2C4 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x34D PUSH2 0x348 PUSH2 0x343 DUP5 PUSH2 0x321 JUMP JUMPDEST PUSH2 0x32A JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x366 DUP4 PUSH2 0x333 JUMP JUMPDEST PUSH2 0x37A PUSH2 0x372 DUP3 PUSH2 0x354 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2D0 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x391 PUSH2 0x382 JUMP JUMPDEST PUSH2 0x39C DUP2 DUP5 DUP5 PUSH2 0x35D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3BF JUMPI PUSH2 0x3B4 PUSH0 DUP3 PUSH2 0x389 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x404 JUMPI PUSH2 0x3D5 DUP2 PUSH2 0x2A3 JUMP JUMPDEST PUSH2 0x3DE DUP5 PUSH2 0x2B5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3ED JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x401 PUSH2 0x3F9 DUP6 PUSH2 0x2B5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3A1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x424 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x409 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x43C DUP4 DUP4 PUSH2 0x415 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x455 DUP3 PUSH2 0x20F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46E JUMPI PUSH2 0x46D PUSH2 0x219 JUMP JUMPDEST JUMPDEST PUSH2 0x478 DUP3 SLOAD PUSH2 0x273 JUMP JUMPDEST PUSH2 0x483 DUP3 DUP3 DUP6 PUSH2 0x3C3 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4B4 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x4A2 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4AC DUP6 DUP3 PUSH2 0x431 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4C2 DUP7 PUSH2 0x2A3 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4E9 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4C4 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x506 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x502 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x415 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2269 PUSH2 0x548 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x801 ADD MSTORE DUP2 DUP2 PUSH2 0x914 ADD MSTORE DUP2 DUP2 PUSH2 0xD29 ADD MSTORE PUSH2 0xD7D ADD MSTORE PUSH2 0x2269 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x43270D56 GT PUSH2 0xEB JUMPI DUP1 PUSH4 0x967372A3 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xC57981B5 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xC57981B5 EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x61C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0xF68C2BFD EQ PUSH2 0x682 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x967372A3 EQ PUSH2 0x550 JUMPI DUP1 PUSH4 0x998F1B80 EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5B6 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x708666AD GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x708666AD EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x8CD221C9 EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x526 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x43270D56 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x47FEC1A2 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0x6641EA08 EQ PUSH2 0x46C JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x158 JUMPI DUP1 PUSH4 0x33D608F1 GT PUSH2 0x132 JUMPI DUP1 PUSH4 0x33D608F1 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x36667E7F EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x36BCF7D6 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3F0 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x2566C9EA EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x348 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x194 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x1D6AD8E2 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x1D729C5A EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x2A8 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x7621ECA EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x20E JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F8 PUSH2 0x74E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1BA1 JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x776 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0x77F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1D20 JUMP JUMPDEST PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x353 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1D66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x386 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3B0 PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3DA PUSH2 0xE41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x416 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x1D20 JUMP JUMPDEST PUSH2 0xE4E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x42C PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x456 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x477 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x480 PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4AA PUSH2 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x106F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x510 PUSH2 0x10B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x53A PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x564 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x571 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x585 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x1BA1 JUMP JUMPDEST PUSH2 0x118D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x606 PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x613 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x627 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x630 PUSH2 0x11BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x651 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x66C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x667 SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x679 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A3 SWAP2 SWAP1 PUSH2 0x1D20 JUMP JUMPDEST PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6CD SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6F9 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x744 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x71B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x744 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x727 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x75E PUSH2 0x125D JUMP JUMPDEST SWAP1 POP PUSH2 0x76B DUP2 DUP6 DUP6 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0x16345785D8A0000 CALLVALUE LT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x732F941300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3C PUSH1 0x9 SLOAD PUSH2 0x7D1 SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST TIMESTAMP LT ISZERO SWAP1 POP PUSH0 PUSH0 PUSH1 0xC PUSH0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x7F9 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xA84 JUMPI PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC66D3D18 PUSH3 0x30D40 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85B SWAP2 SWAP1 PUSH2 0x1F7B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x876 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x89A SWAP2 SWAP1 PUSH2 0x1FA8 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x786E0A9900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xC PUSH0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0xE PUSH0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x911 JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCB9BB27F DUP6 PUSH3 0x30D40 PUSH1 0x1 ADDRESS PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x974 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x200C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x990 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B5 SWAP2 SWAP1 PUSH2 0x1FA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD PUSH1 0xD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xE PUSH0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 SLOAD DUP2 PUSH32 0xA77018CFA060263F92C58B53277F73D2EADE9D69E943460421E26E648EED9F33 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA1C SWAP3 SWAP2 SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC382 PUSH1 0x8 SLOAD PUSH2 0xA34 SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST PUSH1 0x7 SLOAD LT PUSH2 0xA5F JUMPI PUSH1 0x2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA4E SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 SLOAD PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST PUSH0 PUSH1 0xC PUSH0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP CALLER PUSH1 0xB PUSH0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH2 0xB08 SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST PUSH1 0xC PUSH0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 SLOAD PUSH32 0x66F19FB732C3E13893EA1BB5573839D7D0B41EFFC0AEF6B59283C15EA5A0DBF9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 PUSH1 0x64 PUSH1 0x5 PUSH8 0x16345785D8A0000 PUSH2 0xB7D SWAP2 SWAP1 PUSH2 0x20C5 JUMP JUMPDEST PUSH2 0xB87 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xBCF SWAP1 PUSH2 0x2133 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xC09 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4033E4E300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0x16345785D8A0000 CALLVALUE PUSH2 0xC5E SWAP2 SWAP1 PUSH2 0x2147 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xD09 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH2 0xC8C SWAP1 PUSH2 0x2133 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP DUP1 SWAP3 POP POP DUP2 PUSH2 0xD08 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF0C49D4400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC382 PUSH1 0x8 SLOAD PUSH2 0xD22 SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDD9 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x20138A9F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD0 SWAP3 SWAP2 SWAP1 PUSH2 0x217A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDE4 DUP4 DUP4 DUP4 PUSH2 0x1276 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xDF3 PUSH2 0x125D JUMP JUMPDEST SWAP1 POP PUSH2 0xE00 DUP6 DUP3 DUP6 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0xE0B DUP6 DUP6 DUP6 PUSH2 0x147E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x30D40 DUP2 JUMP JUMPDEST PUSH2 0xC382 DUP2 JUMP JUMPDEST PUSH9 0x241A9B4F617A280000 DUP2 JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0xE87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x98642B8600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x786E0A9900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xECD PUSH2 0x776 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xF08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x786E0A9900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 DUP4 DUP6 PUSH2 0xF16 SWAP2 SWAP1 PUSH2 0x20C5 JUMP JUMPDEST PUSH2 0xF20 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST SWAP1 POP PUSH2 0xF2C CALLER DUP6 PUSH2 0x156E JUMP JUMPDEST DUP4 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF3D SWAP2 SWAP1 PUSH2 0x2147 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xF69 SWAP1 PUSH2 0x2133 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xFA3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFA8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xFE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23FF0E75EDF108E3D0392D92E13E8C8A868EF19001BD49F9E94876DC46DFF87F DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0x102B SWAP3 SWAP2 SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3C DUP2 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x10C9 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10F5 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1140 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1117 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1140 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1123 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1197 PUSH2 0x125D JUMP JUMPDEST SWAP1 POP PUSH2 0x11A4 DUP2 DUP6 DUP6 PUSH2 0x147E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1271 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x15ED JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH1 0xD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH0 PUSH1 0xC PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x13E4 JUMPI PUSH0 DUP2 DUP6 DUP6 PUSH0 DUP2 DUP2 LT PUSH2 0x12D1 JUMPI PUSH2 0x12D0 PUSH2 0x21A1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x12E2 SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0xE PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x1349 JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x5 SLOAD DUP2 PUSH2 0x1355 PUSH2 0x776 JUMP JUMPDEST PUSH2 0x135F SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST GT ISZERO PUSH2 0x137D JUMPI PUSH2 0x136D PUSH2 0x776 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x137A SWAP2 SWAP1 PUSH2 0x2147 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x13E0 JUMPI PUSH2 0x138F DUP3 DUP3 PUSH2 0x17BC JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP10 PUSH32 0xDD7933A060407298571FE36223F480EE3508053FDB7238A1FE246F52B62C8E73 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13D7 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13F6 DUP5 DUP5 PUSH2 0x11C1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1478 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1469 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1460 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1477 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x15ED JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14EE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E5 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x155E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1555 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1569 DUP4 DUP4 DUP4 PUSH2 0x183B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D5 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15E9 DUP3 PUSH0 DUP4 PUSH2 0x183B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x165D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1654 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16CD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C4 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x17B6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x17AD SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x182C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1823 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1837 PUSH0 DUP4 DUP4 PUSH2 0x183B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x188B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x187F SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1959 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1914 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x190B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19A0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x19EA JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A47 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A96 DUP3 PUSH2 0x1A54 JUMP JUMPDEST PUSH2 0x1AA0 DUP2 DUP6 PUSH2 0x1A5E JUMP JUMPDEST SWAP4 POP PUSH2 0x1AB0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0x1AB9 DUP2 PUSH2 0x1A7C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ADC DUP2 DUP5 PUSH2 0x1A8C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AF6 DUP2 PUSH2 0x1AE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0F PUSH0 DUP4 ADD DUP5 PUSH2 0x1AED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B46 DUP3 PUSH2 0x1B1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B56 DUP2 PUSH2 0x1B3C JUMP JUMPDEST DUP2 EQ PUSH2 0x1B60 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B71 DUP2 PUSH2 0x1B4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B80 DUP2 PUSH2 0x1AE4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B8A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B9B DUP2 PUSH2 0x1B77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BB7 JUMPI PUSH2 0x1BB6 PUSH2 0x1B15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BC4 DUP6 DUP3 DUP7 ADD PUSH2 0x1B63 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BD5 DUP6 DUP3 DUP7 ADD PUSH2 0x1B8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF3 DUP2 PUSH2 0x1BDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C0C PUSH0 DUP4 ADD DUP5 PUSH2 0x1BEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1C33 JUMPI PUSH2 0x1C32 PUSH2 0x1C12 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C50 JUMPI PUSH2 0x1C4F PUSH2 0x1C16 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1C6C JUMPI PUSH2 0x1C6B PUSH2 0x1C1A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C8A JUMPI PUSH2 0x1C89 PUSH2 0x1B15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C97 DUP7 DUP3 DUP8 ADD PUSH2 0x1B8D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CB8 JUMPI PUSH2 0x1CB7 PUSH2 0x1B19 JUMP JUMPDEST JUMPDEST PUSH2 0x1CC4 DUP7 DUP3 DUP8 ADD PUSH2 0x1C1E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CE7 JUMPI PUSH2 0x1CE6 PUSH2 0x1B15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CF4 DUP7 DUP3 DUP8 ADD PUSH2 0x1B63 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D05 DUP7 DUP3 DUP8 ADD PUSH2 0x1B63 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D16 DUP7 DUP3 DUP8 ADD PUSH2 0x1B8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D35 JUMPI PUSH2 0x1D34 PUSH2 0x1B15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D42 DUP5 DUP3 DUP6 ADD PUSH2 0x1B8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D60 DUP2 PUSH2 0x1D4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D79 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D97 DUP2 PUSH2 0x1D7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DB0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DBF DUP2 PUSH2 0x1B3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DF3 JUMPI PUSH2 0x1DF2 PUSH2 0x1B15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E00 DUP5 DUP3 DUP6 ADD PUSH2 0x1B63 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E1F JUMPI PUSH2 0x1E1E PUSH2 0x1B15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E2C DUP6 DUP3 DUP7 ADD PUSH2 0x1B8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E3D DUP6 DUP3 DUP7 ADD PUSH2 0x1B8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E5D JUMPI PUSH2 0x1E5C PUSH2 0x1B15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E6A DUP6 DUP3 DUP7 ADD PUSH2 0x1B63 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E7B DUP6 DUP3 DUP7 ADD PUSH2 0x1B63 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1EC9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1EDC JUMPI PUSH2 0x1EDB PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F19 DUP3 PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F24 DUP4 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F3C JUMPI PUSH2 0x1F3B PUSH2 0x1EE2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F65 PUSH2 0x1F60 PUSH2 0x1F5B DUP5 PUSH2 0x1D7F JUMP JUMPDEST PUSH2 0x1F42 JUMP JUMPDEST PUSH2 0x1AE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F75 DUP2 PUSH2 0x1F4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F8E PUSH0 DUP4 ADD DUP5 PUSH2 0x1F6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FA2 DUP2 PUSH2 0x1B77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FBD JUMPI PUSH2 0x1FBC PUSH2 0x1B15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FCA DUP5 DUP3 DUP6 ADD PUSH2 0x1F94 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF6 PUSH2 0x1FF1 PUSH2 0x1FEC DUP5 PUSH2 0x1FD3 JUMP JUMPDEST PUSH2 0x1F42 JUMP JUMPDEST PUSH2 0x1AE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2006 DUP2 PUSH2 0x1FDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x201F PUSH0 DUP4 ADD DUP7 PUSH2 0x1F6C JUMP JUMPDEST PUSH2 0x202C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FFD JUMP JUMPDEST PUSH2 0x2039 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DB6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2054 PUSH0 DUP4 ADD DUP6 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0x2061 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x209F DUP3 PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x20AA DUP4 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20BA JUMPI PUSH2 0x20B9 PUSH2 0x2068 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20CF DUP3 PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x20DA DUP4 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x20E8 DUP2 PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20FF JUMPI PUSH2 0x20FE PUSH2 0x1EE2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x211E PUSH0 DUP4 PUSH2 0x2106 JUMP JUMPDEST SWAP2 POP PUSH2 0x2129 DUP3 PUSH2 0x2110 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x213D DUP3 PUSH2 0x2113 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2151 DUP3 PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x215C DUP4 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2174 JUMPI PUSH2 0x2173 PUSH2 0x1EE2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x218D PUSH0 DUP4 ADD DUP6 PUSH2 0x1DB6 JUMP JUMPDEST PUSH2 0x219A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DB6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21D8 DUP3 PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x21E3 DUP4 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x21F3 JUMPI PUSH2 0x21F2 PUSH2 0x2068 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2211 PUSH0 DUP4 ADD DUP7 PUSH2 0x1DB6 JUMP JUMPDEST PUSH2 0x221E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0x222B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AED JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xB5 0xA6 EXTDELEGATECALL GAS 0x21 PUSH28 0xCC4E0AE20F94BBF78068A7988E3BEE220C9000D0F95761064E64736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "257:5514:8:-:0;;;1694:391;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1582:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1834:21:8;1653:14:5;1610:58;;;;;;;;;;1568:105;1656:5:1;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1885:17:8::2;1873:9;:29;;;;746:10;1913:13;:30;;;;1971:13;1954:14;;:30;;;;;;;;;;;;;;;;;;2009:15;1995:11;:29;;;;2045:1;2035:7;:11;;;;2076:1;2057:16;:20;;;;1694:391:::0;;257:5514;;88:117:9;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3638:1;3631:8;;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;257:5514:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CALLBACK_GAS_LIMIT_1221": {
									"entryPoint": 3636,
									"id": 1221,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Click_1538": {
									"entryPoint": 1919,
									"id": 1538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@FEE_1215": {
									"entryPoint": 4527,
									"id": 1215,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@HALVING_INTERVAL_ROUNDS_1209": {
									"entryPoint": 3643,
									"id": 1209,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INITIAL_REWARD_1206": {
									"entryPoint": 3649,
									"id": 1206,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LIQUIDITY_SHARE_1218": {
									"entryPoint": 4154,
									"id": 1218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ROUND_DURATION_1212": {
									"entryPoint": 4165,
									"id": 1212,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_542": {
									"entryPoint": 4708,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 5613,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_524": {
									"entryPoint": 5486,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_fulfillRandomWords_1717": {
									"entryPoint": 4726,
									"id": 1717,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 6076,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 4701,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 5099,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 5246,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 6203,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 4545,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1876,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 4207,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1623": {
									"entryPoint": 3662,
									"id": 1623,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@currentReward_1193": {
									"entryPoint": 1870,
									"id": 1193,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_215": {
									"entryPoint": 3628,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPlayersCountInRound_1729": {
									"entryPoint": 4675,
									"id": 1729,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastHalvingRound_1197": {
									"entryPoint": 4426,
									"id": 1197,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastRoundTs_1199": {
									"entryPoint": 4159,
									"id": 1199,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidityVault_1201": {
									"entryPoint": 4170,
									"id": 1201,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxSupply_1191": {
									"entryPoint": 4539,
									"id": 1191,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_197": {
									"entryPoint": 1726,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nextHalvingRound_1739": {
									"entryPoint": 3345,
									"id": 1739,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@playerCount_1231": {
									"entryPoint": 3607,
									"id": 1231,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@players_1227": {
									"entryPoint": 4432,
									"id": 1227,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rawFulfillRandomWords_908": {
									"entryPoint": 3367,
									"id": 908,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@roundId_1195": {
									"entryPoint": 4276,
									"id": 1195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_206": {
									"entryPoint": 4282,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 1910,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 3561,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 4493,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 7198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 8084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 7283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack": {
									"entryPoint": 8189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint256_fromStack": {
									"entryPoint": 8044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32_fromStack": {
									"entryPoint": 7566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 8570,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8702,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8257,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": 7581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32_t_rational_1_by_1_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8204,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 8147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 7551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint256": {
									"entryPoint": 8156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint32_to_t_uint256": {
									"entryPoint": 8011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6766,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 8002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7906,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8296,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7813,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8609,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 7190,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7186,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7194,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6937,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6933,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 8464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15230:9",
										"nodeType": "YulBlock",
										"src": "0:15230:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "208:73:9",
													"nodeType": "YulBlock",
													"src": "208:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:9"
																},
																"nativeSrc": "218:19:9",
																"nodeType": "YulFunctionCall",
																"src": "218:19:9"
															},
															"nativeSrc": "218:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:9"
														},
														{
															"nativeSrc": "246:29:9",
															"nodeType": "YulAssignment",
															"src": "246:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:9",
																		"nodeType": "YulLiteral",
																		"src": "270:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:9"
																},
																"nativeSrc": "261:14:9",
																"nodeType": "YulFunctionCall",
																"src": "261:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:9",
														"nodeType": "YulTypedName",
														"src": "180:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:9",
														"nodeType": "YulTypedName",
														"src": "185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:9",
														"nodeType": "YulTypedName",
														"src": "196:11:9",
														"type": ""
													}
												],
												"src": "112:169:9"
											},
											{
												"body": {
													"nativeSrc": "349:77:9",
													"nodeType": "YulBlock",
													"src": "349:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:9"
																},
																"nativeSrc": "360:23:9",
																"nodeType": "YulFunctionCall",
																"src": "360:23:9"
															},
															"nativeSrc": "360:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:9"
																		},
																		"nativeSrc": "399:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:9",
																		"nodeType": "YulLiteral",
																		"src": "417:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:9"
																},
																"nativeSrc": "392:27:9",
																"nodeType": "YulFunctionCall",
																"src": "392:27:9"
															},
															"nativeSrc": "392:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:9",
														"nodeType": "YulTypedName",
														"src": "331:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:9",
														"nodeType": "YulTypedName",
														"src": "336:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:9",
														"nodeType": "YulTypedName",
														"src": "341:6:9",
														"type": ""
													}
												],
												"src": "287:139:9"
											},
											{
												"body": {
													"nativeSrc": "480:54:9",
													"nodeType": "YulBlock",
													"src": "480:54:9",
													"statements": [
														{
															"nativeSrc": "490:38:9",
															"nodeType": "YulAssignment",
															"src": "490:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:9",
																				"nodeType": "YulLiteral",
																				"src": "515:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:9"
																		},
																		"nativeSrc": "504:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:9",
																				"nodeType": "YulLiteral",
																				"src": "524:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:9"
																		},
																		"nativeSrc": "520:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:9"
																},
																"nativeSrc": "500:28:9",
																"nodeType": "YulFunctionCall",
																"src": "500:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:9",
														"nodeType": "YulTypedName",
														"src": "463:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:9",
														"nodeType": "YulTypedName",
														"src": "473:6:9",
														"type": ""
													}
												],
												"src": "432:102:9"
											},
											{
												"body": {
													"nativeSrc": "632:285:9",
													"nodeType": "YulBlock",
													"src": "632:285:9",
													"statements": [
														{
															"nativeSrc": "642:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:9"
																},
																"nativeSrc": "656:39:9",
																"nodeType": "YulFunctionCall",
																"src": "656:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:9",
																	"nodeType": "YulTypedName",
																	"src": "646:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:9",
															"nodeType": "YulAssignment",
															"src": "704:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:9"
																},
																"nativeSrc": "711:71:9",
																"nodeType": "YulFunctionCall",
																"src": "711:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:9",
																				"nodeType": "YulLiteral",
																				"src": "837:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:9"
																		},
																		"nativeSrc": "826:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:9"
																},
																"nativeSrc": "791:65:9",
																"nodeType": "YulFunctionCall",
																"src": "791:65:9"
															},
															"nativeSrc": "791:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:9"
														},
														{
															"nativeSrc": "865:46:9",
															"nodeType": "YulAssignment",
															"src": "865:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:9"
																		},
																		"nativeSrc": "881:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:9"
																},
																"nativeSrc": "872:39:9",
																"nodeType": "YulFunctionCall",
																"src": "872:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:9",
														"nodeType": "YulTypedName",
														"src": "613:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:9",
														"nodeType": "YulTypedName",
														"src": "620:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:9",
														"nodeType": "YulTypedName",
														"src": "628:3:9",
														"type": ""
													}
												],
												"src": "540:377:9"
											},
											{
												"body": {
													"nativeSrc": "1041:195:9",
													"nodeType": "YulBlock",
													"src": "1041:195:9",
													"statements": [
														{
															"nativeSrc": "1051:26:9",
															"nodeType": "YulAssignment",
															"src": "1051:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:9"
																},
																"nativeSrc": "1059:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:9"
																		},
																		"nativeSrc": "1094:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:9"
																		},
																		"nativeSrc": "1113:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:9"
																},
																"nativeSrc": "1087:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:9"
															},
															"nativeSrc": "1087:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:9"
														},
														{
															"nativeSrc": "1143:86:9",
															"nodeType": "YulAssignment",
															"src": "1143:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:9"
																},
																"nativeSrc": "1151:78:9",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:9",
														"nodeType": "YulTypedName",
														"src": "1013:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:9",
														"nodeType": "YulTypedName",
														"src": "1025:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:9",
														"nodeType": "YulTypedName",
														"src": "1036:4:9",
														"type": ""
													}
												],
												"src": "923:313:9"
											},
											{
												"body": {
													"nativeSrc": "1287:32:9",
													"nodeType": "YulBlock",
													"src": "1287:32:9",
													"statements": [
														{
															"nativeSrc": "1297:16:9",
															"nodeType": "YulAssignment",
															"src": "1297:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "1308:5:9",
																"nodeType": "YulIdentifier",
																"src": "1308:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1297:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1297:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1242:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1269:5:9",
														"nodeType": "YulTypedName",
														"src": "1269:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1279:7:9",
														"nodeType": "YulTypedName",
														"src": "1279:7:9",
														"type": ""
													}
												],
												"src": "1242:77:9"
											},
											{
												"body": {
													"nativeSrc": "1390:53:9",
													"nodeType": "YulBlock",
													"src": "1390:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1407:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1407:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1430:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1430:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1412:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "1412:17:9"
																		},
																		"nativeSrc": "1412:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1412:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1400:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1400:6:9"
																},
																"nativeSrc": "1400:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1400:37:9"
															},
															"nativeSrc": "1400:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "1400:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1325:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1378:5:9",
														"nodeType": "YulTypedName",
														"src": "1378:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1385:3:9",
														"nodeType": "YulTypedName",
														"src": "1385:3:9",
														"type": ""
													}
												],
												"src": "1325:118:9"
											},
											{
												"body": {
													"nativeSrc": "1547:124:9",
													"nodeType": "YulBlock",
													"src": "1547:124:9",
													"statements": [
														{
															"nativeSrc": "1557:26:9",
															"nodeType": "YulAssignment",
															"src": "1557:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1569:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1569:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1580:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1580:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1565:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1565:3:9"
																},
																"nativeSrc": "1565:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1565:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1557:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1557:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1637:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1637:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1650:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1650:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1661:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1661:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1646:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1646:3:9"
																		},
																		"nativeSrc": "1646:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1646:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1593:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "1593:43:9"
																},
																"nativeSrc": "1593:71:9",
																"nodeType": "YulFunctionCall",
																"src": "1593:71:9"
															},
															"nativeSrc": "1593:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "1593:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1449:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1519:9:9",
														"nodeType": "YulTypedName",
														"src": "1519:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1531:6:9",
														"nodeType": "YulTypedName",
														"src": "1531:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1542:4:9",
														"nodeType": "YulTypedName",
														"src": "1542:4:9",
														"type": ""
													}
												],
												"src": "1449:222:9"
											},
											{
												"body": {
													"nativeSrc": "1717:35:9",
													"nodeType": "YulBlock",
													"src": "1717:35:9",
													"statements": [
														{
															"nativeSrc": "1727:19:9",
															"nodeType": "YulAssignment",
															"src": "1727:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1743:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1743:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1737:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1737:5:9"
																},
																"nativeSrc": "1737:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1737:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1727:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1727:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1677:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1710:6:9",
														"nodeType": "YulTypedName",
														"src": "1710:6:9",
														"type": ""
													}
												],
												"src": "1677:75:9"
											},
											{
												"body": {
													"nativeSrc": "1847:28:9",
													"nodeType": "YulBlock",
													"src": "1847:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1864:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1864:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1867:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1867:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1857:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1857:6:9"
																},
																"nativeSrc": "1857:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1857:12:9"
															},
															"nativeSrc": "1857:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1857:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1758:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1758:117:9"
											},
											{
												"body": {
													"nativeSrc": "1970:28:9",
													"nodeType": "YulBlock",
													"src": "1970:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1987:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1990:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1990:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1980:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:9"
																},
																"nativeSrc": "1980:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1980:12:9"
															},
															"nativeSrc": "1980:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1980:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1881:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1881:117:9"
											},
											{
												"body": {
													"nativeSrc": "2049:81:9",
													"nodeType": "YulBlock",
													"src": "2049:81:9",
													"statements": [
														{
															"nativeSrc": "2059:65:9",
															"nodeType": "YulAssignment",
															"src": "2059:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2074:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2074:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2081:42:9",
																		"nodeType": "YulLiteral",
																		"src": "2081:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2070:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2070:3:9"
																},
																"nativeSrc": "2070:54:9",
																"nodeType": "YulFunctionCall",
																"src": "2070:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2059:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2059:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2004:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2031:5:9",
														"nodeType": "YulTypedName",
														"src": "2031:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2041:7:9",
														"nodeType": "YulTypedName",
														"src": "2041:7:9",
														"type": ""
													}
												],
												"src": "2004:126:9"
											},
											{
												"body": {
													"nativeSrc": "2181:51:9",
													"nodeType": "YulBlock",
													"src": "2181:51:9",
													"statements": [
														{
															"nativeSrc": "2191:35:9",
															"nodeType": "YulAssignment",
															"src": "2191:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2220:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2220:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2202:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2202:17:9"
																},
																"nativeSrc": "2202:24:9",
																"nodeType": "YulFunctionCall",
																"src": "2202:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2191:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2191:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2136:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2163:5:9",
														"nodeType": "YulTypedName",
														"src": "2163:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2173:7:9",
														"nodeType": "YulTypedName",
														"src": "2173:7:9",
														"type": ""
													}
												],
												"src": "2136:96:9"
											},
											{
												"body": {
													"nativeSrc": "2281:79:9",
													"nodeType": "YulBlock",
													"src": "2281:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2338:16:9",
																"nodeType": "YulBlock",
																"src": "2338:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2347:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2347:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2350:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2350:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2340:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:9"
																			},
																			"nativeSrc": "2340:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2340:12:9"
																		},
																		"nativeSrc": "2340:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2304:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2304:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2329:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2329:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2311:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2311:17:9"
																				},
																				"nativeSrc": "2311:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2311:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2301:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2301:2:9"
																		},
																		"nativeSrc": "2301:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2301:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2294:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:9"
																},
																"nativeSrc": "2294:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2294:43:9"
															},
															"nativeSrc": "2291:63:9",
															"nodeType": "YulIf",
															"src": "2291:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2238:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2274:5:9",
														"nodeType": "YulTypedName",
														"src": "2274:5:9",
														"type": ""
													}
												],
												"src": "2238:122:9"
											},
											{
												"body": {
													"nativeSrc": "2418:87:9",
													"nodeType": "YulBlock",
													"src": "2418:87:9",
													"statements": [
														{
															"nativeSrc": "2428:29:9",
															"nodeType": "YulAssignment",
															"src": "2428:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2450:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2450:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2437:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2437:12:9"
																},
																"nativeSrc": "2437:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2437:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2428:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2428:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2493:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2493:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2466:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2466:26:9"
																},
																"nativeSrc": "2466:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2466:33:9"
															},
															"nativeSrc": "2466:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2466:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2366:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2396:6:9",
														"nodeType": "YulTypedName",
														"src": "2396:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2404:3:9",
														"nodeType": "YulTypedName",
														"src": "2404:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2412:5:9",
														"nodeType": "YulTypedName",
														"src": "2412:5:9",
														"type": ""
													}
												],
												"src": "2366:139:9"
											},
											{
												"body": {
													"nativeSrc": "2554:79:9",
													"nodeType": "YulBlock",
													"src": "2554:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2611:16:9",
																"nodeType": "YulBlock",
																"src": "2611:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2620:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2623:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2623:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2613:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2613:6:9"
																			},
																			"nativeSrc": "2613:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2613:12:9"
																		},
																		"nativeSrc": "2613:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2613:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2577:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2577:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2602:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2602:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2584:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2584:17:9"
																				},
																				"nativeSrc": "2584:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2574:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2574:2:9"
																		},
																		"nativeSrc": "2574:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2567:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:9"
																},
																"nativeSrc": "2567:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2567:43:9"
															},
															"nativeSrc": "2564:63:9",
															"nodeType": "YulIf",
															"src": "2564:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2511:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2547:5:9",
														"nodeType": "YulTypedName",
														"src": "2547:5:9",
														"type": ""
													}
												],
												"src": "2511:122:9"
											},
											{
												"body": {
													"nativeSrc": "2691:87:9",
													"nodeType": "YulBlock",
													"src": "2691:87:9",
													"statements": [
														{
															"nativeSrc": "2701:29:9",
															"nodeType": "YulAssignment",
															"src": "2701:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2723:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2710:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2710:12:9"
																},
																"nativeSrc": "2710:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2710:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2701:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2701:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2766:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2766:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2739:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2739:26:9"
																},
																"nativeSrc": "2739:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2739:33:9"
															},
															"nativeSrc": "2739:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2739:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2639:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2669:6:9",
														"nodeType": "YulTypedName",
														"src": "2669:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2677:3:9",
														"nodeType": "YulTypedName",
														"src": "2677:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2685:5:9",
														"nodeType": "YulTypedName",
														"src": "2685:5:9",
														"type": ""
													}
												],
												"src": "2639:139:9"
											},
											{
												"body": {
													"nativeSrc": "2867:391:9",
													"nodeType": "YulBlock",
													"src": "2867:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2913:83:9",
																"nodeType": "YulBlock",
																"src": "2913:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2915:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2915:77:9"
																			},
																			"nativeSrc": "2915:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:79:9"
																		},
																		"nativeSrc": "2915:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2888:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2888:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2897:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2897:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2884:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:9"
																		},
																		"nativeSrc": "2884:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2884:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2909:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2880:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:9"
																},
																"nativeSrc": "2880:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2880:32:9"
															},
															"nativeSrc": "2877:119:9",
															"nodeType": "YulIf",
															"src": "2877:119:9"
														},
														{
															"nativeSrc": "3006:117:9",
															"nodeType": "YulBlock",
															"src": "3006:117:9",
															"statements": [
																{
																	"nativeSrc": "3021:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3021:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3035:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3035:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3025:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3025:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3050:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3050:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3085:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3085:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3096:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3096:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3081:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3081:3:9"
																				},
																				"nativeSrc": "3081:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3081:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3105:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3105:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3060:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3060:20:9"
																		},
																		"nativeSrc": "3060:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3060:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3050:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3050:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3133:118:9",
															"nodeType": "YulBlock",
															"src": "3133:118:9",
															"statements": [
																{
																	"nativeSrc": "3148:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3148:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3162:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3162:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3152:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3152:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3178:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3178:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3213:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3213:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3224:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3224:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3209:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3209:3:9"
																				},
																				"nativeSrc": "3209:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3188:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3188:20:9"
																		},
																		"nativeSrc": "3188:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3188:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3178:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3178:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2784:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2829:9:9",
														"nodeType": "YulTypedName",
														"src": "2829:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2840:7:9",
														"nodeType": "YulTypedName",
														"src": "2840:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2852:6:9",
														"nodeType": "YulTypedName",
														"src": "2852:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2860:6:9",
														"nodeType": "YulTypedName",
														"src": "2860:6:9",
														"type": ""
													}
												],
												"src": "2784:474:9"
											},
											{
												"body": {
													"nativeSrc": "3306:48:9",
													"nodeType": "YulBlock",
													"src": "3306:48:9",
													"statements": [
														{
															"nativeSrc": "3316:32:9",
															"nodeType": "YulAssignment",
															"src": "3316:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3341:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3341:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3334:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:9"
																		},
																		"nativeSrc": "3334:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3334:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3327:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:9"
																},
																"nativeSrc": "3327:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3327:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3316:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3316:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3264:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3288:5:9",
														"nodeType": "YulTypedName",
														"src": "3288:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3298:7:9",
														"nodeType": "YulTypedName",
														"src": "3298:7:9",
														"type": ""
													}
												],
												"src": "3264:90:9"
											},
											{
												"body": {
													"nativeSrc": "3419:50:9",
													"nodeType": "YulBlock",
													"src": "3419:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3436:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3436:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3456:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3456:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3441:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3441:14:9"
																		},
																		"nativeSrc": "3441:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3429:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:9"
																},
																"nativeSrc": "3429:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3429:34:9"
															},
															"nativeSrc": "3429:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3429:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3360:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3407:5:9",
														"nodeType": "YulTypedName",
														"src": "3407:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3414:3:9",
														"nodeType": "YulTypedName",
														"src": "3414:3:9",
														"type": ""
													}
												],
												"src": "3360:109:9"
											},
											{
												"body": {
													"nativeSrc": "3567:118:9",
													"nodeType": "YulBlock",
													"src": "3567:118:9",
													"statements": [
														{
															"nativeSrc": "3577:26:9",
															"nodeType": "YulAssignment",
															"src": "3577:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3589:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3589:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3600:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3600:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3585:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3585:3:9"
																},
																"nativeSrc": "3585:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3585:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3577:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3577:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:9"
																		},
																		"nativeSrc": "3660:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3613:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "3613:37:9"
																},
																"nativeSrc": "3613:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:9"
															},
															"nativeSrc": "3613:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3475:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3539:9:9",
														"nodeType": "YulTypedName",
														"src": "3539:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3551:6:9",
														"nodeType": "YulTypedName",
														"src": "3551:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3562:4:9",
														"nodeType": "YulTypedName",
														"src": "3562:4:9",
														"type": ""
													}
												],
												"src": "3475:210:9"
											},
											{
												"body": {
													"nativeSrc": "3780:28:9",
													"nodeType": "YulBlock",
													"src": "3780:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3797:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3797:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3800:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3800:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3790:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:9"
																},
																"nativeSrc": "3790:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3790:12:9"
															},
															"nativeSrc": "3790:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "3790:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "3691:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "3691:117:9"
											},
											{
												"body": {
													"nativeSrc": "3903:28:9",
													"nodeType": "YulBlock",
													"src": "3903:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3920:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3920:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3923:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3923:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3913:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3913:6:9"
																},
																"nativeSrc": "3913:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3913:12:9"
															},
															"nativeSrc": "3913:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "3913:12:9"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "3814:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "3814:117:9"
											},
											{
												"body": {
													"nativeSrc": "4026:28:9",
													"nodeType": "YulBlock",
													"src": "4026:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4043:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4043:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4046:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4046:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4036:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4036:6:9"
																},
																"nativeSrc": "4036:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4036:12:9"
															},
															"nativeSrc": "4036:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "4036:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "3937:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "3937:117:9"
											},
											{
												"body": {
													"nativeSrc": "4167:478:9",
													"nodeType": "YulBlock",
													"src": "4167:478:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4216:83:9",
																"nodeType": "YulBlock",
																"src": "4216:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "4218:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4218:77:9"
																			},
																			"nativeSrc": "4218:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4218:79:9"
																		},
																		"nativeSrc": "4218:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4218:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4195:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4195:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4203:4:9",
																						"nodeType": "YulLiteral",
																						"src": "4203:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4191:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4191:3:9"
																				},
																				"nativeSrc": "4191:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4191:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "4210:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4210:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4187:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4187:3:9"
																		},
																		"nativeSrc": "4187:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4187:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4180:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4180:6:9"
																},
																"nativeSrc": "4180:35:9",
																"nodeType": "YulFunctionCall",
																"src": "4180:35:9"
															},
															"nativeSrc": "4177:122:9",
															"nodeType": "YulIf",
															"src": "4177:122:9"
														},
														{
															"nativeSrc": "4308:30:9",
															"nodeType": "YulAssignment",
															"src": "4308:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4331:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4331:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4318:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "4318:12:9"
																},
																"nativeSrc": "4318:20:9",
																"nodeType": "YulFunctionCall",
																"src": "4318:20:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4308:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4308:6:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4381:83:9",
																"nodeType": "YulBlock",
																"src": "4381:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "4383:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4383:77:9"
																			},
																			"nativeSrc": "4383:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4383:79:9"
																		},
																		"nativeSrc": "4383:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4383:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4353:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4353:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4361:18:9",
																		"nodeType": "YulLiteral",
																		"src": "4361:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4350:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4350:2:9"
																},
																"nativeSrc": "4350:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4350:30:9"
															},
															"nativeSrc": "4347:117:9",
															"nodeType": "YulIf",
															"src": "4347:117:9"
														},
														{
															"nativeSrc": "4473:29:9",
															"nodeType": "YulAssignment",
															"src": "4473:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4489:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4489:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4497:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4497:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4485:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4485:3:9"
																},
																"nativeSrc": "4485:17:9",
																"nodeType": "YulFunctionCall",
																"src": "4485:17:9"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "4473:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "4473:8:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4556:83:9",
																"nodeType": "YulBlock",
																"src": "4556:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "4558:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4558:77:9"
																			},
																			"nativeSrc": "4558:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4558:79:9"
																		},
																		"nativeSrc": "4558:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4558:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "4521:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "4521:8:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "4535:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4535:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4543:4:9",
																						"nodeType": "YulLiteral",
																						"src": "4543:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4531:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4531:3:9"
																				},
																				"nativeSrc": "4531:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4531:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4517:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4517:3:9"
																		},
																		"nativeSrc": "4517:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4517:32:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4551:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4551:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4514:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4514:2:9"
																},
																"nativeSrc": "4514:41:9",
																"nodeType": "YulFunctionCall",
																"src": "4514:41:9"
															},
															"nativeSrc": "4511:128:9",
															"nodeType": "YulIf",
															"src": "4511:128:9"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "4077:568:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4134:6:9",
														"nodeType": "YulTypedName",
														"src": "4134:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4142:3:9",
														"nodeType": "YulTypedName",
														"src": "4142:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "4150:8:9",
														"nodeType": "YulTypedName",
														"src": "4150:8:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4160:6:9",
														"nodeType": "YulTypedName",
														"src": "4160:6:9",
														"type": ""
													}
												],
												"src": "4077:568:9"
											},
											{
												"body": {
													"nativeSrc": "4769:586:9",
													"nodeType": "YulBlock",
													"src": "4769:586:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4815:83:9",
																"nodeType": "YulBlock",
																"src": "4815:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4817:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4817:77:9"
																			},
																			"nativeSrc": "4817:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4817:79:9"
																		},
																		"nativeSrc": "4817:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4817:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4790:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4790:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4799:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4799:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4786:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4786:3:9"
																		},
																		"nativeSrc": "4786:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4786:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4811:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4811:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4782:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4782:3:9"
																},
																"nativeSrc": "4782:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4782:32:9"
															},
															"nativeSrc": "4779:119:9",
															"nodeType": "YulIf",
															"src": "4779:119:9"
														},
														{
															"nativeSrc": "4908:117:9",
															"nodeType": "YulBlock",
															"src": "4908:117:9",
															"statements": [
																{
																	"nativeSrc": "4923:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4923:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4937:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4937:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4927:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4927:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4952:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4952:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4987:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4987:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4998:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4998:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4983:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4983:3:9"
																				},
																				"nativeSrc": "4983:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4983:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5007:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5007:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4962:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4962:20:9"
																		},
																		"nativeSrc": "4962:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4962:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4952:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4952:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5035:313:9",
															"nodeType": "YulBlock",
															"src": "5035:313:9",
															"statements": [
																{
																	"nativeSrc": "5050:46:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5050:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5081:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5081:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5092:2:9",
																						"nodeType": "YulLiteral",
																						"src": "5092:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5077:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5077:3:9"
																				},
																				"nativeSrc": "5077:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5077:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5064:12:9",
																			"nodeType": "YulIdentifier",
																			"src": "5064:12:9"
																		},
																		"nativeSrc": "5064:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5064:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5054:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5054:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5143:83:9",
																		"nodeType": "YulBlock",
																		"src": "5143:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5145:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "5145:77:9"
																					},
																					"nativeSrc": "5145:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5145:79:9"
																				},
																				"nativeSrc": "5145:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "5145:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5115:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5115:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5123:18:9",
																				"nodeType": "YulLiteral",
																				"src": "5123:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5112:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "5112:2:9"
																		},
																		"nativeSrc": "5112:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:30:9"
																	},
																	"nativeSrc": "5109:117:9",
																	"nodeType": "YulIf",
																	"src": "5109:117:9"
																},
																{
																	"nativeSrc": "5240:98:9",
																	"nodeType": "YulAssignment",
																	"src": "5240:98:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5310:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5310:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5321:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5321:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5306:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5306:3:9"
																				},
																				"nativeSrc": "5306:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5306:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5330:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5330:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "5258:47:9",
																			"nodeType": "YulIdentifier",
																			"src": "5258:47:9"
																		},
																		"nativeSrc": "5258:80:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5258:80:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5240:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5240:6:9"
																		},
																		{
																			"name": "value2",
																			"nativeSrc": "5248:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5248:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "4651:704:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4723:9:9",
														"nodeType": "YulTypedName",
														"src": "4723:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4734:7:9",
														"nodeType": "YulTypedName",
														"src": "4734:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4746:6:9",
														"nodeType": "YulTypedName",
														"src": "4746:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4754:6:9",
														"nodeType": "YulTypedName",
														"src": "4754:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4762:6:9",
														"nodeType": "YulTypedName",
														"src": "4762:6:9",
														"type": ""
													}
												],
												"src": "4651:704:9"
											},
											{
												"body": {
													"nativeSrc": "5461:519:9",
													"nodeType": "YulBlock",
													"src": "5461:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5507:83:9",
																"nodeType": "YulBlock",
																"src": "5507:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5509:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5509:77:9"
																			},
																			"nativeSrc": "5509:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5509:79:9"
																		},
																		"nativeSrc": "5509:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5509:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5482:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5482:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5491:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5491:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5478:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5478:3:9"
																		},
																		"nativeSrc": "5478:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5478:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5503:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5503:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5474:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5474:3:9"
																},
																"nativeSrc": "5474:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5474:32:9"
															},
															"nativeSrc": "5471:119:9",
															"nodeType": "YulIf",
															"src": "5471:119:9"
														},
														{
															"nativeSrc": "5600:117:9",
															"nodeType": "YulBlock",
															"src": "5600:117:9",
															"statements": [
																{
																	"nativeSrc": "5615:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5615:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5629:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5629:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5619:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5619:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5644:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5644:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5679:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5679:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5690:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5690:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5675:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5675:3:9"
																				},
																				"nativeSrc": "5675:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5675:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5699:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5699:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5654:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5654:20:9"
																		},
																		"nativeSrc": "5654:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5654:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5644:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5644:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5727:118:9",
															"nodeType": "YulBlock",
															"src": "5727:118:9",
															"statements": [
																{
																	"nativeSrc": "5742:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5742:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5756:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5756:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5746:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5746:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5772:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5772:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5807:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5807:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5818:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5818:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5803:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5803:3:9"
																				},
																				"nativeSrc": "5803:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5803:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5827:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5827:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5782:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5782:20:9"
																		},
																		"nativeSrc": "5782:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5782:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5772:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5772:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5855:118:9",
															"nodeType": "YulBlock",
															"src": "5855:118:9",
															"statements": [
																{
																	"nativeSrc": "5870:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5870:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5884:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5884:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5874:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5874:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5900:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5900:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5935:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5935:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5946:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5946:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5931:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5931:3:9"
																				},
																				"nativeSrc": "5931:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5931:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5955:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5955:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5910:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5910:20:9"
																		},
																		"nativeSrc": "5910:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5910:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5900:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5900:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5361:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5415:9:9",
														"nodeType": "YulTypedName",
														"src": "5415:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5426:7:9",
														"nodeType": "YulTypedName",
														"src": "5426:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5438:6:9",
														"nodeType": "YulTypedName",
														"src": "5438:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5446:6:9",
														"nodeType": "YulTypedName",
														"src": "5446:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5454:6:9",
														"nodeType": "YulTypedName",
														"src": "5454:6:9",
														"type": ""
													}
												],
												"src": "5361:619:9"
											},
											{
												"body": {
													"nativeSrc": "6052:263:9",
													"nodeType": "YulBlock",
													"src": "6052:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6098:83:9",
																"nodeType": "YulBlock",
																"src": "6098:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6100:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6100:77:9"
																			},
																			"nativeSrc": "6100:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6100:79:9"
																		},
																		"nativeSrc": "6100:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6100:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6073:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6073:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6082:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6082:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6069:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6069:3:9"
																		},
																		"nativeSrc": "6069:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6069:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6094:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6094:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6065:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6065:3:9"
																},
																"nativeSrc": "6065:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6065:32:9"
															},
															"nativeSrc": "6062:119:9",
															"nodeType": "YulIf",
															"src": "6062:119:9"
														},
														{
															"nativeSrc": "6191:117:9",
															"nodeType": "YulBlock",
															"src": "6191:117:9",
															"statements": [
																{
																	"nativeSrc": "6206:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6206:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6220:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6220:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6210:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6210:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6235:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6235:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6270:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6270:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6281:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6281:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6266:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6266:3:9"
																				},
																				"nativeSrc": "6266:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6266:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6290:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6290:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6245:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6245:20:9"
																		},
																		"nativeSrc": "6245:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6245:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6235:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6235:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5986:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6022:9:9",
														"nodeType": "YulTypedName",
														"src": "6022:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6033:7:9",
														"nodeType": "YulTypedName",
														"src": "6033:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6045:6:9",
														"nodeType": "YulTypedName",
														"src": "6045:6:9",
														"type": ""
													}
												],
												"src": "5986:329:9"
											},
											{
												"body": {
													"nativeSrc": "6364:43:9",
													"nodeType": "YulBlock",
													"src": "6364:43:9",
													"statements": [
														{
															"nativeSrc": "6374:27:9",
															"nodeType": "YulAssignment",
															"src": "6374:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6389:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6389:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6396:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6396:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6385:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6385:3:9"
																},
																"nativeSrc": "6385:16:9",
																"nodeType": "YulFunctionCall",
																"src": "6385:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6374:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "6374:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6321:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6346:5:9",
														"nodeType": "YulTypedName",
														"src": "6346:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6356:7:9",
														"nodeType": "YulTypedName",
														"src": "6356:7:9",
														"type": ""
													}
												],
												"src": "6321:86:9"
											},
											{
												"body": {
													"nativeSrc": "6474:51:9",
													"nodeType": "YulBlock",
													"src": "6474:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6491:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6491:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6512:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6512:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6496:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "6496:15:9"
																		},
																		"nativeSrc": "6496:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6496:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6484:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6484:6:9"
																},
																"nativeSrc": "6484:35:9",
																"nodeType": "YulFunctionCall",
																"src": "6484:35:9"
															},
															"nativeSrc": "6484:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "6484:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6413:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6462:5:9",
														"nodeType": "YulTypedName",
														"src": "6462:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6469:3:9",
														"nodeType": "YulTypedName",
														"src": "6469:3:9",
														"type": ""
													}
												],
												"src": "6413:112:9"
											},
											{
												"body": {
													"nativeSrc": "6625:120:9",
													"nodeType": "YulBlock",
													"src": "6625:120:9",
													"statements": [
														{
															"nativeSrc": "6635:26:9",
															"nodeType": "YulAssignment",
															"src": "6635:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6647:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6647:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6658:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6658:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6643:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6643:3:9"
																},
																"nativeSrc": "6643:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6643:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6635:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6635:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6711:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6711:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6724:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6724:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6735:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6735:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6720:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6720:3:9"
																		},
																		"nativeSrc": "6720:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6720:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6671:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "6671:39:9"
																},
																"nativeSrc": "6671:67:9",
																"nodeType": "YulFunctionCall",
																"src": "6671:67:9"
															},
															"nativeSrc": "6671:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "6671:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6531:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6597:9:9",
														"nodeType": "YulTypedName",
														"src": "6597:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6609:6:9",
														"nodeType": "YulTypedName",
														"src": "6609:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6620:4:9",
														"nodeType": "YulTypedName",
														"src": "6620:4:9",
														"type": ""
													}
												],
												"src": "6531:214:9"
											},
											{
												"body": {
													"nativeSrc": "6795:49:9",
													"nodeType": "YulBlock",
													"src": "6795:49:9",
													"statements": [
														{
															"nativeSrc": "6805:33:9",
															"nodeType": "YulAssignment",
															"src": "6805:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6820:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6820:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6827:10:9",
																		"nodeType": "YulLiteral",
																		"src": "6827:10:9",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6816:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6816:3:9"
																},
																"nativeSrc": "6816:22:9",
																"nodeType": "YulFunctionCall",
																"src": "6816:22:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6805:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "6805:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nativeSrc": "6751:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6777:5:9",
														"nodeType": "YulTypedName",
														"src": "6777:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6787:7:9",
														"nodeType": "YulTypedName",
														"src": "6787:7:9",
														"type": ""
													}
												],
												"src": "6751:93:9"
											},
											{
												"body": {
													"nativeSrc": "6913:52:9",
													"nodeType": "YulBlock",
													"src": "6913:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6930:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6930:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6952:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6952:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nativeSrc": "6935:16:9",
																			"nodeType": "YulIdentifier",
																			"src": "6935:16:9"
																		},
																		"nativeSrc": "6935:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6935:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6923:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6923:6:9"
																},
																"nativeSrc": "6923:36:9",
																"nodeType": "YulFunctionCall",
																"src": "6923:36:9"
															},
															"nativeSrc": "6923:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "6923:36:9"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
												"nativeSrc": "6850:115:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6901:5:9",
														"nodeType": "YulTypedName",
														"src": "6901:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6908:3:9",
														"nodeType": "YulTypedName",
														"src": "6908:3:9",
														"type": ""
													}
												],
												"src": "6850:115:9"
											},
											{
												"body": {
													"nativeSrc": "7067:122:9",
													"nodeType": "YulBlock",
													"src": "7067:122:9",
													"statements": [
														{
															"nativeSrc": "7077:26:9",
															"nodeType": "YulAssignment",
															"src": "7077:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7089:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7089:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7100:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7100:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7085:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7085:3:9"
																},
																"nativeSrc": "7085:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7085:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7077:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7077:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7155:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7155:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7168:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7168:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7179:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7179:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7164:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7164:3:9"
																		},
																		"nativeSrc": "7164:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7164:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nativeSrc": "7113:41:9",
																	"nodeType": "YulIdentifier",
																	"src": "7113:41:9"
																},
																"nativeSrc": "7113:69:9",
																"nodeType": "YulFunctionCall",
																"src": "7113:69:9"
															},
															"nativeSrc": "7113:69:9",
															"nodeType": "YulExpressionStatement",
															"src": "7113:69:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nativeSrc": "6971:218:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7039:9:9",
														"nodeType": "YulTypedName",
														"src": "7039:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7051:6:9",
														"nodeType": "YulTypedName",
														"src": "7051:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7062:4:9",
														"nodeType": "YulTypedName",
														"src": "7062:4:9",
														"type": ""
													}
												],
												"src": "6971:218:9"
											},
											{
												"body": {
													"nativeSrc": "7260:53:9",
													"nodeType": "YulBlock",
													"src": "7260:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7277:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7277:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7300:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7300:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7282:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "7282:17:9"
																		},
																		"nativeSrc": "7282:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7282:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7270:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7270:6:9"
																},
																"nativeSrc": "7270:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7270:37:9"
															},
															"nativeSrc": "7270:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "7270:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7195:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7248:5:9",
														"nodeType": "YulTypedName",
														"src": "7248:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7255:3:9",
														"nodeType": "YulTypedName",
														"src": "7255:3:9",
														"type": ""
													}
												],
												"src": "7195:118:9"
											},
											{
												"body": {
													"nativeSrc": "7417:124:9",
													"nodeType": "YulBlock",
													"src": "7417:124:9",
													"statements": [
														{
															"nativeSrc": "7427:26:9",
															"nodeType": "YulAssignment",
															"src": "7427:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7439:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7439:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7450:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7450:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7435:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7435:3:9"
																},
																"nativeSrc": "7435:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7435:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7427:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7427:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7507:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7507:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7520:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7520:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7531:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7531:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7516:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7516:3:9"
																		},
																		"nativeSrc": "7516:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7516:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7463:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7463:43:9"
																},
																"nativeSrc": "7463:71:9",
																"nodeType": "YulFunctionCall",
																"src": "7463:71:9"
															},
															"nativeSrc": "7463:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "7463:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7319:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7389:9:9",
														"nodeType": "YulTypedName",
														"src": "7389:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7401:6:9",
														"nodeType": "YulTypedName",
														"src": "7401:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7412:4:9",
														"nodeType": "YulTypedName",
														"src": "7412:4:9",
														"type": ""
													}
												],
												"src": "7319:222:9"
											},
											{
												"body": {
													"nativeSrc": "7613:263:9",
													"nodeType": "YulBlock",
													"src": "7613:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7659:83:9",
																"nodeType": "YulBlock",
																"src": "7659:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7661:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7661:77:9"
																			},
																			"nativeSrc": "7661:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7661:79:9"
																		},
																		"nativeSrc": "7661:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7661:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7634:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7634:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7643:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7643:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7630:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7630:3:9"
																		},
																		"nativeSrc": "7630:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7630:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7655:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7655:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7626:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7626:3:9"
																},
																"nativeSrc": "7626:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7626:32:9"
															},
															"nativeSrc": "7623:119:9",
															"nodeType": "YulIf",
															"src": "7623:119:9"
														},
														{
															"nativeSrc": "7752:117:9",
															"nodeType": "YulBlock",
															"src": "7752:117:9",
															"statements": [
																{
																	"nativeSrc": "7767:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7767:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7781:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7781:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7771:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7771:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7796:63:9",
																	"nodeType": "YulAssignment",
																	"src": "7796:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7831:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7831:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7842:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7842:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7827:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7827:3:9"
																				},
																				"nativeSrc": "7827:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7827:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7851:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7851:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7806:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "7806:20:9"
																		},
																		"nativeSrc": "7806:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7806:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7796:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7796:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7547:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7583:9:9",
														"nodeType": "YulTypedName",
														"src": "7583:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7594:7:9",
														"nodeType": "YulTypedName",
														"src": "7594:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7606:6:9",
														"nodeType": "YulTypedName",
														"src": "7606:6:9",
														"type": ""
													}
												],
												"src": "7547:329:9"
											},
											{
												"body": {
													"nativeSrc": "7965:391:9",
													"nodeType": "YulBlock",
													"src": "7965:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8011:83:9",
																"nodeType": "YulBlock",
																"src": "8011:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8013:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "8013:77:9"
																			},
																			"nativeSrc": "8013:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8013:79:9"
																		},
																		"nativeSrc": "8013:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8013:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7986:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7986:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7995:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7995:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7982:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7982:3:9"
																		},
																		"nativeSrc": "7982:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7982:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8007:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8007:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7978:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7978:3:9"
																},
																"nativeSrc": "7978:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7978:32:9"
															},
															"nativeSrc": "7975:119:9",
															"nodeType": "YulIf",
															"src": "7975:119:9"
														},
														{
															"nativeSrc": "8104:117:9",
															"nodeType": "YulBlock",
															"src": "8104:117:9",
															"statements": [
																{
																	"nativeSrc": "8119:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8119:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8133:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8133:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8123:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8123:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8148:63:9",
																	"nodeType": "YulAssignment",
																	"src": "8148:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8183:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8183:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8194:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8194:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8179:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8179:3:9"
																				},
																				"nativeSrc": "8179:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8179:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8203:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8203:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8158:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "8158:20:9"
																		},
																		"nativeSrc": "8158:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8158:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8148:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8148:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8231:118:9",
															"nodeType": "YulBlock",
															"src": "8231:118:9",
															"statements": [
																{
																	"nativeSrc": "8246:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8246:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8260:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8260:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8250:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8250:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8276:63:9",
																	"nodeType": "YulAssignment",
																	"src": "8276:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8311:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8311:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8322:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8322:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8307:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8307:3:9"
																				},
																				"nativeSrc": "8307:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8307:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8331:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8331:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8286:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "8286:20:9"
																		},
																		"nativeSrc": "8286:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8286:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8276:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8276:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "7882:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7927:9:9",
														"nodeType": "YulTypedName",
														"src": "7927:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7938:7:9",
														"nodeType": "YulTypedName",
														"src": "7938:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7950:6:9",
														"nodeType": "YulTypedName",
														"src": "7950:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7958:6:9",
														"nodeType": "YulTypedName",
														"src": "7958:6:9",
														"type": ""
													}
												],
												"src": "7882:474:9"
											},
											{
												"body": {
													"nativeSrc": "8445:391:9",
													"nodeType": "YulBlock",
													"src": "8445:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8491:83:9",
																"nodeType": "YulBlock",
																"src": "8491:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8493:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "8493:77:9"
																			},
																			"nativeSrc": "8493:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8493:79:9"
																		},
																		"nativeSrc": "8493:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8493:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8466:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8466:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8475:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8475:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8462:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8462:3:9"
																		},
																		"nativeSrc": "8462:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8462:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8487:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8487:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8458:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8458:3:9"
																},
																"nativeSrc": "8458:32:9",
																"nodeType": "YulFunctionCall",
																"src": "8458:32:9"
															},
															"nativeSrc": "8455:119:9",
															"nodeType": "YulIf",
															"src": "8455:119:9"
														},
														{
															"nativeSrc": "8584:117:9",
															"nodeType": "YulBlock",
															"src": "8584:117:9",
															"statements": [
																{
																	"nativeSrc": "8599:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8599:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8613:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8603:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8603:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8628:63:9",
																	"nodeType": "YulAssignment",
																	"src": "8628:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8663:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8663:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8674:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8674:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8659:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8659:3:9"
																				},
																				"nativeSrc": "8659:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8659:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8683:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8683:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8638:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "8638:20:9"
																		},
																		"nativeSrc": "8638:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8638:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8628:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8628:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8711:118:9",
															"nodeType": "YulBlock",
															"src": "8711:118:9",
															"statements": [
																{
																	"nativeSrc": "8726:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8726:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8740:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8740:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8730:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8730:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8756:63:9",
																	"nodeType": "YulAssignment",
																	"src": "8756:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8791:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8791:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8802:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8802:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8787:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8787:3:9"
																				},
																				"nativeSrc": "8787:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8787:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8811:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8811:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8766:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "8766:20:9"
																		},
																		"nativeSrc": "8766:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8766:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8756:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8756:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8362:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8407:9:9",
														"nodeType": "YulTypedName",
														"src": "8407:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8418:7:9",
														"nodeType": "YulTypedName",
														"src": "8418:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8430:6:9",
														"nodeType": "YulTypedName",
														"src": "8430:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8438:6:9",
														"nodeType": "YulTypedName",
														"src": "8438:6:9",
														"type": ""
													}
												],
												"src": "8362:474:9"
											},
											{
												"body": {
													"nativeSrc": "8870:152:9",
													"nodeType": "YulBlock",
													"src": "8870:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8887:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8887:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8890:77:9",
																		"nodeType": "YulLiteral",
																		"src": "8890:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8880:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8880:6:9"
																},
																"nativeSrc": "8880:88:9",
																"nodeType": "YulFunctionCall",
																"src": "8880:88:9"
															},
															"nativeSrc": "8880:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "8880:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8984:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8984:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8987:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8987:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8977:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8977:6:9"
																},
																"nativeSrc": "8977:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8977:15:9"
															},
															"nativeSrc": "8977:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "8977:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9008:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9008:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9011:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9011:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9001:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9001:6:9"
																},
																"nativeSrc": "9001:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9001:15:9"
															},
															"nativeSrc": "9001:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9001:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8842:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "8842:180:9"
											},
											{
												"body": {
													"nativeSrc": "9079:269:9",
													"nodeType": "YulBlock",
													"src": "9079:269:9",
													"statements": [
														{
															"nativeSrc": "9089:22:9",
															"nodeType": "YulAssignment",
															"src": "9089:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9103:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9103:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9109:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9109:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9099:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9099:3:9"
																},
																"nativeSrc": "9099:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9099:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9089:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9089:6:9"
																}
															]
														},
														{
															"nativeSrc": "9120:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "9120:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9150:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9150:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9156:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9156:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9146:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9146:3:9"
																},
																"nativeSrc": "9146:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9146:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9124:18:9",
																	"nodeType": "YulTypedName",
																	"src": "9124:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9197:51:9",
																"nodeType": "YulBlock",
																"src": "9197:51:9",
																"statements": [
																	{
																		"nativeSrc": "9211:27:9",
																		"nodeType": "YulAssignment",
																		"src": "9211:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9225:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "9225:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9233:4:9",
																					"nodeType": "YulLiteral",
																					"src": "9233:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9221:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "9221:3:9"
																			},
																			"nativeSrc": "9221:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9221:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9211:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9211:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9177:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "9177:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9170:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9170:6:9"
																},
																"nativeSrc": "9170:26:9",
																"nodeType": "YulFunctionCall",
																"src": "9170:26:9"
															},
															"nativeSrc": "9167:81:9",
															"nodeType": "YulIf",
															"src": "9167:81:9"
														},
														{
															"body": {
																"nativeSrc": "9300:42:9",
																"nodeType": "YulBlock",
																"src": "9300:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9314:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9314:16:9"
																			},
																			"nativeSrc": "9314:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9314:18:9"
																		},
																		"nativeSrc": "9314:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9314:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9264:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "9264:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9287:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9287:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9295:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9295:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9284:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "9284:2:9"
																		},
																		"nativeSrc": "9284:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9284:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9261:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9261:2:9"
																},
																"nativeSrc": "9261:38:9",
																"nodeType": "YulFunctionCall",
																"src": "9261:38:9"
															},
															"nativeSrc": "9258:84:9",
															"nodeType": "YulIf",
															"src": "9258:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9028:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9063:4:9",
														"nodeType": "YulTypedName",
														"src": "9063:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9072:6:9",
														"nodeType": "YulTypedName",
														"src": "9072:6:9",
														"type": ""
													}
												],
												"src": "9028:320:9"
											},
											{
												"body": {
													"nativeSrc": "9382:152:9",
													"nodeType": "YulBlock",
													"src": "9382:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9399:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9399:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9402:77:9",
																		"nodeType": "YulLiteral",
																		"src": "9402:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9392:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9392:6:9"
																},
																"nativeSrc": "9392:88:9",
																"nodeType": "YulFunctionCall",
																"src": "9392:88:9"
															},
															"nativeSrc": "9392:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "9392:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9496:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9496:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9499:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9499:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9489:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9489:6:9"
																},
																"nativeSrc": "9489:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9489:15:9"
															},
															"nativeSrc": "9489:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9489:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9520:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9520:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9523:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9523:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9513:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9513:6:9"
																},
																"nativeSrc": "9513:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9513:15:9"
															},
															"nativeSrc": "9513:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9513:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9354:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "9354:180:9"
											},
											{
												"body": {
													"nativeSrc": "9584:147:9",
													"nodeType": "YulBlock",
													"src": "9584:147:9",
													"statements": [
														{
															"nativeSrc": "9594:25:9",
															"nodeType": "YulAssignment",
															"src": "9594:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9617:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9617:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9599:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9599:17:9"
																},
																"nativeSrc": "9599:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9599:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9594:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9594:1:9"
																}
															]
														},
														{
															"nativeSrc": "9628:25:9",
															"nodeType": "YulAssignment",
															"src": "9628:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9651:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9651:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9633:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9633:17:9"
																},
																"nativeSrc": "9633:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9633:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9628:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9628:1:9"
																}
															]
														},
														{
															"nativeSrc": "9662:16:9",
															"nodeType": "YulAssignment",
															"src": "9662:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9673:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9673:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9676:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9676:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9669:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9669:3:9"
																},
																"nativeSrc": "9669:9:9",
																"nodeType": "YulFunctionCall",
																"src": "9669:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9662:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9662:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9702:22:9",
																"nodeType": "YulBlock",
																"src": "9702:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9704:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9704:16:9"
																			},
																			"nativeSrc": "9704:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9704:18:9"
																		},
																		"nativeSrc": "9704:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9704:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9694:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9694:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9697:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9697:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9691:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9691:2:9"
																},
																"nativeSrc": "9691:10:9",
																"nodeType": "YulFunctionCall",
																"src": "9691:10:9"
															},
															"nativeSrc": "9688:36:9",
															"nodeType": "YulIf",
															"src": "9688:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9540:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9571:1:9",
														"nodeType": "YulTypedName",
														"src": "9571:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9574:1:9",
														"nodeType": "YulTypedName",
														"src": "9574:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9580:3:9",
														"nodeType": "YulTypedName",
														"src": "9580:3:9",
														"type": ""
													}
												],
												"src": "9540:191:9"
											},
											{
												"body": {
													"nativeSrc": "9769:28:9",
													"nodeType": "YulBlock",
													"src": "9769:28:9",
													"statements": [
														{
															"nativeSrc": "9779:12:9",
															"nodeType": "YulAssignment",
															"src": "9779:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "9786:5:9",
																"nodeType": "YulIdentifier",
																"src": "9786:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9779:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9779:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "9737:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9755:5:9",
														"nodeType": "YulTypedName",
														"src": "9755:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9765:3:9",
														"nodeType": "YulTypedName",
														"src": "9765:3:9",
														"type": ""
													}
												],
												"src": "9737:60:9"
											},
											{
												"body": {
													"nativeSrc": "9862:81:9",
													"nodeType": "YulBlock",
													"src": "9862:81:9",
													"statements": [
														{
															"nativeSrc": "9872:65:9",
															"nodeType": "YulAssignment",
															"src": "9872:65:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9929:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "9929:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nativeSrc": "9912:16:9",
																					"nodeType": "YulIdentifier",
																					"src": "9912:16:9"
																				},
																				"nativeSrc": "9912:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9912:23:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "9903:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "9903:8:9"
																		},
																		"nativeSrc": "9903:33:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9903:33:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9885:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9885:17:9"
																},
																"nativeSrc": "9885:52:9",
																"nodeType": "YulFunctionCall",
																"src": "9885:52:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9872:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "9872:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint32_to_t_uint256",
												"nativeSrc": "9803:140:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9842:5:9",
														"nodeType": "YulTypedName",
														"src": "9842:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9852:9:9",
														"nodeType": "YulTypedName",
														"src": "9852:9:9",
														"type": ""
													}
												],
												"src": "9803:140:9"
											},
											{
												"body": {
													"nativeSrc": "10013:65:9",
													"nodeType": "YulBlock",
													"src": "10013:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10030:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10030:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10065:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "10065:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_uint32_to_t_uint256",
																			"nativeSrc": "10035:29:9",
																			"nodeType": "YulIdentifier",
																			"src": "10035:29:9"
																		},
																		"nativeSrc": "10035:36:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10035:36:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10023:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10023:6:9"
																},
																"nativeSrc": "10023:49:9",
																"nodeType": "YulFunctionCall",
																"src": "10023:49:9"
															},
															"nativeSrc": "10023:49:9",
															"nodeType": "YulExpressionStatement",
															"src": "10023:49:9"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint256_fromStack",
												"nativeSrc": "9949:129:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10001:5:9",
														"nodeType": "YulTypedName",
														"src": "10001:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10008:3:9",
														"nodeType": "YulTypedName",
														"src": "10008:3:9",
														"type": ""
													}
												],
												"src": "9949:129:9"
											},
											{
												"body": {
													"nativeSrc": "10181:123:9",
													"nodeType": "YulBlock",
													"src": "10181:123:9",
													"statements": [
														{
															"nativeSrc": "10191:26:9",
															"nodeType": "YulAssignment",
															"src": "10191:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10203:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10203:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10214:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10214:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10199:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10199:3:9"
																},
																"nativeSrc": "10199:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10199:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10191:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10191:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10270:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10270:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10283:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10283:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10294:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10294:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10279:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10279:3:9"
																		},
																		"nativeSrc": "10279:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10279:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint256_fromStack",
																	"nativeSrc": "10227:42:9",
																	"nodeType": "YulIdentifier",
																	"src": "10227:42:9"
																},
																"nativeSrc": "10227:70:9",
																"nodeType": "YulFunctionCall",
																"src": "10227:70:9"
															},
															"nativeSrc": "10227:70:9",
															"nodeType": "YulExpressionStatement",
															"src": "10227:70:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10084:220:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10153:9:9",
														"nodeType": "YulTypedName",
														"src": "10153:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10165:6:9",
														"nodeType": "YulTypedName",
														"src": "10165:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10176:4:9",
														"nodeType": "YulTypedName",
														"src": "10176:4:9",
														"type": ""
													}
												],
												"src": "10084:220:9"
											},
											{
												"body": {
													"nativeSrc": "10373:80:9",
													"nodeType": "YulBlock",
													"src": "10373:80:9",
													"statements": [
														{
															"nativeSrc": "10383:22:9",
															"nodeType": "YulAssignment",
															"src": "10383:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10398:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10398:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10392:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10392:5:9"
																},
																"nativeSrc": "10392:13:9",
																"nodeType": "YulFunctionCall",
																"src": "10392:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10383:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10383:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10441:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10441:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "10414:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "10414:26:9"
																},
																"nativeSrc": "10414:33:9",
																"nodeType": "YulFunctionCall",
																"src": "10414:33:9"
															},
															"nativeSrc": "10414:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "10414:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "10310:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10351:6:9",
														"nodeType": "YulTypedName",
														"src": "10351:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10359:3:9",
														"nodeType": "YulTypedName",
														"src": "10359:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10367:5:9",
														"nodeType": "YulTypedName",
														"src": "10367:5:9",
														"type": ""
													}
												],
												"src": "10310:143:9"
											},
											{
												"body": {
													"nativeSrc": "10536:274:9",
													"nodeType": "YulBlock",
													"src": "10536:274:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "10582:83:9",
																"nodeType": "YulBlock",
																"src": "10582:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10584:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "10584:77:9"
																			},
																			"nativeSrc": "10584:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10584:79:9"
																		},
																		"nativeSrc": "10584:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10584:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10557:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "10557:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10566:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10566:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10553:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10553:3:9"
																		},
																		"nativeSrc": "10553:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10553:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10578:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10578:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10549:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10549:3:9"
																},
																"nativeSrc": "10549:32:9",
																"nodeType": "YulFunctionCall",
																"src": "10549:32:9"
															},
															"nativeSrc": "10546:119:9",
															"nodeType": "YulIf",
															"src": "10546:119:9"
														},
														{
															"nativeSrc": "10675:128:9",
															"nodeType": "YulBlock",
															"src": "10675:128:9",
															"statements": [
																{
																	"nativeSrc": "10690:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10690:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10704:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10704:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10694:6:9",
																			"nodeType": "YulTypedName",
																			"src": "10694:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10719:74:9",
																	"nodeType": "YulAssignment",
																	"src": "10719:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10765:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "10765:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10776:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "10776:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10761:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "10761:3:9"
																				},
																				"nativeSrc": "10761:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10761:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10785:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "10785:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10729:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "10729:31:9"
																		},
																		"nativeSrc": "10729:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10729:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10719:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "10719:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "10459:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10506:9:9",
														"nodeType": "YulTypedName",
														"src": "10506:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10517:7:9",
														"nodeType": "YulTypedName",
														"src": "10517:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10529:6:9",
														"nodeType": "YulTypedName",
														"src": "10529:6:9",
														"type": ""
													}
												],
												"src": "10459:351:9"
											},
											{
												"body": {
													"nativeSrc": "10869:32:9",
													"nodeType": "YulBlock",
													"src": "10869:32:9",
													"statements": [
														{
															"nativeSrc": "10879:16:9",
															"nodeType": "YulAssignment",
															"src": "10879:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "10890:5:9",
																"nodeType": "YulIdentifier",
																"src": "10890:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10879:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "10879:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "10816:85:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10851:5:9",
														"nodeType": "YulTypedName",
														"src": "10851:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10861:7:9",
														"nodeType": "YulTypedName",
														"src": "10861:7:9",
														"type": ""
													}
												],
												"src": "10816:85:9"
											},
											{
												"body": {
													"nativeSrc": "10975:90:9",
													"nodeType": "YulBlock",
													"src": "10975:90:9",
													"statements": [
														{
															"nativeSrc": "10985:74:9",
															"nodeType": "YulAssignment",
															"src": "10985:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11051:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "11051:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "11025:25:9",
																					"nodeType": "YulIdentifier",
																					"src": "11025:25:9"
																				},
																				"nativeSrc": "11025:32:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11025:32:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "11016:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "11016:8:9"
																		},
																		"nativeSrc": "11016:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11016:42:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10998:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10998:17:9"
																},
																"nativeSrc": "10998:61:9",
																"nodeType": "YulFunctionCall",
																"src": "10998:61:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10985:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "10985:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint256",
												"nativeSrc": "10907:158:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10955:5:9",
														"nodeType": "YulTypedName",
														"src": "10955:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10965:9:9",
														"nodeType": "YulTypedName",
														"src": "10965:9:9",
														"type": ""
													}
												],
												"src": "10907:158:9"
											},
											{
												"body": {
													"nativeSrc": "11144:74:9",
													"nodeType": "YulBlock",
													"src": "11144:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11161:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11161:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11205:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "11205:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint256",
																			"nativeSrc": "11166:38:9",
																			"nodeType": "YulIdentifier",
																			"src": "11166:38:9"
																		},
																		"nativeSrc": "11166:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11166:45:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11154:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11154:6:9"
																},
																"nativeSrc": "11154:58:9",
																"nodeType": "YulFunctionCall",
																"src": "11154:58:9"
															},
															"nativeSrc": "11154:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "11154:58:9"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
												"nativeSrc": "11071:147:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11132:5:9",
														"nodeType": "YulTypedName",
														"src": "11132:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11139:3:9",
														"nodeType": "YulTypedName",
														"src": "11139:3:9",
														"type": ""
													}
												],
												"src": "11071:147:9"
											},
											{
												"body": {
													"nativeSrc": "11385:295:9",
													"nodeType": "YulBlock",
													"src": "11385:295:9",
													"statements": [
														{
															"nativeSrc": "11395:26:9",
															"nodeType": "YulAssignment",
															"src": "11395:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11407:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11407:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11418:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11418:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11403:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11403:3:9"
																},
																"nativeSrc": "11403:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11403:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11395:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11395:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11474:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11474:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11487:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11487:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11498:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11498:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11483:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11483:3:9"
																		},
																		"nativeSrc": "11483:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11483:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint256_fromStack",
																	"nativeSrc": "11431:42:9",
																	"nodeType": "YulIdentifier",
																	"src": "11431:42:9"
																},
																"nativeSrc": "11431:70:9",
																"nodeType": "YulFunctionCall",
																"src": "11431:70:9"
															},
															"nativeSrc": "11431:70:9",
															"nodeType": "YulExpressionStatement",
															"src": "11431:70:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11563:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11563:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11576:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11576:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11587:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11587:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11572:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11572:3:9"
																		},
																		"nativeSrc": "11572:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11572:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "11511:51:9",
																	"nodeType": "YulIdentifier",
																	"src": "11511:51:9"
																},
																"nativeSrc": "11511:80:9",
																"nodeType": "YulFunctionCall",
																"src": "11511:80:9"
															},
															"nativeSrc": "11511:80:9",
															"nodeType": "YulExpressionStatement",
															"src": "11511:80:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11645:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11645:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11658:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11658:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11669:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11669:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11654:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11654:3:9"
																		},
																		"nativeSrc": "11654:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11654:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11601:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11601:43:9"
																},
																"nativeSrc": "11601:72:9",
																"nodeType": "YulFunctionCall",
																"src": "11601:72:9"
															},
															"nativeSrc": "11601:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "11601:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32_t_rational_1_by_1_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "11224:456:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11341:9:9",
														"nodeType": "YulTypedName",
														"src": "11341:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11353:6:9",
														"nodeType": "YulTypedName",
														"src": "11353:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11361:6:9",
														"nodeType": "YulTypedName",
														"src": "11361:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11369:6:9",
														"nodeType": "YulTypedName",
														"src": "11369:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11380:4:9",
														"nodeType": "YulTypedName",
														"src": "11380:4:9",
														"type": ""
													}
												],
												"src": "11224:456:9"
											},
											{
												"body": {
													"nativeSrc": "11812:206:9",
													"nodeType": "YulBlock",
													"src": "11812:206:9",
													"statements": [
														{
															"nativeSrc": "11822:26:9",
															"nodeType": "YulAssignment",
															"src": "11822:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11834:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11834:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11845:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11845:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11830:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11830:3:9"
																},
																"nativeSrc": "11830:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11830:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11822:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11822:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11902:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11902:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11915:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11915:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11926:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11926:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11911:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11911:3:9"
																		},
																		"nativeSrc": "11911:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11911:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11858:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11858:43:9"
																},
																"nativeSrc": "11858:71:9",
																"nodeType": "YulFunctionCall",
																"src": "11858:71:9"
															},
															"nativeSrc": "11858:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "11858:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11983:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11983:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11996:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11996:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12007:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12007:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11992:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11992:3:9"
																		},
																		"nativeSrc": "11992:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11992:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11939:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11939:43:9"
																},
																"nativeSrc": "11939:72:9",
																"nodeType": "YulFunctionCall",
																"src": "11939:72:9"
															},
															"nativeSrc": "11939:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "11939:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11686:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11776:9:9",
														"nodeType": "YulTypedName",
														"src": "11776:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11788:6:9",
														"nodeType": "YulTypedName",
														"src": "11788:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11796:6:9",
														"nodeType": "YulTypedName",
														"src": "11796:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11807:4:9",
														"nodeType": "YulTypedName",
														"src": "11807:4:9",
														"type": ""
													}
												],
												"src": "11686:332:9"
											},
											{
												"body": {
													"nativeSrc": "12052:152:9",
													"nodeType": "YulBlock",
													"src": "12052:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12069:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12069:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12072:77:9",
																		"nodeType": "YulLiteral",
																		"src": "12072:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12062:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12062:6:9"
																},
																"nativeSrc": "12062:88:9",
																"nodeType": "YulFunctionCall",
																"src": "12062:88:9"
															},
															"nativeSrc": "12062:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "12062:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12166:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12166:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12169:4:9",
																		"nodeType": "YulLiteral",
																		"src": "12169:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12159:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12159:6:9"
																},
																"nativeSrc": "12159:15:9",
																"nodeType": "YulFunctionCall",
																"src": "12159:15:9"
															},
															"nativeSrc": "12159:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "12159:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12190:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12190:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12193:4:9",
																		"nodeType": "YulLiteral",
																		"src": "12193:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12183:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12183:6:9"
																},
																"nativeSrc": "12183:15:9",
																"nodeType": "YulFunctionCall",
																"src": "12183:15:9"
															},
															"nativeSrc": "12183:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "12183:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "12024:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "12024:180:9"
											},
											{
												"body": {
													"nativeSrc": "12252:143:9",
													"nodeType": "YulBlock",
													"src": "12252:143:9",
													"statements": [
														{
															"nativeSrc": "12262:25:9",
															"nodeType": "YulAssignment",
															"src": "12262:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12285:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12285:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12267:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12267:17:9"
																},
																"nativeSrc": "12267:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12267:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12262:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12262:1:9"
																}
															]
														},
														{
															"nativeSrc": "12296:25:9",
															"nodeType": "YulAssignment",
															"src": "12296:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12319:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12319:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12301:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12301:17:9"
																},
																"nativeSrc": "12301:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12301:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12296:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12296:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12343:22:9",
																"nodeType": "YulBlock",
																"src": "12343:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12345:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "12345:16:9"
																			},
																			"nativeSrc": "12345:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12345:18:9"
																		},
																		"nativeSrc": "12345:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12345:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12340:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12340:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12333:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12333:6:9"
																},
																"nativeSrc": "12333:9:9",
																"nodeType": "YulFunctionCall",
																"src": "12333:9:9"
															},
															"nativeSrc": "12330:35:9",
															"nodeType": "YulIf",
															"src": "12330:35:9"
														},
														{
															"nativeSrc": "12375:14:9",
															"nodeType": "YulAssignment",
															"src": "12375:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12384:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12384:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12387:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12387:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12380:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12380:3:9"
																},
																"nativeSrc": "12380:9:9",
																"nodeType": "YulFunctionCall",
																"src": "12380:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12375:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12375:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12210:185:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12241:1:9",
														"nodeType": "YulTypedName",
														"src": "12241:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12244:1:9",
														"nodeType": "YulTypedName",
														"src": "12244:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12250:1:9",
														"nodeType": "YulTypedName",
														"src": "12250:1:9",
														"type": ""
													}
												],
												"src": "12210:185:9"
											},
											{
												"body": {
													"nativeSrc": "12449:362:9",
													"nodeType": "YulBlock",
													"src": "12449:362:9",
													"statements": [
														{
															"nativeSrc": "12459:25:9",
															"nodeType": "YulAssignment",
															"src": "12459:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12482:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12482:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12464:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12464:17:9"
																},
																"nativeSrc": "12464:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12464:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12459:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12459:1:9"
																}
															]
														},
														{
															"nativeSrc": "12493:25:9",
															"nodeType": "YulAssignment",
															"src": "12493:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12516:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12516:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12498:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12498:17:9"
																},
																"nativeSrc": "12498:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12498:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12493:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12493:1:9"
																}
															]
														},
														{
															"nativeSrc": "12527:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "12527:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12550:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12550:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12553:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12553:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12546:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12546:3:9"
																},
																"nativeSrc": "12546:9:9",
																"nodeType": "YulFunctionCall",
																"src": "12546:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12531:11:9",
																	"nodeType": "YulTypedName",
																	"src": "12531:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12564:41:9",
															"nodeType": "YulAssignment",
															"src": "12564:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12593:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "12593:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12575:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12575:17:9"
																},
																"nativeSrc": "12575:30:9",
																"nodeType": "YulFunctionCall",
																"src": "12575:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12564:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "12564:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12782:22:9",
																"nodeType": "YulBlock",
																"src": "12782:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12784:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "12784:16:9"
																			},
																			"nativeSrc": "12784:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12784:18:9"
																		},
																		"nativeSrc": "12784:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12784:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12715:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "12715:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12708:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "12708:6:9"
																				},
																				"nativeSrc": "12708:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12708:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12738:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "12738:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12745:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "12745:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12754:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "12754:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12741:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "12741:3:9"
																						},
																						"nativeSrc": "12741:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "12741:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12735:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "12735:2:9"
																				},
																				"nativeSrc": "12735:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12735:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12688:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "12688:2:9"
																		},
																		"nativeSrc": "12688:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12688:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12668:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12668:6:9"
																},
																"nativeSrc": "12668:113:9",
																"nodeType": "YulFunctionCall",
																"src": "12668:113:9"
															},
															"nativeSrc": "12665:139:9",
															"nodeType": "YulIf",
															"src": "12665:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12401:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12432:1:9",
														"nodeType": "YulTypedName",
														"src": "12432:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12435:1:9",
														"nodeType": "YulTypedName",
														"src": "12435:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12441:7:9",
														"nodeType": "YulTypedName",
														"src": "12441:7:9",
														"type": ""
													}
												],
												"src": "12401:410:9"
											},
											{
												"body": {
													"nativeSrc": "12930:34:9",
													"nodeType": "YulBlock",
													"src": "12930:34:9",
													"statements": [
														{
															"nativeSrc": "12940:18:9",
															"nodeType": "YulAssignment",
															"src": "12940:18:9",
															"value": {
																"name": "pos",
																"nativeSrc": "12955:3:9",
																"nodeType": "YulIdentifier",
																"src": "12955:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12940:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "12940:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12817:147:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12902:3:9",
														"nodeType": "YulTypedName",
														"src": "12902:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12907:6:9",
														"nodeType": "YulTypedName",
														"src": "12907:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12918:11:9",
														"nodeType": "YulTypedName",
														"src": "12918:11:9",
														"type": ""
													}
												],
												"src": "12817:147:9"
											},
											{
												"body": {
													"nativeSrc": "13076:8:9",
													"nodeType": "YulBlock",
													"src": "13076:8:9",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "12970:114:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13068:6:9",
														"nodeType": "YulTypedName",
														"src": "13068:6:9",
														"type": ""
													}
												],
												"src": "12970:114:9"
											},
											{
												"body": {
													"nativeSrc": "13253:235:9",
													"nodeType": "YulBlock",
													"src": "13253:235:9",
													"statements": [
														{
															"nativeSrc": "13263:90:9",
															"nodeType": "YulAssignment",
															"src": "13263:90:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13346:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13346:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13351:1:9",
																		"nodeType": "YulLiteral",
																		"src": "13351:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13270:75:9",
																	"nodeType": "YulIdentifier",
																	"src": "13270:75:9"
																},
																"nativeSrc": "13270:83:9",
																"nodeType": "YulFunctionCall",
																"src": "13270:83:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13263:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13263:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13451:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13451:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "13362:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "13362:88:9"
																},
																"nativeSrc": "13362:93:9",
																"nodeType": "YulFunctionCall",
																"src": "13362:93:9"
															},
															"nativeSrc": "13362:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "13362:93:9"
														},
														{
															"nativeSrc": "13464:18:9",
															"nodeType": "YulAssignment",
															"src": "13464:18:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13475:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13475:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13480:1:9",
																		"nodeType": "YulLiteral",
																		"src": "13480:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13471:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13471:3:9"
																},
																"nativeSrc": "13471:11:9",
																"nodeType": "YulFunctionCall",
																"src": "13471:11:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13464:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13464:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13090:398:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13241:3:9",
														"nodeType": "YulTypedName",
														"src": "13241:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13249:3:9",
														"nodeType": "YulTypedName",
														"src": "13249:3:9",
														"type": ""
													}
												],
												"src": "13090:398:9"
											},
											{
												"body": {
													"nativeSrc": "13682:191:9",
													"nodeType": "YulBlock",
													"src": "13682:191:9",
													"statements": [
														{
															"nativeSrc": "13693:154:9",
															"nodeType": "YulAssignment",
															"src": "13693:154:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13843:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13843:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13700:141:9",
																	"nodeType": "YulIdentifier",
																	"src": "13700:141:9"
																},
																"nativeSrc": "13700:147:9",
																"nodeType": "YulFunctionCall",
																"src": "13700:147:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13693:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13693:3:9"
																}
															]
														},
														{
															"nativeSrc": "13857:10:9",
															"nodeType": "YulAssignment",
															"src": "13857:10:9",
															"value": {
																"name": "pos",
																"nativeSrc": "13864:3:9",
																"nodeType": "YulIdentifier",
																"src": "13864:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13857:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13857:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13494:379:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13669:3:9",
														"nodeType": "YulTypedName",
														"src": "13669:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13678:3:9",
														"nodeType": "YulTypedName",
														"src": "13678:3:9",
														"type": ""
													}
												],
												"src": "13494:379:9"
											},
											{
												"body": {
													"nativeSrc": "13924:149:9",
													"nodeType": "YulBlock",
													"src": "13924:149:9",
													"statements": [
														{
															"nativeSrc": "13934:25:9",
															"nodeType": "YulAssignment",
															"src": "13934:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13957:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13957:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13939:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "13939:17:9"
																},
																"nativeSrc": "13939:20:9",
																"nodeType": "YulFunctionCall",
																"src": "13939:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13934:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "13934:1:9"
																}
															]
														},
														{
															"nativeSrc": "13968:25:9",
															"nodeType": "YulAssignment",
															"src": "13968:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13991:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13991:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13973:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "13973:17:9"
																},
																"nativeSrc": "13973:20:9",
																"nodeType": "YulFunctionCall",
																"src": "13973:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13968:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "13968:1:9"
																}
															]
														},
														{
															"nativeSrc": "14002:17:9",
															"nodeType": "YulAssignment",
															"src": "14002:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14014:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14014:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14017:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14017:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14010:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14010:3:9"
																},
																"nativeSrc": "14010:9:9",
																"nodeType": "YulFunctionCall",
																"src": "14010:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14002:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14002:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14044:22:9",
																"nodeType": "YulBlock",
																"src": "14044:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14046:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "14046:16:9"
																			},
																			"nativeSrc": "14046:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14046:18:9"
																		},
																		"nativeSrc": "14046:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14046:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14035:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14035:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14041:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14041:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14032:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "14032:2:9"
																},
																"nativeSrc": "14032:11:9",
																"nodeType": "YulFunctionCall",
																"src": "14032:11:9"
															},
															"nativeSrc": "14029:37:9",
															"nodeType": "YulIf",
															"src": "14029:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "13879:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13910:1:9",
														"nodeType": "YulTypedName",
														"src": "13910:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13913:1:9",
														"nodeType": "YulTypedName",
														"src": "13913:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "13919:4:9",
														"nodeType": "YulTypedName",
														"src": "13919:4:9",
														"type": ""
													}
												],
												"src": "13879:194:9"
											},
											{
												"body": {
													"nativeSrc": "14205:206:9",
													"nodeType": "YulBlock",
													"src": "14205:206:9",
													"statements": [
														{
															"nativeSrc": "14215:26:9",
															"nodeType": "YulAssignment",
															"src": "14215:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14227:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14227:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14238:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14238:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14223:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14223:3:9"
																},
																"nativeSrc": "14223:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14223:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14215:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14215:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14295:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14295:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14308:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14308:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14319:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14319:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14304:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14304:3:9"
																		},
																		"nativeSrc": "14304:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14304:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14251:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "14251:43:9"
																},
																"nativeSrc": "14251:71:9",
																"nodeType": "YulFunctionCall",
																"src": "14251:71:9"
															},
															"nativeSrc": "14251:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "14251:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14376:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14376:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14389:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14389:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14400:2:9",
																				"nodeType": "YulLiteral",
																				"src": "14400:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14385:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14385:3:9"
																		},
																		"nativeSrc": "14385:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14385:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14332:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "14332:43:9"
																},
																"nativeSrc": "14332:72:9",
																"nodeType": "YulFunctionCall",
																"src": "14332:72:9"
															},
															"nativeSrc": "14332:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "14332:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "14079:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14169:9:9",
														"nodeType": "YulTypedName",
														"src": "14169:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14181:6:9",
														"nodeType": "YulTypedName",
														"src": "14181:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14189:6:9",
														"nodeType": "YulTypedName",
														"src": "14189:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14200:4:9",
														"nodeType": "YulTypedName",
														"src": "14200:4:9",
														"type": ""
													}
												],
												"src": "14079:332:9"
											},
											{
												"body": {
													"nativeSrc": "14445:152:9",
													"nodeType": "YulBlock",
													"src": "14445:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14462:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14462:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14465:77:9",
																		"nodeType": "YulLiteral",
																		"src": "14465:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14455:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14455:6:9"
																},
																"nativeSrc": "14455:88:9",
																"nodeType": "YulFunctionCall",
																"src": "14455:88:9"
															},
															"nativeSrc": "14455:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "14455:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14559:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14559:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14562:4:9",
																		"nodeType": "YulLiteral",
																		"src": "14562:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14552:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14552:6:9"
																},
																"nativeSrc": "14552:15:9",
																"nodeType": "YulFunctionCall",
																"src": "14552:15:9"
															},
															"nativeSrc": "14552:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "14552:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14583:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14583:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14586:4:9",
																		"nodeType": "YulLiteral",
																		"src": "14586:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14576:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14576:6:9"
																},
																"nativeSrc": "14576:15:9",
																"nodeType": "YulFunctionCall",
																"src": "14576:15:9"
															},
															"nativeSrc": "14576:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "14576:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "14417:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "14417:180:9"
											},
											{
												"body": {
													"nativeSrc": "14637:142:9",
													"nodeType": "YulBlock",
													"src": "14637:142:9",
													"statements": [
														{
															"nativeSrc": "14647:25:9",
															"nodeType": "YulAssignment",
															"src": "14647:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14670:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14670:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14652:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "14652:17:9"
																},
																"nativeSrc": "14652:20:9",
																"nodeType": "YulFunctionCall",
																"src": "14652:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14647:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14647:1:9"
																}
															]
														},
														{
															"nativeSrc": "14681:25:9",
															"nodeType": "YulAssignment",
															"src": "14681:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14704:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14704:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14686:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "14686:17:9"
																},
																"nativeSrc": "14686:20:9",
																"nodeType": "YulFunctionCall",
																"src": "14686:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14681:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14681:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14728:22:9",
																"nodeType": "YulBlock",
																"src": "14728:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14730:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "14730:16:9"
																			},
																			"nativeSrc": "14730:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14730:18:9"
																		},
																		"nativeSrc": "14730:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14730:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14725:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14725:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14718:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14718:6:9"
																},
																"nativeSrc": "14718:9:9",
																"nodeType": "YulFunctionCall",
																"src": "14718:9:9"
															},
															"nativeSrc": "14715:35:9",
															"nodeType": "YulIf",
															"src": "14715:35:9"
														},
														{
															"nativeSrc": "14759:14:9",
															"nodeType": "YulAssignment",
															"src": "14759:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14768:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14768:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14771:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14771:1:9"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "14764:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14764:3:9"
																},
																"nativeSrc": "14764:9:9",
																"nodeType": "YulFunctionCall",
																"src": "14764:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14759:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14759:1:9"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "14603:176:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14626:1:9",
														"nodeType": "YulTypedName",
														"src": "14626:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14629:1:9",
														"nodeType": "YulTypedName",
														"src": "14629:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14635:1:9",
														"nodeType": "YulTypedName",
														"src": "14635:1:9",
														"type": ""
													}
												],
												"src": "14603:176:9"
											},
											{
												"body": {
													"nativeSrc": "14939:288:9",
													"nodeType": "YulBlock",
													"src": "14939:288:9",
													"statements": [
														{
															"nativeSrc": "14949:26:9",
															"nodeType": "YulAssignment",
															"src": "14949:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14961:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14961:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14972:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14972:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14957:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14957:3:9"
																},
																"nativeSrc": "14957:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14957:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14949:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14949:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15029:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "15029:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15042:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15042:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15053:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15053:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15038:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15038:3:9"
																		},
																		"nativeSrc": "15038:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15038:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14985:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "14985:43:9"
																},
																"nativeSrc": "14985:71:9",
																"nodeType": "YulFunctionCall",
																"src": "14985:71:9"
															},
															"nativeSrc": "14985:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "14985:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15110:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "15110:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15123:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15123:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15134:2:9",
																				"nodeType": "YulLiteral",
																				"src": "15134:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15119:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15119:3:9"
																		},
																		"nativeSrc": "15119:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15119:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15066:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "15066:43:9"
																},
																"nativeSrc": "15066:72:9",
																"nodeType": "YulFunctionCall",
																"src": "15066:72:9"
															},
															"nativeSrc": "15066:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "15066:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15192:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "15192:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15205:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15205:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15216:2:9",
																				"nodeType": "YulLiteral",
																				"src": "15216:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15201:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15201:3:9"
																		},
																		"nativeSrc": "15201:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15201:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15148:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "15148:43:9"
																},
																"nativeSrc": "15148:72:9",
																"nodeType": "YulFunctionCall",
																"src": "15148:72:9"
															},
															"nativeSrc": "15148:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "15148:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14785:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14895:9:9",
														"nodeType": "YulTypedName",
														"src": "14895:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14907:6:9",
														"nodeType": "YulTypedName",
														"src": "14907:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14915:6:9",
														"nodeType": "YulTypedName",
														"src": "14915:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14923:6:9",
														"nodeType": "YulTypedName",
														"src": "14923:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14934:4:9",
														"nodeType": "YulTypedName",
														"src": "14934:4:9",
														"type": ""
													}
												],
												"src": "14785:442:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint32_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint32(value)))\n    }\n\n    function abi_encode_t_uint32_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint32_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint32_t_rational_1_by_1_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint32_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"798": [
									{
										"length": 32,
										"start": 2049
									},
									{
										"length": 32,
										"start": 2324
									},
									{
										"length": 32,
										"start": 3369
									},
									{
										"length": 32,
										"start": 3453
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106101b6575f3560e01c806343270d56116100eb578063967372a311610089578063c57981b511610063578063c57981b5146105f2578063d5abeb011461061c578063dd62ed3e14610646578063f68c2bfd14610682576101b6565b8063967372a314610550578063998f1b801461057a578063a9059cbb146105b6576101b6565b8063708666ad116100c5578063708666ad1461049657806370a08231146104c05780638cd221c9146104fc57806395d89b4114610526576101b6565b806343270d561461041857806347fec1a2146104425780636641ea081461046c576101b6565b806323b872dd1161015857806333d608f11161013257806333d608f11461037257806336667e7f1461039c57806336bcf7d6146103c657806342966c68146103f0576101b6565b806323b872dd146102d05780632566c9ea1461030c578063313ce56714610348576101b6565b806318160ddd1161019457806318160ddd1461024a5780631d6ad8e2146102745780631d729c5a1461027e5780631fe543e3146102a8576101b6565b806306fdde03146101ba57806307621eca146101e4578063095ea7b31461020e575b5f5ffd5b3480156101c5575f5ffd5b506101ce6106be565b6040516101db9190611ac4565b60405180910390f35b3480156101ef575f5ffd5b506101f861074e565b6040516102059190611afc565b60405180910390f35b348015610219575f5ffd5b50610234600480360381019061022f9190611ba1565b610754565b6040516102419190611bf9565b60405180910390f35b348015610255575f5ffd5b5061025e610776565b60405161026b9190611afc565b60405180910390f35b61027c61077f565b005b348015610289575f5ffd5b50610292610d11565b60405161029f9190611afc565b60405180910390f35b3480156102b3575f5ffd5b506102ce60048036038101906102c99190611c73565b610d27565b005b3480156102db575f5ffd5b506102f660048036038101906102f19190611cd0565b610de9565b6040516103039190611bf9565b60405180910390f35b348015610317575f5ffd5b50610332600480360381019061032d9190611d20565b610e17565b60405161033f9190611afc565b60405180910390f35b348015610353575f5ffd5b5061035c610e2c565b6040516103699190611d66565b60405180910390f35b34801561037d575f5ffd5b50610386610e34565b6040516103939190611d9d565b60405180910390f35b3480156103a7575f5ffd5b506103b0610e3b565b6040516103bd9190611afc565b60405180910390f35b3480156103d1575f5ffd5b506103da610e41565b6040516103e79190611afc565b60405180910390f35b3480156103fb575f5ffd5b5061041660048036038101906104119190611d20565b610e4e565b005b348015610423575f5ffd5b5061042c61103a565b6040516104399190611afc565b60405180910390f35b34801561044d575f5ffd5b5061045661103f565b6040516104639190611afc565b60405180910390f35b348015610477575f5ffd5b50610480611045565b60405161048d9190611afc565b60405180910390f35b3480156104a1575f5ffd5b506104aa61104a565b6040516104b79190611dc5565b60405180910390f35b3480156104cb575f5ffd5b506104e660048036038101906104e19190611dde565b61106f565b6040516104f39190611afc565b60405180910390f35b348015610507575f5ffd5b506105106110b4565b60405161051d9190611afc565b60405180910390f35b348015610531575f5ffd5b5061053a6110ba565b6040516105479190611ac4565b60405180910390f35b34801561055b575f5ffd5b5061056461114a565b6040516105719190611afc565b60405180910390f35b348015610585575f5ffd5b506105a0600480360381019061059b9190611e09565b611150565b6040516105ad9190611dc5565b60405180910390f35b3480156105c1575f5ffd5b506105dc60048036038101906105d79190611ba1565b61118d565b6040516105e99190611bf9565b60405180910390f35b3480156105fd575f5ffd5b506106066111af565b6040516106139190611afc565b60405180910390f35b348015610627575f5ffd5b506106306111bb565b60405161063d9190611afc565b60405180910390f35b348015610651575f5ffd5b5061066c60048036038101906106679190611e47565b6111c1565b6040516106799190611afc565b60405180910390f35b34801561068d575f5ffd5b506106a860048036038101906106a39190611d20565b611243565b6040516106b59190611afc565b60405180910390f35b6060600380546106cd90611eb2565b80601f01602080910402602001604051908101604052809291908181526020018280546106f990611eb2565b80156107445780601f1061071b57610100808354040283529160200191610744565b820191905f5260205f20905b81548152906001019060200180831161072757829003601f168201915b5050505050905090565b60065481565b5f5f61075e61125d565b905061076b818585611264565b600191505092915050565b5f600254905090565b67016345785d8a00003410156107c1576040517f732f941300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f603c6009546107d19190611f0f565b42101590505f5f600c5f60075481526020019081526020015f20541190508180156107f95750805b15610a84575f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c66d3d1862030d406040518263ffffffff1660e01b815260040161085b9190611f7b565b602060405180830381865afa158015610876573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061089a9190611fa8565b9050804710156108d6576040517f786e0a9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f600c5f60075481526020019081526020015f205490505f600e5f60075481526020019081526020015f205490505f81036109115760065490505b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663cb9bb27f8562030d406001306040518563ffffffff1660e01b81526004016109749392919061200c565b60206040518083038185885af1158015610990573d5f5f3e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906109b59190611fa8565b9050600754600d5f8381526020019081526020015f208190555081600e5f60075481526020019081526020015f2081905550600754817fa77018cfa060263f92c58b53277f73d2eade9d69e943460421e26e648eed9f338585604051610a1c929190612041565b60405180910390a361c382600854610a349190611f0f565b60075410610a5f57600260065f828254610a4e9190612095565b925050819055506007546008819055505b600160075f828254610a719190611f0f565b9250508190555042600981905550505050505b5f600c5f60075481526020019081526020015f2054905033600b5f60075481526020019081526020015f205f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600181610b089190611f0f565b600c5f60075481526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff166007547f66f19fb732c3e13893ea1bb5573839d7d0b41effc0aef6b59283c15ea5a0dbf960405160405180910390a35f6064600567016345785d8a0000610b7d91906120c5565b610b879190612095565b90505f600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610bcf90612133565b5f6040518083038185875af1925050503d805f8114610c09576040519150601f19603f3d011682016040523d82523d5f602084013e610c0e565b606091505b5050905080610c49576040517f4033e4e300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f67016345785d8a000034610c5e9190612147565b90505f811115610d09573373ffffffffffffffffffffffffffffffffffffffff1681604051610c8c90612133565b5f6040518083038185875af1925050503d805f8114610cc6576040519150601f19603f3d011682016040523d82523d5f602084013e610ccb565b606091505b50508092505081610d08576040517ff0c49d4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b505050505050565b5f61c382600854610d229190611f0f565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dd957337f00000000000000000000000000000000000000000000000000000000000000006040517f20138a9f000000000000000000000000000000000000000000000000000000008152600401610dd092919061217a565b60405180910390fd5b610de4838383611276565b505050565b5f5f610df361125d565b9050610e008582856113eb565b610e0b85858561147e565b60019150509392505050565b600c602052805f5260405f205f915090505481565b5f6012905090565b62030d4081565b61c38281565b68241a9b4f617a28000081565b5f8103610e87576040517f98642b8600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f4790505f8103610ec4576040517f786e0a9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610ecd610776565b90505f8103610f08576040517f786e0a9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f818385610f1691906120c5565b610f209190612095565b9050610f2c338561156e565b8360055f828254610f3d9190612147565b925050819055505f3373ffffffffffffffffffffffffffffffffffffffff1682604051610f6990612133565b5f6040518083038185875af1925050503d805f8114610fa3576040519150601f19603f3d011682016040523d82523d5f602084013e610fa8565b606091505b5050905080610fe3576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f23ff0e75edf108e3d0392d92e13e8c8a868ef19001bd49f9e94876dc46dff87f868460405161102b929190612041565b60405180910390a25050505050565b600581565b60095481565b603c81565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60075481565b6060600480546110c990611eb2565b80601f01602080910402602001604051908101604052809291908181526020018280546110f590611eb2565b80156111405780601f1061111757610100808354040283529160200191611140565b820191905f5260205f20905b81548152906001019060200180831161112357829003601f168201915b5050505050905090565b60085481565b600b602052815f5260405f20602052805f5260405f205f915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f61119761125d565b90506111a481858561147e565b600191505092915050565b67016345785d8a000081565b60055481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f600c5f8381526020019081526020015f20549050919050565b5f33905090565b61127183838360016115ed565b505050565b5f600d5f8581526020019081526020015f20549050600d5f8581526020019081526020015f205f90555f600c5f8381526020019081526020015f205490505f8111156113e4575f8185855f8181106112d1576112d06121a1565b5b905060200201356112e291906121ce565b90505f600b5f8581526020019081526020015f205f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f600e5f8681526020019081526020015f205490505f81036113495760065490505b60055481611355610776565b61135f9190611f0f565b111561137d5761136d610776565b60055461137a9190612147565b90505b5f8111156113e05761138f82826117bc565b8173ffffffffffffffffffffffffffffffffffffffff1685897fdd7933a060407298571fe36223f480ee3508053fdb7238a1fe246f52b62c8e73846040516113d79190611afc565b60405180910390a45b5050505b5050505050565b5f6113f684846111c1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156114785781811015611469578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611460939291906121fe565b60405180910390fd5b61147784848484035f6115ed565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114ee575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114e59190611dc5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361155e575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115559190611dc5565b60405180910390fd5b61156983838361183b565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115de575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115d59190611dc5565b60405180910390fd5b6115e9825f8361183b565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361165d575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016116549190611dc5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116cd575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016116c49190611dc5565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156117b6578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516117ad9190611afc565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361182c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016118239190611dc5565b60405180910390fd5b6118375f838361183b565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361188b578060025f82825461187f9190611f0f565b92505081905550611959565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611914578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161190b939291906121fe565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119a0578060025f82825403925050819055506119ea565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611a479190611afc565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611a9682611a54565b611aa08185611a5e565b9350611ab0818560208601611a6e565b611ab981611a7c565b840191505092915050565b5f6020820190508181035f830152611adc8184611a8c565b905092915050565b5f819050919050565b611af681611ae4565b82525050565b5f602082019050611b0f5f830184611aed565b92915050565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611b4682611b1d565b9050919050565b611b5681611b3c565b8114611b60575f5ffd5b50565b5f81359050611b7181611b4d565b92915050565b611b8081611ae4565b8114611b8a575f5ffd5b50565b5f81359050611b9b81611b77565b92915050565b5f5f60408385031215611bb757611bb6611b15565b5b5f611bc485828601611b63565b9250506020611bd585828601611b8d565b9150509250929050565b5f8115159050919050565b611bf381611bdf565b82525050565b5f602082019050611c0c5f830184611bea565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112611c3357611c32611c12565b5b8235905067ffffffffffffffff811115611c5057611c4f611c16565b5b602083019150836020820283011115611c6c57611c6b611c1a565b5b9250929050565b5f5f5f60408486031215611c8a57611c89611b15565b5b5f611c9786828701611b8d565b935050602084013567ffffffffffffffff811115611cb857611cb7611b19565b5b611cc486828701611c1e565b92509250509250925092565b5f5f5f60608486031215611ce757611ce6611b15565b5b5f611cf486828701611b63565b9350506020611d0586828701611b63565b9250506040611d1686828701611b8d565b9150509250925092565b5f60208284031215611d3557611d34611b15565b5b5f611d4284828501611b8d565b91505092915050565b5f60ff82169050919050565b611d6081611d4b565b82525050565b5f602082019050611d795f830184611d57565b92915050565b5f63ffffffff82169050919050565b611d9781611d7f565b82525050565b5f602082019050611db05f830184611d8e565b92915050565b611dbf81611b3c565b82525050565b5f602082019050611dd85f830184611db6565b92915050565b5f60208284031215611df357611df2611b15565b5b5f611e0084828501611b63565b91505092915050565b5f5f60408385031215611e1f57611e1e611b15565b5b5f611e2c85828601611b8d565b9250506020611e3d85828601611b8d565b9150509250929050565b5f5f60408385031215611e5d57611e5c611b15565b5b5f611e6a85828601611b63565b9250506020611e7b85828601611b63565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ec957607f821691505b602082108103611edc57611edb611e85565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f1982611ae4565b9150611f2483611ae4565b9250828201905080821115611f3c57611f3b611ee2565b5b92915050565b5f819050919050565b5f611f65611f60611f5b84611d7f565b611f42565b611ae4565b9050919050565b611f7581611f4b565b82525050565b5f602082019050611f8e5f830184611f6c565b92915050565b5f81519050611fa281611b77565b92915050565b5f60208284031215611fbd57611fbc611b15565b5b5f611fca84828501611f94565b91505092915050565b5f819050919050565b5f611ff6611ff1611fec84611fd3565b611f42565b611ae4565b9050919050565b61200681611fdc565b82525050565b5f60608201905061201f5f830186611f6c565b61202c6020830185611ffd565b6120396040830184611db6565b949350505050565b5f6040820190506120545f830185611aed565b6120616020830184611aed565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61209f82611ae4565b91506120aa83611ae4565b9250826120ba576120b9612068565b5b828204905092915050565b5f6120cf82611ae4565b91506120da83611ae4565b92508282026120e881611ae4565b915082820484148315176120ff576120fe611ee2565b5b5092915050565b5f81905092915050565b50565b5f61211e5f83612106565b915061212982612110565b5f82019050919050565b5f61213d82612113565b9150819050919050565b5f61215182611ae4565b915061215c83611ae4565b925082820390508181111561217457612173611ee2565b5b92915050565b5f60408201905061218d5f830185611db6565b61219a6020830184611db6565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6121d882611ae4565b91506121e383611ae4565b9250826121f3576121f2612068565b5b828206905092915050565b5f6060820190506122115f830186611db6565b61221e6020830185611aed565b61222b6040830184611aed565b94935050505056fea264697066735822122052b5a6f95a217bcc4e0ae20f94bbf78068a7988e3bee220c9000d0f95761064e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x43270D56 GT PUSH2 0xEB JUMPI DUP1 PUSH4 0x967372A3 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xC57981B5 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xC57981B5 EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x61C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0xF68C2BFD EQ PUSH2 0x682 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x967372A3 EQ PUSH2 0x550 JUMPI DUP1 PUSH4 0x998F1B80 EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5B6 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x708666AD GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x708666AD EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x8CD221C9 EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x526 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x43270D56 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x47FEC1A2 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0x6641EA08 EQ PUSH2 0x46C JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x158 JUMPI DUP1 PUSH4 0x33D608F1 GT PUSH2 0x132 JUMPI DUP1 PUSH4 0x33D608F1 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x36667E7F EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x36BCF7D6 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3F0 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x2566C9EA EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x348 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x194 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x1D6AD8E2 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x1D729C5A EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x2A8 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x7621ECA EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x20E JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F8 PUSH2 0x74E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1BA1 JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x776 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0x77F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1D20 JUMP JUMPDEST PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x353 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1D66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x386 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3B0 PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3DA PUSH2 0xE41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x416 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x1D20 JUMP JUMPDEST PUSH2 0xE4E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x42C PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x456 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x477 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x480 PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4AA PUSH2 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x106F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x510 PUSH2 0x10B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x53A PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x564 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x571 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x585 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x1BA1 JUMP JUMPDEST PUSH2 0x118D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x606 PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x613 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x627 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x630 PUSH2 0x11BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x651 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x66C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x667 SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x679 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A3 SWAP2 SWAP1 PUSH2 0x1D20 JUMP JUMPDEST PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6CD SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6F9 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x744 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x71B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x744 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x727 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x75E PUSH2 0x125D JUMP JUMPDEST SWAP1 POP PUSH2 0x76B DUP2 DUP6 DUP6 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0x16345785D8A0000 CALLVALUE LT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x732F941300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3C PUSH1 0x9 SLOAD PUSH2 0x7D1 SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST TIMESTAMP LT ISZERO SWAP1 POP PUSH0 PUSH0 PUSH1 0xC PUSH0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x7F9 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xA84 JUMPI PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC66D3D18 PUSH3 0x30D40 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85B SWAP2 SWAP1 PUSH2 0x1F7B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x876 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x89A SWAP2 SWAP1 PUSH2 0x1FA8 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x786E0A9900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xC PUSH0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0xE PUSH0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x911 JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCB9BB27F DUP6 PUSH3 0x30D40 PUSH1 0x1 ADDRESS PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x974 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x200C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x990 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B5 SWAP2 SWAP1 PUSH2 0x1FA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD PUSH1 0xD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xE PUSH0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 SLOAD DUP2 PUSH32 0xA77018CFA060263F92C58B53277F73D2EADE9D69E943460421E26E648EED9F33 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA1C SWAP3 SWAP2 SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC382 PUSH1 0x8 SLOAD PUSH2 0xA34 SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST PUSH1 0x7 SLOAD LT PUSH2 0xA5F JUMPI PUSH1 0x2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA4E SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 SLOAD PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST PUSH0 PUSH1 0xC PUSH0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP CALLER PUSH1 0xB PUSH0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH2 0xB08 SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST PUSH1 0xC PUSH0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 SLOAD PUSH32 0x66F19FB732C3E13893EA1BB5573839D7D0B41EFFC0AEF6B59283C15EA5A0DBF9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 PUSH1 0x64 PUSH1 0x5 PUSH8 0x16345785D8A0000 PUSH2 0xB7D SWAP2 SWAP1 PUSH2 0x20C5 JUMP JUMPDEST PUSH2 0xB87 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xBCF SWAP1 PUSH2 0x2133 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xC09 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4033E4E300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0x16345785D8A0000 CALLVALUE PUSH2 0xC5E SWAP2 SWAP1 PUSH2 0x2147 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xD09 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH2 0xC8C SWAP1 PUSH2 0x2133 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP DUP1 SWAP3 POP POP DUP2 PUSH2 0xD08 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF0C49D4400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC382 PUSH1 0x8 SLOAD PUSH2 0xD22 SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDD9 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x20138A9F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD0 SWAP3 SWAP2 SWAP1 PUSH2 0x217A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDE4 DUP4 DUP4 DUP4 PUSH2 0x1276 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xDF3 PUSH2 0x125D JUMP JUMPDEST SWAP1 POP PUSH2 0xE00 DUP6 DUP3 DUP6 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0xE0B DUP6 DUP6 DUP6 PUSH2 0x147E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x30D40 DUP2 JUMP JUMPDEST PUSH2 0xC382 DUP2 JUMP JUMPDEST PUSH9 0x241A9B4F617A280000 DUP2 JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0xE87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x98642B8600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x786E0A9900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xECD PUSH2 0x776 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xF08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x786E0A9900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 DUP4 DUP6 PUSH2 0xF16 SWAP2 SWAP1 PUSH2 0x20C5 JUMP JUMPDEST PUSH2 0xF20 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST SWAP1 POP PUSH2 0xF2C CALLER DUP6 PUSH2 0x156E JUMP JUMPDEST DUP4 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF3D SWAP2 SWAP1 PUSH2 0x2147 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xF69 SWAP1 PUSH2 0x2133 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xFA3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFA8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xFE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23FF0E75EDF108E3D0392D92E13E8C8A868EF19001BD49F9E94876DC46DFF87F DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0x102B SWAP3 SWAP2 SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3C DUP2 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x10C9 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10F5 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1140 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1117 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1140 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1123 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1197 PUSH2 0x125D JUMP JUMPDEST SWAP1 POP PUSH2 0x11A4 DUP2 DUP6 DUP6 PUSH2 0x147E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1271 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x15ED JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH1 0xD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH0 PUSH1 0xC PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x13E4 JUMPI PUSH0 DUP2 DUP6 DUP6 PUSH0 DUP2 DUP2 LT PUSH2 0x12D1 JUMPI PUSH2 0x12D0 PUSH2 0x21A1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x12E2 SWAP2 SWAP1 PUSH2 0x21CE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0xE PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x1349 JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x5 SLOAD DUP2 PUSH2 0x1355 PUSH2 0x776 JUMP JUMPDEST PUSH2 0x135F SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST GT ISZERO PUSH2 0x137D JUMPI PUSH2 0x136D PUSH2 0x776 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x137A SWAP2 SWAP1 PUSH2 0x2147 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x13E0 JUMPI PUSH2 0x138F DUP3 DUP3 PUSH2 0x17BC JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP10 PUSH32 0xDD7933A060407298571FE36223F480EE3508053FDB7238A1FE246F52B62C8E73 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13D7 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13F6 DUP5 DUP5 PUSH2 0x11C1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1478 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1469 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1460 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1477 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x15ED JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14EE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E5 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x155E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1555 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1569 DUP4 DUP4 DUP4 PUSH2 0x183B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D5 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15E9 DUP3 PUSH0 DUP4 PUSH2 0x183B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x165D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1654 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16CD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C4 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x17B6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x17AD SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x182C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1823 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1837 PUSH0 DUP4 DUP4 PUSH2 0x183B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x188B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x187F SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1959 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1914 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x190B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19A0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x19EA JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A47 SWAP2 SWAP1 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A96 DUP3 PUSH2 0x1A54 JUMP JUMPDEST PUSH2 0x1AA0 DUP2 DUP6 PUSH2 0x1A5E JUMP JUMPDEST SWAP4 POP PUSH2 0x1AB0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0x1AB9 DUP2 PUSH2 0x1A7C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ADC DUP2 DUP5 PUSH2 0x1A8C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AF6 DUP2 PUSH2 0x1AE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0F PUSH0 DUP4 ADD DUP5 PUSH2 0x1AED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B46 DUP3 PUSH2 0x1B1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B56 DUP2 PUSH2 0x1B3C JUMP JUMPDEST DUP2 EQ PUSH2 0x1B60 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B71 DUP2 PUSH2 0x1B4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B80 DUP2 PUSH2 0x1AE4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B8A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B9B DUP2 PUSH2 0x1B77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BB7 JUMPI PUSH2 0x1BB6 PUSH2 0x1B15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BC4 DUP6 DUP3 DUP7 ADD PUSH2 0x1B63 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BD5 DUP6 DUP3 DUP7 ADD PUSH2 0x1B8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF3 DUP2 PUSH2 0x1BDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C0C PUSH0 DUP4 ADD DUP5 PUSH2 0x1BEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1C33 JUMPI PUSH2 0x1C32 PUSH2 0x1C12 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C50 JUMPI PUSH2 0x1C4F PUSH2 0x1C16 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1C6C JUMPI PUSH2 0x1C6B PUSH2 0x1C1A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C8A JUMPI PUSH2 0x1C89 PUSH2 0x1B15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C97 DUP7 DUP3 DUP8 ADD PUSH2 0x1B8D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CB8 JUMPI PUSH2 0x1CB7 PUSH2 0x1B19 JUMP JUMPDEST JUMPDEST PUSH2 0x1CC4 DUP7 DUP3 DUP8 ADD PUSH2 0x1C1E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CE7 JUMPI PUSH2 0x1CE6 PUSH2 0x1B15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CF4 DUP7 DUP3 DUP8 ADD PUSH2 0x1B63 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D05 DUP7 DUP3 DUP8 ADD PUSH2 0x1B63 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D16 DUP7 DUP3 DUP8 ADD PUSH2 0x1B8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D35 JUMPI PUSH2 0x1D34 PUSH2 0x1B15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D42 DUP5 DUP3 DUP6 ADD PUSH2 0x1B8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D60 DUP2 PUSH2 0x1D4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D79 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D97 DUP2 PUSH2 0x1D7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DB0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DBF DUP2 PUSH2 0x1B3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DF3 JUMPI PUSH2 0x1DF2 PUSH2 0x1B15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E00 DUP5 DUP3 DUP6 ADD PUSH2 0x1B63 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E1F JUMPI PUSH2 0x1E1E PUSH2 0x1B15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E2C DUP6 DUP3 DUP7 ADD PUSH2 0x1B8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E3D DUP6 DUP3 DUP7 ADD PUSH2 0x1B8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E5D JUMPI PUSH2 0x1E5C PUSH2 0x1B15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E6A DUP6 DUP3 DUP7 ADD PUSH2 0x1B63 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E7B DUP6 DUP3 DUP7 ADD PUSH2 0x1B63 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1EC9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1EDC JUMPI PUSH2 0x1EDB PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F19 DUP3 PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F24 DUP4 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F3C JUMPI PUSH2 0x1F3B PUSH2 0x1EE2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F65 PUSH2 0x1F60 PUSH2 0x1F5B DUP5 PUSH2 0x1D7F JUMP JUMPDEST PUSH2 0x1F42 JUMP JUMPDEST PUSH2 0x1AE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F75 DUP2 PUSH2 0x1F4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F8E PUSH0 DUP4 ADD DUP5 PUSH2 0x1F6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FA2 DUP2 PUSH2 0x1B77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FBD JUMPI PUSH2 0x1FBC PUSH2 0x1B15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FCA DUP5 DUP3 DUP6 ADD PUSH2 0x1F94 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF6 PUSH2 0x1FF1 PUSH2 0x1FEC DUP5 PUSH2 0x1FD3 JUMP JUMPDEST PUSH2 0x1F42 JUMP JUMPDEST PUSH2 0x1AE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2006 DUP2 PUSH2 0x1FDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x201F PUSH0 DUP4 ADD DUP7 PUSH2 0x1F6C JUMP JUMPDEST PUSH2 0x202C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FFD JUMP JUMPDEST PUSH2 0x2039 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DB6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2054 PUSH0 DUP4 ADD DUP6 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0x2061 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x209F DUP3 PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x20AA DUP4 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20BA JUMPI PUSH2 0x20B9 PUSH2 0x2068 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20CF DUP3 PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x20DA DUP4 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x20E8 DUP2 PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20FF JUMPI PUSH2 0x20FE PUSH2 0x1EE2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x211E PUSH0 DUP4 PUSH2 0x2106 JUMP JUMPDEST SWAP2 POP PUSH2 0x2129 DUP3 PUSH2 0x2110 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x213D DUP3 PUSH2 0x2113 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2151 DUP3 PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x215C DUP4 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2174 JUMPI PUSH2 0x2173 PUSH2 0x1EE2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x218D PUSH0 DUP4 ADD DUP6 PUSH2 0x1DB6 JUMP JUMPDEST PUSH2 0x219A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DB6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21D8 DUP3 PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x21E3 DUP4 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x21F3 JUMPI PUSH2 0x21F2 PUSH2 0x2068 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2211 PUSH0 DUP4 ADD DUP7 PUSH2 0x1DB6 JUMP JUMPDEST PUSH2 0x221E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0x222B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AED JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xB5 0xA6 EXTDELEGATECALL GAS 0x21 PUSH28 0xCC4E0AE20F94BBF78068A7988E3BEE220C9000D0F95761064E64736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "257:5514:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;523:28:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2093:1932:8;;;:::i;:::-;;5640:128;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3923:182:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4680:244:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1143:46:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1008:57:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;763:55;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;696:60;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4033:645;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;950:51;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;625:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;825:52;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;658:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2933:116:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;558:22:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;587:31:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1074:62;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;884:59:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;492:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3455:140:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5503:129:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:1;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;523:28:8:-;;;;:::o;3902:186:1:-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;2093:1932:8:-;934:9;2142;:15;2138:39;;;2166:11;;;;;;;;;;;;;;2138:39;2190:13;875:2;2226:11;;:28;;;;:::i;:::-;2207:15;:47;;2190:65;;2266:15;2308:1;2285:11;:20;2297:7;;2285:20;;;;;;;;;;;;:24;2266:44;;2327:8;:22;;;;;2339:10;2327:22;2323:1126;;;2366:14;2408:15;2383:69;;;1058:7;2383:89;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2366:106;;2515:6;2491:21;:30;2487:72;;;2530:29;;;;;;;;;;;;;;2487:72;2576:13;2592:11;:20;2604:7;;2592:20;;;;;;;;;;;;2576:36;;2627:22;2652:14;:23;2667:7;;2652:23;;;;;;;;;;;;2627:48;;2712:1;2694:14;:19;2690:55;;2732:13;;2715:30;;2690:55;2762:17;2807:15;2782:88;;;2878:6;1058:7;2949:1;2981:4;2782:223;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2762:243;;3052:7;;3022:16;:27;3039:9;3022:27;;;;;;;;;;;:37;;;;3100:14;3074;:23;3089:7;;3074:23;;;;;;;;;;;:40;;;;3160:7;;3149:9;3134:57;3169:5;3176:14;3134:57;;;;;;;:::i;:::-;;;;;;;;813:5;3223:16;;:42;;;;:::i;:::-;3212:7;;:53;3208:157;;3303:1;3286:13;;:18;;;;;;;:::i;:::-;;;;;;;;3342:7;;3323:16;:26;;;;3208:157;3392:1;3381:7;;:12;;;;;;;:::i;:::-;;;;;;;;3422:15;3408:11;:29;;;;2351:1098;;;;2323:1126;3461:11;3475;:20;3487:7;;3475:20;;;;;;;;;;;;3461:34;;3530:10;3506:7;:16;3514:7;;3506:16;;;;;;;;;;;:21;3523:3;3506:21;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;3580:1;3574:3;:7;;;;:::i;:::-;3551:11;:20;3563:7;;3551:20;;;;;;;;;;;:30;;;;3616:10;3599:28;;3607:7;;3599:28;;;;;;;;;;3640:23;3692:3;1000:1;934:9;3667:21;;;;:::i;:::-;3666:29;;;;:::i;:::-;3640:55;;3707:7;3728:14;;;;;;;;;;;3720:28;;3756:15;3720:56;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3706:70;;;3792:2;3787:35;;3803:19;;;;;;;;;;;;;;3787:35;3835:14;934:9;3852;:15;;;;:::i;:::-;3835:32;;3891:1;3882:6;:10;3878:140;;;3926:10;3918:24;;3950:6;3918:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3909:52;;;;;3981:2;3976:30;;3992:14;;;;;;;;;;;;;;3976:30;3878:140;2127:1898;;;;;;2093:1932::o;5640:128::-;5691:7;813:5;5718:16;;:42;;;;:::i;:::-;5711:49;;5640:128;:::o;3923:182:5:-;1291:15;1269:38;;:10;:38;;;1265:122;;1343:10;1363:15;1324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;1265:122;4057:43:::1;4077:9;4088:11;;4057:19;:43::i;:::-;3923:182:::0;;;:::o;4680:244:1:-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;1143:46:8:-;;;;;;;;;;;;;;;;;:::o;2688:82:1:-;2737:5;2761:2;2754:9;;2688:82;:::o;1008:57:8:-;1058:7;1008:57;:::o;763:55::-;813:5;763:55;:::o;696:60::-;746:10;696:60;:::o;4033:645::-;4097:1;4087:6;:11;4083:39;;4107:15;;;;;;;;;;;;;;4083:39;4135:23;4161:21;4135:47;;4216:1;4197:15;:20;4193:62;;4226:29;;;;;;;;;;;;;;4193:62;4268:14;4285:13;:11;:13::i;:::-;4268:30;;4323:1;4313:6;:11;4309:53;;4333:29;;;;;;;;;;;;;;4309:53;4375:14;4421:6;4402:15;4393:6;:24;;;;:::i;:::-;4392:35;;;;:::i;:::-;4375:52;;4440:25;4446:10;4458:6;4440:5;:25::i;:::-;4489:6;4476:9;;:19;;;;;;;:::i;:::-;;;;;;;;4509:12;4535:10;4527:24;;4559:6;4527:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4508:62;;;4586:7;4581:37;;4602:16;;;;;;;;;;;;;;4581:37;4643:10;4636:34;;;4655:6;4663;4636:34;;;;;;;:::i;:::-;;;;;;;;4072:606;;;;4033:645;:::o;950:51::-;1000:1;950:51;:::o;625:26::-;;;;:::o;825:52::-;875:2;825:52;:::o;658:29::-;;;;;;;;;;;;;:::o;2933:116:1:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;558:22:8:-;;;;:::o;1962:93:1:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;587:31:8:-;;;;:::o;1074:62::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3244:178:1:-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;884:59:8:-;934:9;884:59;:::o;492:24::-;;;;:::o;3455:140:1:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;5503:129:8:-;5576:7;5603:11;:21;5615:8;5603:21;;;;;;;;;;;;5596:28;;5503:129;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8630:128:1:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;4686:809:8:-;4795:21;4819:16;:27;4836:9;4819:27;;;;;;;;;;;;4795:51;;4864:16;:27;4881:9;4864:27;;;;;;;;;;;4857:34;;;4904:9;4916:11;:26;4928:13;4916:26;;;;;;;;;;;;4904:38;;4961:1;4957;:5;4953:535;;;4979:11;5010:1;4993:11;;5005:1;4993:14;;;;;;;:::i;:::-;;;;;;;;:18;;;;:::i;:::-;4979:32;;5026:14;5043:7;:22;5051:13;5043:22;;;;;;;;;;;:27;5066:3;5043:27;;;;;;;;;;;;;;;;;;;;;5026:44;;5087:14;5104;:29;5119:13;5104:29;;;;;;;;;;;;5087:46;;5162:1;5152:6;:11;5148:39;;5174:13;;5165:22;;5148:39;5233:9;;5224:6;5208:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:34;5204:109;;;5284:13;:11;:13::i;:::-;5272:9;;:25;;;;:::i;:::-;5263:34;;5204:109;5340:1;5331:6;:10;5327:150;;;5362:21;5368:6;5376;5362:5;:21::i;:::-;5446:6;5407:54;;5431:13;5420:9;5407:54;5454:6;5407:54;;;;;;:::i;:::-;;;;;;;;5327:150;4964:524;;;4953:535;4784:711;;4686:809;;;:::o;10319:476:1:-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;7888:206::-;7977:1;7958:21;;:7;:21;;;7954:89;;8029:1;8002:30;;;;;;;;;;;:::i;:::-;;;;;;;;7954:89;8052:35;8060:7;8077:1;8081:5;8052:7;:35::i;:::-;7888:206;;:::o;9605:432::-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;7362:208::-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:77::-;1279:7;1308:5;1297:16;;1242:77;;;:::o;1325:118::-;1412:24;1430:5;1412:24;:::i;:::-;1407:3;1400:37;1325:118;;:::o;1449:222::-;1542:4;1580:2;1569:9;1565:18;1557:26;;1593:71;1661:1;1650:9;1646:17;1637:6;1593:71;:::i;:::-;1449:222;;;;:::o;1758:117::-;1867:1;1864;1857:12;1881:117;1990:1;1987;1980:12;2004:126;2041:7;2081:42;2074:5;2070:54;2059:65;;2004:126;;;:::o;2136:96::-;2173:7;2202:24;2220:5;2202:24;:::i;:::-;2191:35;;2136:96;;;:::o;2238:122::-;2311:24;2329:5;2311:24;:::i;:::-;2304:5;2301:35;2291:63;;2350:1;2347;2340:12;2291:63;2238:122;:::o;2366:139::-;2412:5;2450:6;2437:20;2428:29;;2466:33;2493:5;2466:33;:::i;:::-;2366:139;;;;:::o;2511:122::-;2584:24;2602:5;2584:24;:::i;:::-;2577:5;2574:35;2564:63;;2623:1;2620;2613:12;2564:63;2511:122;:::o;2639:139::-;2685:5;2723:6;2710:20;2701:29;;2739:33;2766:5;2739:33;:::i;:::-;2639:139;;;;:::o;2784:474::-;2852:6;2860;2909:2;2897:9;2888:7;2884:23;2880:32;2877:119;;;2915:79;;:::i;:::-;2877:119;3035:1;3060:53;3105:7;3096:6;3085:9;3081:22;3060:53;:::i;:::-;3050:63;;3006:117;3162:2;3188:53;3233:7;3224:6;3213:9;3209:22;3188:53;:::i;:::-;3178:63;;3133:118;2784:474;;;;;:::o;3264:90::-;3298:7;3341:5;3334:13;3327:21;3316:32;;3264:90;;;:::o;3360:109::-;3441:21;3456:5;3441:21;:::i;:::-;3436:3;3429:34;3360:109;;:::o;3475:210::-;3562:4;3600:2;3589:9;3585:18;3577:26;;3613:65;3675:1;3664:9;3660:17;3651:6;3613:65;:::i;:::-;3475:210;;;;:::o;3691:117::-;3800:1;3797;3790:12;3814:117;3923:1;3920;3913:12;3937:117;4046:1;4043;4036:12;4077:568;4150:8;4160:6;4210:3;4203:4;4195:6;4191:17;4187:27;4177:122;;4218:79;;:::i;:::-;4177:122;4331:6;4318:20;4308:30;;4361:18;4353:6;4350:30;4347:117;;;4383:79;;:::i;:::-;4347:117;4497:4;4489:6;4485:17;4473:29;;4551:3;4543:4;4535:6;4531:17;4521:8;4517:32;4514:41;4511:128;;;4558:79;;:::i;:::-;4511:128;4077:568;;;;;:::o;4651:704::-;4746:6;4754;4762;4811:2;4799:9;4790:7;4786:23;4782:32;4779:119;;;4817:79;;:::i;:::-;4779:119;4937:1;4962:53;5007:7;4998:6;4987:9;4983:22;4962:53;:::i;:::-;4952:63;;4908:117;5092:2;5081:9;5077:18;5064:32;5123:18;5115:6;5112:30;5109:117;;;5145:79;;:::i;:::-;5109:117;5258:80;5330:7;5321:6;5310:9;5306:22;5258:80;:::i;:::-;5240:98;;;;5035:313;4651:704;;;;;:::o;5361:619::-;5438:6;5446;5454;5503:2;5491:9;5482:7;5478:23;5474:32;5471:119;;;5509:79;;:::i;:::-;5471:119;5629:1;5654:53;5699:7;5690:6;5679:9;5675:22;5654:53;:::i;:::-;5644:63;;5600:117;5756:2;5782:53;5827:7;5818:6;5807:9;5803:22;5782:53;:::i;:::-;5772:63;;5727:118;5884:2;5910:53;5955:7;5946:6;5935:9;5931:22;5910:53;:::i;:::-;5900:63;;5855:118;5361:619;;;;;:::o;5986:329::-;6045:6;6094:2;6082:9;6073:7;6069:23;6065:32;6062:119;;;6100:79;;:::i;:::-;6062:119;6220:1;6245:53;6290:7;6281:6;6270:9;6266:22;6245:53;:::i;:::-;6235:63;;6191:117;5986:329;;;;:::o;6321:86::-;6356:7;6396:4;6389:5;6385:16;6374:27;;6321:86;;;:::o;6413:112::-;6496:22;6512:5;6496:22;:::i;:::-;6491:3;6484:35;6413:112;;:::o;6531:214::-;6620:4;6658:2;6647:9;6643:18;6635:26;;6671:67;6735:1;6724:9;6720:17;6711:6;6671:67;:::i;:::-;6531:214;;;;:::o;6751:93::-;6787:7;6827:10;6820:5;6816:22;6805:33;;6751:93;;;:::o;6850:115::-;6935:23;6952:5;6935:23;:::i;:::-;6930:3;6923:36;6850:115;;:::o;6971:218::-;7062:4;7100:2;7089:9;7085:18;7077:26;;7113:69;7179:1;7168:9;7164:17;7155:6;7113:69;:::i;:::-;6971:218;;;;:::o;7195:118::-;7282:24;7300:5;7282:24;:::i;:::-;7277:3;7270:37;7195:118;;:::o;7319:222::-;7412:4;7450:2;7439:9;7435:18;7427:26;;7463:71;7531:1;7520:9;7516:17;7507:6;7463:71;:::i;:::-;7319:222;;;;:::o;7547:329::-;7606:6;7655:2;7643:9;7634:7;7630:23;7626:32;7623:119;;;7661:79;;:::i;:::-;7623:119;7781:1;7806:53;7851:7;7842:6;7831:9;7827:22;7806:53;:::i;:::-;7796:63;;7752:117;7547:329;;;;:::o;7882:474::-;7950:6;7958;8007:2;7995:9;7986:7;7982:23;7978:32;7975:119;;;8013:79;;:::i;:::-;7975:119;8133:1;8158:53;8203:7;8194:6;8183:9;8179:22;8158:53;:::i;:::-;8148:63;;8104:117;8260:2;8286:53;8331:7;8322:6;8311:9;8307:22;8286:53;:::i;:::-;8276:63;;8231:118;7882:474;;;;;:::o;8362:::-;8430:6;8438;8487:2;8475:9;8466:7;8462:23;8458:32;8455:119;;;8493:79;;:::i;:::-;8455:119;8613:1;8638:53;8683:7;8674:6;8663:9;8659:22;8638:53;:::i;:::-;8628:63;;8584:117;8740:2;8766:53;8811:7;8802:6;8791:9;8787:22;8766:53;:::i;:::-;8756:63;;8711:118;8362:474;;;;;:::o;8842:180::-;8890:77;8887:1;8880:88;8987:4;8984:1;8977:15;9011:4;9008:1;9001:15;9028:320;9072:6;9109:1;9103:4;9099:12;9089:22;;9156:1;9150:4;9146:12;9177:18;9167:81;;9233:4;9225:6;9221:17;9211:27;;9167:81;9295:2;9287:6;9284:14;9264:18;9261:38;9258:84;;9314:18;;:::i;:::-;9258:84;9079:269;9028:320;;;:::o;9354:180::-;9402:77;9399:1;9392:88;9499:4;9496:1;9489:15;9523:4;9520:1;9513:15;9540:191;9580:3;9599:20;9617:1;9599:20;:::i;:::-;9594:25;;9633:20;9651:1;9633:20;:::i;:::-;9628:25;;9676:1;9673;9669:9;9662:16;;9697:3;9694:1;9691:10;9688:36;;;9704:18;;:::i;:::-;9688:36;9540:191;;;;:::o;9737:60::-;9765:3;9786:5;9779:12;;9737:60;;;:::o;9803:140::-;9852:9;9885:52;9903:33;9912:23;9929:5;9912:23;:::i;:::-;9903:33;:::i;:::-;9885:52;:::i;:::-;9872:65;;9803:140;;;:::o;9949:129::-;10035:36;10065:5;10035:36;:::i;:::-;10030:3;10023:49;9949:129;;:::o;10084:220::-;10176:4;10214:2;10203:9;10199:18;10191:26;;10227:70;10294:1;10283:9;10279:17;10270:6;10227:70;:::i;:::-;10084:220;;;;:::o;10310:143::-;10367:5;10398:6;10392:13;10383:22;;10414:33;10441:5;10414:33;:::i;:::-;10310:143;;;;:::o;10459:351::-;10529:6;10578:2;10566:9;10557:7;10553:23;10549:32;10546:119;;;10584:79;;:::i;:::-;10546:119;10704:1;10729:64;10785:7;10776:6;10765:9;10761:22;10729:64;:::i;:::-;10719:74;;10675:128;10459:351;;;;:::o;10816:85::-;10861:7;10890:5;10879:16;;10816:85;;;:::o;10907:158::-;10965:9;10998:61;11016:42;11025:32;11051:5;11025:32;:::i;:::-;11016:42;:::i;:::-;10998:61;:::i;:::-;10985:74;;10907:158;;;:::o;11071:147::-;11166:45;11205:5;11166:45;:::i;:::-;11161:3;11154:58;11071:147;;:::o;11224:456::-;11380:4;11418:2;11407:9;11403:18;11395:26;;11431:70;11498:1;11487:9;11483:17;11474:6;11431:70;:::i;:::-;11511:80;11587:2;11576:9;11572:18;11563:6;11511:80;:::i;:::-;11601:72;11669:2;11658:9;11654:18;11645:6;11601:72;:::i;:::-;11224:456;;;;;;:::o;11686:332::-;11807:4;11845:2;11834:9;11830:18;11822:26;;11858:71;11926:1;11915:9;11911:17;11902:6;11858:71;:::i;:::-;11939:72;12007:2;11996:9;11992:18;11983:6;11939:72;:::i;:::-;11686:332;;;;;:::o;12024:180::-;12072:77;12069:1;12062:88;12169:4;12166:1;12159:15;12193:4;12190:1;12183:15;12210:185;12250:1;12267:20;12285:1;12267:20;:::i;:::-;12262:25;;12301:20;12319:1;12301:20;:::i;:::-;12296:25;;12340:1;12330:35;;12345:18;;:::i;:::-;12330:35;12387:1;12384;12380:9;12375:14;;12210:185;;;;:::o;12401:410::-;12441:7;12464:20;12482:1;12464:20;:::i;:::-;12459:25;;12498:20;12516:1;12498:20;:::i;:::-;12493:25;;12553:1;12550;12546:9;12575:30;12593:11;12575:30;:::i;:::-;12564:41;;12754:1;12745:7;12741:15;12738:1;12735:22;12715:1;12708:9;12688:83;12665:139;;12784:18;;:::i;:::-;12665:139;12449:362;12401:410;;;;:::o;12817:147::-;12918:11;12955:3;12940:18;;12817:147;;;;:::o;12970:114::-;;:::o;13090:398::-;13249:3;13270:83;13351:1;13346:3;13270:83;:::i;:::-;13263:90;;13362:93;13451:3;13362:93;:::i;:::-;13480:1;13475:3;13471:11;13464:18;;13090:398;;;:::o;13494:379::-;13678:3;13700:147;13843:3;13700:147;:::i;:::-;13693:154;;13864:3;13857:10;;13494:379;;;:::o;13879:194::-;13919:4;13939:20;13957:1;13939:20;:::i;:::-;13934:25;;13973:20;13991:1;13973:20;:::i;:::-;13968:25;;14017:1;14014;14010:9;14002:17;;14041:1;14035:4;14032:11;14029:37;;;14046:18;;:::i;:::-;14029:37;13879:194;;;;:::o;14079:332::-;14200:4;14238:2;14227:9;14223:18;14215:26;;14251:71;14319:1;14308:9;14304:17;14295:6;14251:71;:::i;:::-;14332:72;14400:2;14389:9;14385:18;14376:6;14332:72;:::i;:::-;14079:332;;;;;:::o;14417:180::-;14465:77;14462:1;14455:88;14562:4;14559:1;14552:15;14586:4;14583:1;14576:15;14603:176;14635:1;14652:20;14670:1;14652:20;:::i;:::-;14647:25;;14686:20;14704:1;14686:20;:::i;:::-;14681:25;;14725:1;14715:35;;14730:18;;:::i;:::-;14715:35;14771:1;14768;14764:9;14759:14;;14603:176;;;;:::o;14785:442::-;14934:4;14972:2;14961:9;14957:18;14949:26;;14985:71;15053:1;15042:9;15038:17;15029:6;14985:71;:::i;:::-;15066:72;15134:2;15123:9;15119:18;15110:6;15066:72;:::i;:::-;15148;15216:2;15205:9;15201:18;15192:6;15148:72;:::i;:::-;14785:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1761800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CALLBACK_GAS_LIMIT()": "376",
								"Click()": "infinite",
								"FEE()": "369",
								"HALVING_INTERVAL_ROUNDS()": "392",
								"INITIAL_REWARD()": "414",
								"LIQUIDITY_SHARE()": "371",
								"ROUND_DURATION()": "415",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2895",
								"burn(uint256)": "infinite",
								"currentReward()": "2494",
								"decimals()": "428",
								"getPlayersCountInRound(uint256)": "infinite",
								"lastHalvingRound()": "2470",
								"lastRoundTs()": "2493",
								"liquidityVault()": "2553",
								"maxSupply()": "2491",
								"name()": "infinite",
								"nextHalvingRound()": "infinite",
								"playerCount(uint256)": "infinite",
								"players(uint256,uint256)": "infinite",
								"rawFulfillRandomWords(uint256,uint256[])": "infinite",
								"roundId()": "2514",
								"symbol()": "infinite",
								"totalSupply()": "2478",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_fulfillRandomWords(uint256,uint256[] calldata)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 257,
									"end": 5771,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 257,
									"end": 5771,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 257,
									"end": 5771,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1694,
									"end": 2085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "536174616E47616D6573205320546F6B656E0000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "7367530000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1834,
									"end": 1855,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1653,
									"end": 1667,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1668,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1610,
									"end": 1668,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1668,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1610,
									"end": 1668,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1668,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1610,
									"end": 1668,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1668,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1668,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1668,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1668,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1568,
									"end": 1673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1885,
									"end": 1902,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "372537349A396A28680000"
								},
								{
									"begin": 1873,
									"end": 1882,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1873,
									"end": 1902,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1873,
									"end": 1902,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1873,
									"end": 1902,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1873,
									"end": 1902,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 746,
									"end": 756,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "241A9B4F617A280000"
								},
								{
									"begin": 1913,
									"end": 1926,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 1913,
									"end": 1943,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1913,
									"end": 1943,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1913,
									"end": 1943,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1913,
									"end": 1943,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1971,
									"end": 1984,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1968,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 1954,
									"end": 1968,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1954,
									"end": 1984,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1954,
									"end": 1984,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1984,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1984,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1984,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1984,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1954,
									"end": 1984,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1984,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1984,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1984,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1984,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1984,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1954,
									"end": 1984,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1984,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1984,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1984,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1984,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1984,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2009,
									"end": 2024,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 8
								},
								{
									"begin": 1995,
									"end": 2006,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1995,
									"end": 2024,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1995,
									"end": 2024,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1995,
									"end": 2024,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1995,
									"end": 2024,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2045,
									"end": 2046,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2035,
									"end": 2042,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 2035,
									"end": 2046,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2035,
									"end": 2046,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2035,
									"end": 2046,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2035,
									"end": 2046,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2076,
									"end": 2077,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2057,
									"end": 2073,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2057,
									"end": 2077,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2057,
									"end": 2077,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2057,
									"end": 2077,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2057,
									"end": 2077,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 2085,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 257,
									"end": 5771,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 257,
									"end": 5771,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1410,
									"end": 1416,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1444,
									"end": 1449,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1438,
									"end": 1450,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1511,
									"end": 1588,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1589,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1608,
									"end": 1612,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1605,
									"end": 1606,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1632,
									"end": 1636,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1629,
									"end": 1630,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1622,
									"end": 1637,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1697,
									"end": 1774,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1687,
									"end": 1775,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1794,
									"end": 1798,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1784,
									"end": 1799,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1818,
									"end": 1822,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1808,
									"end": 1823,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1885,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1916,
									"end": 1917,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1910,
									"end": 1914,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1906,
									"end": 1918,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1963,
									"end": 1964,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1957,
									"end": 1961,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1953,
									"end": 1965,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1984,
									"end": 2002,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2040,
									"end": 2044,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 2032,
									"end": 2038,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2028,
									"end": 2045,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2102,
									"end": 2104,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2094,
									"end": 2100,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2091,
									"end": 2105,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2071,
									"end": 2089,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2068,
									"end": 2106,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 2121,
									"end": 2139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1886,
									"end": 2155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1835,
									"end": 2155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2210,
									"end": 2214,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2233,
									"end": 2236,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2256,
									"end": 2259,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2253,
									"end": 2254,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2246,
									"end": 2260,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2290,
									"end": 2294,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2161,
									"end": 2302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2345,
									"end": 2351,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2387,
									"end": 2389,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2380,
									"end": 2385,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2372,
									"end": 2395,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2308,
									"end": 2401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2451,
									"end": 2459,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2501,
									"end": 2506,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2499,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2491,
									"end": 2507,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2407,
									"end": 2514,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2627,
									"end": 2637,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2623,
									"end": 2641,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2692,
									"end": 2758,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2681,
									"end": 2690,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 2662,
									"end": 2759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2810,
									"end": 2818,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2799,
									"end": 2808,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 2780,
									"end": 2819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2848,
									"end": 2857,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2841,
									"end": 2846,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2837,
									"end": 2858,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2901,
									"end": 2905,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2891,
									"end": 2899,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2880,
									"end": 2885,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2877,
									"end": 2907,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2913,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2956,
									"end": 2963,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 2990,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2919,
									"end": 2996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3030,
									"end": 3033,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3002,
									"end": 3062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3118,
									"end": 3127,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 3196,
									"end": 3201,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 3178,
									"end": 3202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 3169,
									"end": 3203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 3151,
									"end": 3204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3068,
									"end": 3210,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3259,
									"end": 3262,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3280,
									"end": 3285,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3216,
									"end": 3291,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3438,
									"end": 3445,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 3407,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3541,
									"end": 3557,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 3517,
									"end": 3558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3509,
									"end": 3515,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3496,
									"end": 3507,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 3468,
									"end": 3559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3455,
									"end": 3560,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3373,
									"end": 3566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3297,
									"end": 3566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3617,
									"end": 3620,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3638,
									"end": 3639,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3631,
									"end": 3639,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3631,
									"end": 3639,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3572,
									"end": 3645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 3728,
									"end": 3760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 3827,
									"end": 3833,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3819,
									"end": 3825,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3813,
									"end": 3817,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 3769,
									"end": 3834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "tag",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3704,
									"end": 3840,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 3840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3923,
									"end": 3926,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3916,
									"end": 3921,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3913,
									"end": 3927,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 4014,
									"end": 4015,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4007,
									"end": 4012,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 3977,
									"end": 4016,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3950,
									"end": 3951,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3943,
									"end": 3948,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3939,
									"end": 3952,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3846,
									"end": 4032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4139,
									"end": 4141,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4134,
									"end": 4137,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4131,
									"end": 4142,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 4205,
									"end": 4210,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 4173,
									"end": 4211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 4275,
									"end": 4285,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 4257,
									"end": 4286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4247,
									"end": 4255,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4243,
									"end": 4287,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4440,
									"end": 4442,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4428,
									"end": 4438,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4425,
									"end": 4443,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4461,
									"end": 4469,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 4558,
									"end": 4561,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 4540,
									"end": 4562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "tag",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4530,
									"end": 4538,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4526,
									"end": 4563,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4513,
									"end": 4524,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 4484,
									"end": 4564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "tag",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4641,
									"end": 4649,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4691,
									"end": 4696,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4685,
									"end": 4689,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4681,
									"end": 4697,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4587,
									"end": 4704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4754,
									"end": 4760,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 4835,
									"end": 4836,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4831,
									"end": 4837,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4823,
									"end": 4828,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 4816,
									"end": 4829,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 4787,
									"end": 4838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4783,
									"end": 4839,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4868,
									"end": 4872,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4862,
									"end": 4866,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4858,
									"end": 4873,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4761,
									"end": 4879,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4710,
									"end": 4879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4960,
									"end": 4964,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 5131,
									"end": 5134,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5125,
									"end": 5129,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 5106,
									"end": 5135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5168,
									"end": 5171,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5165,
									"end": 5166,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 5161,
									"end": 5172,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 5155,
									"end": 5159,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5152,
									"end": 5173,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4884,
									"end": 5179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 5334,
									"end": 5337,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 5301,
									"end": 5338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "tag",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5403,
									"end": 5421,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5395,
									"end": 5401,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5392,
									"end": 5422,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 5425,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "tag",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "tag",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 5501,
									"end": 5505,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5495,
									"end": 5506,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 5469,
									"end": 5507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 5614,
									"end": 5620,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5606,
									"end": 5612,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 5554,
									"end": 5621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "tag",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5648,
									"end": 5649,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5672,
									"end": 5676,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5704,
									"end": 5706,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 5696,
									"end": 5702,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5693,
									"end": 5707,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 5721,
									"end": 5722,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6378,
									"end": 6379,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6395,
									"end": 6401,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6444,
									"end": 6453,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6439,
									"end": 6442,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 6435,
									"end": 6454,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6429,
									"end": 6455,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "tag",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 6555,
									"end": 6561,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6548,
									"end": 6553,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 6495,
									"end": 6562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6489,
									"end": 6493,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 6482,
									"end": 6563,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6351,
									"end": 6573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "tag",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5768,
									"end": 5772,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 5764,
									"end": 5773,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 5756,
									"end": 5762,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5752,
									"end": 5774,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 5834,
									"end": 5838,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 5802,
									"end": 5839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "tag",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5861,
									"end": 5862,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5889,
									"end": 5896,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5886,
									"end": 5887,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5883,
									"end": 5897,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5968,
									"end": 5977,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5963,
									"end": 5966,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 5959,
									"end": 5978,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5953,
									"end": 5979,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5945,
									"end": 5951,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5938,
									"end": 5980,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6019,
									"end": 6020,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6011,
									"end": 6017,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6007,
									"end": 6021,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6066,
									"end": 6068,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6055,
									"end": 6064,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6051,
									"end": 6069,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5912,
									"end": 5916,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5909,
									"end": 5910,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5905,
									"end": 5917,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6111,
									"end": 6117,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 6102,
									"end": 6109,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6099,
									"end": 6118,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6169,
									"end": 6178,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6164,
									"end": 6167,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 6160,
									"end": 6179,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6154,
									"end": 6180,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 6254,
									"end": 6258,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6246,
									"end": 6252,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 6242,
									"end": 6259,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6231,
									"end": 6240,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 6212,
									"end": 6260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6204,
									"end": 6210,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6197,
									"end": 6261,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6119,
									"end": 6275,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "tag",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6321,
									"end": 6322,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6317,
									"end": 6318,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 6309,
									"end": 6315,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 6305,
									"end": 6319,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 6301,
									"end": 6323,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6295,
									"end": 6299,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 6288,
									"end": 6324,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "tag",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5184,
									"end": 6579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 257,
									"end": 5771,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 257,
									"end": 5771,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 257,
									"end": 5771,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 257,
									"end": 5771,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 257,
									"end": 5771,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 257,
									"end": 5771,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 257,
									"end": 5771,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 5771,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 257,
									"end": 5771,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 5771,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "798"
								},
								{
									"begin": 257,
									"end": 5771,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 257,
									"end": 5771,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 5771,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122052b5a6f95a217bcc4e0ae20f94bbf78068a7988e3bee220c9000d0f95761064e64736f6c634300081e0033",
									".code": [
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "43270D56"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "967372A3"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "C57981B5"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "C57981B5"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "D5ABEB01"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "F68C2BFD"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "967372A3"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "998F1B80"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "708666AD"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "708666AD"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "8CD221C9"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "43270D56"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "47FEC1A2"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "6641EA08"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "33D608F1"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "33D608F1"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "36667E7F"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "36BCF7D6"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "42966C68"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "2566C9EA"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "1D6AD8E2"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "1D729C5A"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "1FE543E3"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "7621ECA"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 5771,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 523,
											"end": 551,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 523,
											"end": 551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 523,
											"end": 551,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 551,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 551,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 523,
											"end": 551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 523,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 523,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 523,
											"end": 551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 551,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 523,
											"end": 551,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 523,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 523,
											"end": 551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 551,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 4025,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2093,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2093,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2093,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 4025,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2093,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 4025,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 5640,
											"end": 5768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 5640,
											"end": 5768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3923,
											"end": 4105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3923,
											"end": 4105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1143,
											"end": 1189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1143,
											"end": 1189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1143,
											"end": 1189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1008,
											"end": 1065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1008,
											"end": 1065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 763,
											"end": 818,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 763,
											"end": 818,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 818,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 818,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 763,
											"end": 818,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 763,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 763,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 763,
											"end": 818,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 763,
											"end": 818,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 763,
											"end": 818,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 763,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 763,
											"end": 818,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 763,
											"end": 818,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 696,
											"end": 756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 696,
											"end": 756,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 696,
											"end": 756,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 696,
											"end": 756,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 696,
											"end": 756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 696,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 696,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 696,
											"end": 756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 696,
											"end": 756,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 696,
											"end": 756,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 696,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 696,
											"end": 756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 696,
											"end": 756,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 4033,
											"end": 4678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 4033,
											"end": 4678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 950,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 950,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 625,
											"end": 651,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 625,
											"end": 651,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 651,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 651,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 625,
											"end": 651,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 625,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 625,
											"end": 651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 625,
											"end": 651,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 651,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 625,
											"end": 651,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 625,
											"end": 651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 625,
											"end": 651,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 651,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 825,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 825,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 658,
											"end": 687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 658,
											"end": 687,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 687,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 687,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 658,
											"end": 687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 658,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 658,
											"end": 687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 658,
											"end": 687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 687,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 658,
											"end": 687,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 658,
											"end": 687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 658,
											"end": 687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 687,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 558,
											"end": 580,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 558,
											"end": 580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 558,
											"end": 580,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 580,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 580,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 558,
											"end": 580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 558,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 558,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 558,
											"end": 580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 580,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 558,
											"end": 580,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 558,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 558,
											"end": 580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 580,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 587,
											"end": 618,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 587,
											"end": 618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 587,
											"end": 618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 618,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 587,
											"end": 618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 587,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 587,
											"end": 618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 587,
											"end": 618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 618,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 587,
											"end": 618,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 587,
											"end": 618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 587,
											"end": 618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 618,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1074,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1074,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1074,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 884,
											"end": 943,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 884,
											"end": 943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 884,
											"end": 943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 492,
											"end": 516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 492,
											"end": 516,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 516,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 516,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 492,
											"end": 516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 492,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 492,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 492,
											"end": 516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 516,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 492,
											"end": 516,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 492,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 492,
											"end": 516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 516,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 5503,
											"end": 5632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 5503,
											"end": 5632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 5503,
											"end": 5632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 523,
											"end": 551,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 523,
											"end": 551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 523,
											"end": 551,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 523,
											"end": 551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 4025,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2093,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 934,
											"end": 943,
											"name": "PUSH",
											"source": 8,
											"value": "16345785D8A0000"
										},
										{
											"begin": 2142,
											"end": 2151,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2157,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2177,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2138,
											"end": 2177,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2177,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2177,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2177,
											"name": "PUSH",
											"source": 8,
											"value": "732F941300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2166,
											"end": 2177,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2177,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2177,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2166,
											"end": 2177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2177,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2177,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2177,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2177,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2177,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2177,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2177,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2138,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 877,
											"name": "PUSH",
											"source": 8,
											"value": "3C"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2226,
											"end": 2254,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2226,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2254,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2226,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2207,
											"end": 2222,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2207,
											"end": 2254,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2207,
											"end": 2254,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2281,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2309,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2285,
											"end": 2296,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2304,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2297,
											"end": 2304,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2310,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2335,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2323,
											"end": 3449,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2323,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 2323,
											"end": 3449,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2423,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "798"
										},
										{
											"begin": 2383,
											"end": 2452,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2383,
											"end": 2452,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2452,
											"name": "PUSH",
											"source": 8,
											"value": "C66D3D18"
										},
										{
											"begin": 1058,
											"end": 1065,
											"name": "PUSH",
											"source": 8,
											"value": "30D40"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2383,
											"end": 2472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2383,
											"end": 2472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 2383,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "SELFBALANCE",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2521,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2487,
											"end": 2559,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2487,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2487,
											"end": 2559,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "786E0A9900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2487,
											"end": 2559,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2487,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 2589,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2603,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 2592,
											"end": 2612,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2611,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2604,
											"end": 2611,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2612,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2612,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2612,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2612,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2612,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2612,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2612,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2612,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2612,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2612,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2612,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2612,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 2612,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 2612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2666,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 2652,
											"end": 2675,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2667,
											"end": 2674,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2675,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2675,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2675,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2675,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2675,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2675,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2675,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2675,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2675,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2675,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2675,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2675,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2627,
											"end": 2675,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2627,
											"end": 2675,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2708,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2713,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 2690,
											"end": 2745,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2732,
											"end": 2745,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2732,
											"end": 2745,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2715,
											"end": 2745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2715,
											"end": 2745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2745,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 2690,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2779,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2822,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "798"
										},
										{
											"begin": 2782,
											"end": 2870,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2782,
											"end": 2870,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2870,
											"name": "PUSH",
											"source": 8,
											"value": "CB9BB27F"
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1058,
											"end": 1065,
											"name": "PUSH",
											"source": 8,
											"value": "30D40"
										},
										{
											"begin": 2949,
											"end": 2950,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 2782,
											"end": 3005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2782,
											"end": 3005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 2782,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 3005,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 3005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3052,
											"end": 3059,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3052,
											"end": 3059,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3038,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3022,
											"end": 3049,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3048,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3049,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3049,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3022,
											"end": 3049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3049,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3049,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3049,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3022,
											"end": 3049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3049,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3022,
											"end": 3049,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3100,
											"end": 3114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3088,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 3074,
											"end": 3097,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3096,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3089,
											"end": 3096,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3097,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3097,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3074,
											"end": 3097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3097,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3097,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3074,
											"end": 3097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3097,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3097,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3114,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3160,
											"end": 3167,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3160,
											"end": 3167,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3149,
											"end": 3158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3191,
											"name": "PUSH",
											"source": 8,
											"value": "A77018CFA060263F92C58B53277F73D2EADE9D69E943460421E26E648EED9F33"
										},
										{
											"begin": 3169,
											"end": 3174,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3191,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3191,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3134,
											"end": 3191,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3191,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3191,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3134,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3191,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3134,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3191,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3191,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3191,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3191,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3191,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3191,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3191,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 813,
											"end": 818,
											"name": "PUSH",
											"source": 8,
											"value": "C382"
										},
										{
											"begin": 3223,
											"end": 3239,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3223,
											"end": 3239,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3223,
											"end": 3265,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3265,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 3223,
											"end": 3265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3265,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3223,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3219,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3212,
											"end": 3219,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3265,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3208,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 3208,
											"end": 3365,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3304,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3286,
											"end": 3299,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 3286,
											"end": 3299,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 3286,
											"end": 3304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3349,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3342,
											"end": 3349,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3323,
											"end": 3339,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3323,
											"end": 3349,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3323,
											"end": 3349,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3323,
											"end": 3349,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3323,
											"end": 3349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3208,
											"end": 3365,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 3208,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3392,
											"end": 3393,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3381,
											"end": 3388,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3381,
											"end": 3388,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 3381,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3422,
											"end": 3437,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3408,
											"end": 3419,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3437,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3408,
											"end": 3437,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3408,
											"end": 3437,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3408,
											"end": 3437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2351,
											"end": 3449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2351,
											"end": 3449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2351,
											"end": 3449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2351,
											"end": 3449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2323,
											"end": 3449,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 2323,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3472,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3475,
											"end": 3495,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3487,
											"end": 3494,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3495,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3495,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3495,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3475,
											"end": 3495,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3495,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3495,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3495,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3475,
											"end": 3495,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3495,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3495,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3495,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3530,
											"end": 3540,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3513,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 3506,
											"end": 3522,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3521,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3514,
											"end": 3521,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3522,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3522,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3522,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3522,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3522,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3522,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3522,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3522,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3522,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3522,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3526,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3540,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3580,
											"end": 3581,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3574,
											"end": 3577,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 3574,
											"end": 3581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3551,
											"end": 3571,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3570,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3563,
											"end": 3570,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3571,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3571,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3571,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3551,
											"end": 3571,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3571,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3571,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3571,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3551,
											"end": 3571,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3571,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3571,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3581,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3581,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3581,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3581,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3626,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3627,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3599,
											"end": 3627,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3614,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3607,
											"end": 3614,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3627,
											"name": "PUSH",
											"source": 8,
											"value": "66F19FB732C3E13893EA1BB5573839D7D0B41EFFC0AEF6B59283C15EA5A0DBF9"
										},
										{
											"begin": 3599,
											"end": 3627,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3627,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3627,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3627,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3627,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3627,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3627,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3627,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3599,
											"end": 3627,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 3663,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3695,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1000,
											"end": 1001,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "PUSH",
											"source": 8,
											"value": "16345785D8A0000"
										},
										{
											"begin": 3667,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 3667,
											"end": 3688,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3667,
											"end": 3688,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3667,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 3667,
											"end": 3688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3667,
											"end": 3688,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 3667,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 3666,
											"end": 3695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 3695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 3695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3707,
											"end": 3714,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3742,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3728,
											"end": 3742,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3728,
											"end": 3742,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3728,
											"end": 3742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3728,
											"end": 3742,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3728,
											"end": 3742,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3728,
											"end": 3742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3728,
											"end": 3742,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3728,
											"end": 3742,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3728,
											"end": 3742,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3748,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3720,
											"end": 3748,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3756,
											"end": 3771,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3720,
											"end": 3776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3776,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3792,
											"end": 3794,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3787,
											"end": 3822,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3803,
											"end": 3822,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3803,
											"end": 3822,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3803,
											"end": 3822,
											"name": "PUSH",
											"source": 8,
											"value": "4033E4E300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3803,
											"end": 3822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3803,
											"end": 3822,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3803,
											"end": 3822,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3803,
											"end": 3822,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3803,
											"end": 3822,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3803,
											"end": 3822,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3803,
											"end": 3822,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3803,
											"end": 3822,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3803,
											"end": 3822,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3803,
											"end": 3822,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3803,
											"end": 3822,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3822,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3787,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3835,
											"end": 3849,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "PUSH",
											"source": 8,
											"value": "16345785D8A0000"
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3852,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 3852,
											"end": 3867,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3852,
											"end": 3867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3852,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 3852,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3852,
											"end": 3867,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 3852,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3835,
											"end": 3867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3835,
											"end": 3867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3891,
											"end": 3892,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 3892,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3878,
											"end": 4018,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3878,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 3878,
											"end": 4018,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3936,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3918,
											"end": 3942,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3918,
											"end": 3961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3918,
											"end": 3961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3909,
											"end": 3961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3909,
											"end": 3961,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3909,
											"end": 3961,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3909,
											"end": 3961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3909,
											"end": 3961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 3976,
											"end": 4006,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3992,
											"end": 4006,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3992,
											"end": 4006,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3992,
											"end": 4006,
											"name": "PUSH",
											"source": 8,
											"value": "F0C49D4400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3992,
											"end": 4006,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3992,
											"end": 4006,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3992,
											"end": 4006,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3992,
											"end": 4006,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3992,
											"end": 4006,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3992,
											"end": 4006,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3992,
											"end": 4006,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3992,
											"end": 4006,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3992,
											"end": 4006,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3992,
											"end": 4006,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3992,
											"end": 4006,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4006,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 3976,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3878,
											"end": 4018,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 3878,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 4025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 4025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 4025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 4025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 4025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 4025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 4025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5698,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 818,
											"name": "PUSH",
											"source": 8,
											"value": "C382"
										},
										{
											"begin": 5718,
											"end": 5734,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5718,
											"end": 5734,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5718,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 5718,
											"end": 5760,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5718,
											"end": 5760,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5718,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 5718,
											"end": 5760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5718,
											"end": 5760,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 5718,
											"end": 5760,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5711,
											"end": 5760,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5711,
											"end": 5760,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1306,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "798"
										},
										{
											"begin": 1269,
											"end": 1307,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1269,
											"end": 1307,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1279,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1307,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1269,
											"end": 1307,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1307,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1265,
											"end": 1387,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1353,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1363,
											"end": 1378,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "798"
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "20138A9F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1324,
											"end": 1380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1380,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1387,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1265,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 4077,
											"end": 4086,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4088,
											"end": 4099,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4088,
											"end": 4099,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 4057,
											"end": 4100,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4100,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 4057,
											"end": 4100,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 4801,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 4801,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1058,
											"end": 1065,
											"name": "PUSH",
											"source": 8,
											"value": "30D40"
										},
										{
											"begin": 1008,
											"end": 1065,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 763,
											"end": 818,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 813,
											"end": 818,
											"name": "PUSH",
											"source": 8,
											"value": "C382"
										},
										{
											"begin": 763,
											"end": 818,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 763,
											"end": 818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 696,
											"end": 756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 746,
											"end": 756,
											"name": "PUSH",
											"source": 8,
											"value": "241A9B4F617A280000"
										},
										{
											"begin": 696,
											"end": 756,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 696,
											"end": 756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4097,
											"end": 4098,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4093,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4087,
											"end": 4098,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4083,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 4083,
											"end": 4122,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4122,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4107,
											"end": 4122,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4122,
											"name": "PUSH",
											"source": 8,
											"value": "98642B8600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4107,
											"end": 4122,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4122,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4122,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4107,
											"end": 4122,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4122,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4107,
											"end": 4122,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4122,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4122,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4122,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4122,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4122,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4083,
											"end": 4122,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 4083,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4135,
											"end": 4158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4182,
											"name": "SELFBALANCE",
											"source": 8
										},
										{
											"begin": 4135,
											"end": 4182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4135,
											"end": 4182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4216,
											"end": 4217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4212,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4217,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4193,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 4193,
											"end": 4255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4226,
											"end": 4255,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4255,
											"name": "PUSH",
											"source": 8,
											"value": "786E0A9900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4226,
											"end": 4255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4255,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4226,
											"end": 4255,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4255,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4255,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4193,
											"end": 4255,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 4193,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4268,
											"end": 4282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4285,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 4285,
											"end": 4296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 4285,
											"end": 4298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4298,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 4285,
											"end": 4298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4268,
											"end": 4298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4268,
											"end": 4298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4323,
											"end": 4324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4319,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4324,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 4309,
											"end": 4362,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4333,
											"end": 4362,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4333,
											"end": 4362,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4333,
											"end": 4362,
											"name": "PUSH",
											"source": 8,
											"value": "786E0A9900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4333,
											"end": 4362,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4333,
											"end": 4362,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4333,
											"end": 4362,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4333,
											"end": 4362,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4333,
											"end": 4362,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4333,
											"end": 4362,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4333,
											"end": 4362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4333,
											"end": 4362,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4333,
											"end": 4362,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4333,
											"end": 4362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4333,
											"end": 4362,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4362,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 4309,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4402,
											"end": 4417,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4399,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 4393,
											"end": 4417,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 4393,
											"end": 4417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4417,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 4393,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 4392,
											"end": 4427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 4392,
											"end": 4427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4427,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 4392,
											"end": 4427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 4446,
											"end": 4456,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4458,
											"end": 4464,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 4440,
											"end": 4465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4465,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 4440,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4495,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4485,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4476,
											"end": 4485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 4476,
											"end": 4495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4509,
											"end": 4521,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4535,
											"end": 4545,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4551,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4527,
											"end": 4551,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4559,
											"end": 4565,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 4527,
											"end": 4570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4527,
											"end": 4570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 4581,
											"end": 4618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4602,
											"end": 4618,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4602,
											"end": 4618,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4602,
											"end": 4618,
											"name": "PUSH",
											"source": 8,
											"value": "90B8EC1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4602,
											"end": 4618,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4602,
											"end": 4618,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4602,
											"end": 4618,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4602,
											"end": 4618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4602,
											"end": 4618,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4602,
											"end": 4618,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4602,
											"end": 4618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4602,
											"end": 4618,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4602,
											"end": 4618,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4602,
											"end": 4618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4602,
											"end": 4618,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4618,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 4581,
											"end": 4618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4643,
											"end": 4653,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "PUSH",
											"source": 8,
											"value": "23FF0E75EDF108E3D0392D92E13E8C8A868EF19001BD49F9E94876DC46DFF87F"
										},
										{
											"begin": 4655,
											"end": 4661,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4669,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 4636,
											"end": 4670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 4072,
											"end": 4678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4072,
											"end": 4678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4072,
											"end": 4678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4072,
											"end": 4678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1000,
											"end": 1001,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 950,
											"end": 1001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 625,
											"end": 651,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 625,
											"end": 651,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 625,
											"end": 651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 875,
											"end": 877,
											"name": "PUSH",
											"source": 8,
											"value": "3C"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 825,
											"end": 877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 658,
											"end": 687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 658,
											"end": 687,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 658,
											"end": 687,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 658,
											"end": 687,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 658,
											"end": 687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 558,
											"end": 580,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 558,
											"end": 580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 558,
											"end": 580,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 587,
											"end": 618,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 587,
											"end": 618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 587,
											"end": 618,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 587,
											"end": 618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 3345,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 884,
											"end": 943,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 934,
											"end": 943,
											"name": "PUSH",
											"source": 8,
											"value": "16345785D8A0000"
										},
										{
											"begin": 884,
											"end": 943,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 884,
											"end": 943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 492,
											"end": 516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 492,
											"end": 516,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 492,
											"end": 516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5576,
											"end": 5583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5603,
											"end": 5614,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5623,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 5495,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 4686,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4795,
											"end": 4816,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4819,
											"end": 4835,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 4819,
											"end": 4846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4836,
											"end": 4845,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4819,
											"end": 4846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4819,
											"end": 4846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4819,
											"end": 4846,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4819,
											"end": 4846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4819,
											"end": 4846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4819,
											"end": 4846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4819,
											"end": 4846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4819,
											"end": 4846,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4819,
											"end": 4846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4819,
											"end": 4846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4819,
											"end": 4846,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4819,
											"end": 4846,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4795,
											"end": 4846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4795,
											"end": 4846,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 4864,
											"end": 4891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4890,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4891,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4891,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4891,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4864,
											"end": 4891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4891,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4891,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4891,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4891,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4864,
											"end": 4891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4891,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4891,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4891,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4913,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4916,
											"end": 4927,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 4916,
											"end": 4942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4928,
											"end": 4941,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4942,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4942,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4916,
											"end": 4942,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4942,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4942,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4916,
											"end": 4942,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4916,
											"end": 4942,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4942,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4961,
											"end": 4962,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4957,
											"end": 4958,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4962,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4953,
											"end": 5488,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4953,
											"end": 5488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 4953,
											"end": 5488,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4979,
											"end": 4990,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5010,
											"end": 5011,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5004,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5004,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5006,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 5007,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5007,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5007,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 4993,
											"end": 5007,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 4993,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4993,
											"end": 5007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5007,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 4993,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5007,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 4993,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5007,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5007,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5007,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5007,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5007,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5007,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 4993,
											"end": 5011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4979,
											"end": 5011,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4979,
											"end": 5011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5050,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 5043,
											"end": 5065,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5064,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5065,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5065,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5065,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5043,
											"end": 5065,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5065,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5065,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5065,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5043,
											"end": 5065,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5065,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5065,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5066,
											"end": 5069,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5043,
											"end": 5070,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5101,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5118,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5119,
											"end": 5132,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5133,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5163,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5152,
											"end": 5163,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5148,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 5148,
											"end": 5187,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5187,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5174,
											"end": 5187,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5148,
											"end": 5187,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 5148,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5233,
											"end": 5242,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 5233,
											"end": 5242,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5224,
											"end": 5230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5208,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 5208,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 5208,
											"end": 5221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5208,
											"end": 5221,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 5208,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5208,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 5208,
											"end": 5230,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5208,
											"end": 5230,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5208,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 5208,
											"end": 5230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5208,
											"end": 5230,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 5208,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5208,
											"end": 5242,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5204,
											"end": 5313,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5204,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 5204,
											"end": 5313,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5284,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 5284,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 5284,
											"end": 5297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5284,
											"end": 5297,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 5284,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5272,
											"end": 5281,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 5272,
											"end": 5281,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 5272,
											"end": 5297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5263,
											"end": 5297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5263,
											"end": 5297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5204,
											"end": 5313,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 5204,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5341,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5331,
											"end": 5337,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5331,
											"end": 5341,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5327,
											"end": 5477,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5327,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 5327,
											"end": 5477,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5362,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5362,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 5362,
											"end": 5383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5362,
											"end": 5383,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 5362,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5446,
											"end": 5452,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5407,
											"end": 5461,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5407,
											"end": 5461,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5431,
											"end": 5444,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5429,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5407,
											"end": 5461,
											"name": "PUSH",
											"source": 8,
											"value": "DD7933A060407298571FE36223F480EE3508053FDB7238A1FE246F52B62C8E73"
										},
										{
											"begin": 5454,
											"end": 5460,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5407,
											"end": 5461,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5407,
											"end": 5461,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5407,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 5407,
											"end": 5461,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5407,
											"end": 5461,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5407,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 5407,
											"end": 5461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5407,
											"end": 5461,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 5407,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5407,
											"end": 5461,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5407,
											"end": 5461,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5407,
											"end": 5461,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5407,
											"end": 5461,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5407,
											"end": 5461,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5407,
											"end": 5461,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5407,
											"end": 5461,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 5327,
											"end": 5477,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 5327,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4964,
											"end": 5488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4964,
											"end": 5488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4964,
											"end": 5488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4953,
											"end": 5488,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 4953,
											"end": 5488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4784,
											"end": 5495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4784,
											"end": 5495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4686,
											"end": 5495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4686,
											"end": 5495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4686,
											"end": 5495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4686,
											"end": 5495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7977,
											"end": 7978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 8002,
											"end": 8032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8077,
											"end": 8078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8086,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 8052,
											"end": 8087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7451,
											"end": 7452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 7476,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 7544,
											"end": 7545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7555,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7557,
											"end": 7562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 7528,
											"end": 7563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1319,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1242,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1286,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1313,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1297,
											"end": 1313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1297,
											"end": 1313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1319,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1319,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1443,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 1325,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 1430,
											"end": 1435,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1412,
											"end": 1436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1407,
											"end": 1410,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1400,
											"end": 1437,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1671,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1449,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1546,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1582,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1569,
											"end": 1578,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1565,
											"end": 1583,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1557,
											"end": 1583,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1557,
											"end": 1583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1593,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 1661,
											"end": 1662,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1659,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1646,
											"end": 1663,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1593,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 1593,
											"end": 1664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1593,
											"end": 1664,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 1593,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1671,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1671,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1869,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1881,
											"end": 1998,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 1881,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2123,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2074,
											"end": 2079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2124,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 2220,
											"end": 2225,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 2202,
											"end": 2226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2226,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2226,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 2311,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2309,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2301,
											"end": 2336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2350,
											"end": 2351,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2348,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2352,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2412,
											"end": 2417,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2437,
											"end": 2457,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 2493,
											"end": 2498,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 2466,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 2584,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2574,
											"end": 2609,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2624,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2511,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 2739,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 2915,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3096,
											"end": 3102,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 3060,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3222,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3209,
											"end": 3231,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 3188,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2784,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3305,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 3456,
											"end": 3461,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 3441,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3436,
											"end": 3439,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3463,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3360,
											"end": 3469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3566,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3598,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3585,
											"end": 3603,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 3613,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3475,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 3808,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 3691,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3800,
											"end": 3801,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3798,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3790,
											"end": 3802,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3814,
											"end": 3931,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 3814,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3937,
											"end": 4054,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 3937,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4046,
											"end": 4047,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4044,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4048,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4645,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 4077,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4150,
											"end": 4158,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4166,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4210,
											"end": 4213,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4203,
											"end": 4207,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4191,
											"end": 4208,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4214,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4177,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 4177,
											"end": 4299,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4218,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 4218,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 4218,
											"end": 4297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4218,
											"end": 4297,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 4218,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4177,
											"end": 4299,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 4177,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4331,
											"end": 4337,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4318,
											"end": 4338,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4353,
											"end": 4359,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4350,
											"end": 4380,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4464,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 4347,
											"end": 4464,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 4383,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 4383,
											"end": 4462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4462,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 4383,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4464,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 4347,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4497,
											"end": 4501,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4489,
											"end": 4495,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 4502,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4473,
											"end": 4502,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4473,
											"end": 4502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4551,
											"end": 4554,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4543,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4535,
											"end": 4541,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4531,
											"end": 4548,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4529,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4517,
											"end": 4549,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4555,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4639,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 4511,
											"end": 4639,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4558,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 4558,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 4558,
											"end": 4637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4558,
											"end": 4637,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 4558,
											"end": 4637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4639,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 4511,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4645,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4645,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4645,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 5355,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4651,
											"end": 5355,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4752,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4754,
											"end": 4760,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4768,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4811,
											"end": 4813,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4799,
											"end": 4808,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4797,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4809,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4782,
											"end": 4814,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4779,
											"end": 4898,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4779,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 4779,
											"end": 4898,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 4817,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 4817,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4896,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 4817,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4779,
											"end": 4898,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 4779,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 4938,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4962,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 5007,
											"end": 5014,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5004,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4987,
											"end": 4996,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4962,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 4962,
											"end": 5015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4962,
											"end": 5015,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 4962,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 5015,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 5015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4908,
											"end": 5025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5092,
											"end": 5094,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5081,
											"end": 5090,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5064,
											"end": 5096,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5123,
											"end": 5141,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5142,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5109,
											"end": 5226,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5109,
											"end": 5226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 5109,
											"end": 5226,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5145,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 5145,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 5145,
											"end": 5224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5145,
											"end": 5224,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 5145,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5109,
											"end": 5226,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 5109,
											"end": 5226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5258,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 5330,
											"end": 5337,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5321,
											"end": 5327,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5310,
											"end": 5319,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5306,
											"end": 5328,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5258,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 5258,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5258,
											"end": 5338,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 5258,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5240,
											"end": 5338,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5240,
											"end": 5338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5240,
											"end": 5338,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5240,
											"end": 5338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5035,
											"end": 5348,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 5355,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 5355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 5355,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 5355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 5355,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 5355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5980,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 5361,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5438,
											"end": 5444,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5446,
											"end": 5452,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5454,
											"end": 5460,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5503,
											"end": 5505,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5491,
											"end": 5500,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5489,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5501,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5474,
											"end": 5506,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5590,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 5471,
											"end": 5590,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5509,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 5509,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 5509,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5509,
											"end": 5588,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 5509,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5590,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 5471,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5629,
											"end": 5630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5654,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 5699,
											"end": 5706,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5690,
											"end": 5696,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5679,
											"end": 5688,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5654,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 5654,
											"end": 5707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5654,
											"end": 5707,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 5654,
											"end": 5707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5644,
											"end": 5707,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5644,
											"end": 5707,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5717,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5756,
											"end": 5758,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5782,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 5827,
											"end": 5834,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5818,
											"end": 5824,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5807,
											"end": 5816,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5803,
											"end": 5825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 5782,
											"end": 5835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5835,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 5782,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5772,
											"end": 5835,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5772,
											"end": 5835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5727,
											"end": 5845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5884,
											"end": 5886,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5910,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 5955,
											"end": 5962,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5946,
											"end": 5952,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5935,
											"end": 5944,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5953,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5910,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 5910,
											"end": 5963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5910,
											"end": 5963,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 5910,
											"end": 5963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5855,
											"end": 5973,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5980,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5980,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5980,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5986,
											"end": 6315,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 5986,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6045,
											"end": 6051,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6096,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6082,
											"end": 6091,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6073,
											"end": 6080,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6069,
											"end": 6092,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6065,
											"end": 6097,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6181,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 6062,
											"end": 6181,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6100,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 6100,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 6100,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6100,
											"end": 6179,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 6100,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6181,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 6062,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6220,
											"end": 6221,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6245,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 6290,
											"end": 6297,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6287,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6270,
											"end": 6279,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6266,
											"end": 6288,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6245,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 6245,
											"end": 6298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6245,
											"end": 6298,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 6245,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6235,
											"end": 6298,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6235,
											"end": 6298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6191,
											"end": 6308,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5986,
											"end": 6315,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5986,
											"end": 6315,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5986,
											"end": 6315,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5986,
											"end": 6315,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5986,
											"end": 6315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6321,
											"end": 6407,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 6321,
											"end": 6407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6356,
											"end": 6363,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6396,
											"end": 6400,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6389,
											"end": 6394,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6385,
											"end": 6401,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6374,
											"end": 6401,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6374,
											"end": 6401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6321,
											"end": 6407,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6321,
											"end": 6407,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6321,
											"end": 6407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6321,
											"end": 6407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6413,
											"end": 6525,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 6413,
											"end": 6525,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6496,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6496,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 6496,
											"end": 6518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6496,
											"end": 6518,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 6496,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6491,
											"end": 6494,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6484,
											"end": 6519,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6413,
											"end": 6525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6413,
											"end": 6525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6413,
											"end": 6525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6745,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 6531,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6620,
											"end": 6624,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6658,
											"end": 6660,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6647,
											"end": 6656,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6643,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6635,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6635,
											"end": 6661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6671,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 6735,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6724,
											"end": 6733,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 6737,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6711,
											"end": 6717,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6671,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 6671,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6671,
											"end": 6738,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 6671,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6745,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6745,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6751,
											"end": 6844,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 6751,
											"end": 6844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6794,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6827,
											"end": 6837,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6820,
											"end": 6825,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6816,
											"end": 6838,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6805,
											"end": 6838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6805,
											"end": 6838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6751,
											"end": 6844,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6751,
											"end": 6844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6751,
											"end": 6844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6751,
											"end": 6844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6850,
											"end": 6965,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 6850,
											"end": 6965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 6952,
											"end": 6957,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 6935,
											"end": 6958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 6958,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 6935,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 6933,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6923,
											"end": 6959,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6850,
											"end": 6965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6850,
											"end": 6965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6850,
											"end": 6965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6971,
											"end": 7189,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 6971,
											"end": 7189,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7062,
											"end": 7066,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7100,
											"end": 7102,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7089,
											"end": 7098,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7077,
											"end": 7103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7077,
											"end": 7103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7113,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 7179,
											"end": 7180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7168,
											"end": 7177,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7164,
											"end": 7181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7155,
											"end": 7161,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7113,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 7113,
											"end": 7182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7113,
											"end": 7182,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 7113,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6971,
											"end": 7189,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6971,
											"end": 7189,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6971,
											"end": 7189,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6971,
											"end": 7189,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6971,
											"end": 7189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7195,
											"end": 7313,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 7195,
											"end": 7313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 7300,
											"end": 7305,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 7282,
											"end": 7306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7282,
											"end": 7306,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 7282,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7277,
											"end": 7280,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7270,
											"end": 7307,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7195,
											"end": 7313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7195,
											"end": 7313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7195,
											"end": 7313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7541,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 7319,
											"end": 7541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7412,
											"end": 7416,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7450,
											"end": 7452,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7439,
											"end": 7448,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7435,
											"end": 7453,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7427,
											"end": 7453,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7427,
											"end": 7453,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7463,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 7531,
											"end": 7532,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7520,
											"end": 7529,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7516,
											"end": 7533,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7513,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7463,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 7463,
											"end": 7534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7463,
											"end": 7534,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 7463,
											"end": 7534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7541,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7541,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7547,
											"end": 7876,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 7547,
											"end": 7876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7606,
											"end": 7612,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7655,
											"end": 7657,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7643,
											"end": 7652,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7634,
											"end": 7641,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7630,
											"end": 7653,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7626,
											"end": 7658,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7623,
											"end": 7742,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7623,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 7623,
											"end": 7742,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7661,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 7661,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 7661,
											"end": 7740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7661,
											"end": 7740,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 7661,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7623,
											"end": 7742,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 7623,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7781,
											"end": 7782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7806,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 7851,
											"end": 7858,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7842,
											"end": 7848,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7840,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7827,
											"end": 7849,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7806,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 7806,
											"end": 7859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7806,
											"end": 7859,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 7806,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7796,
											"end": 7859,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7796,
											"end": 7859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7752,
											"end": 7869,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7547,
											"end": 7876,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7547,
											"end": 7876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7547,
											"end": 7876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7547,
											"end": 7876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7547,
											"end": 7876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 8356,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 7882,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7950,
											"end": 7956,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8007,
											"end": 8009,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7995,
											"end": 8004,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7986,
											"end": 7993,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7982,
											"end": 8005,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7978,
											"end": 8010,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8094,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 7975,
											"end": 8094,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8013,
											"end": 8092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 8013,
											"end": 8092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 8013,
											"end": 8092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8013,
											"end": 8092,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 8013,
											"end": 8092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8094,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 7975,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8133,
											"end": 8134,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 8203,
											"end": 8210,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8194,
											"end": 8200,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8183,
											"end": 8192,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8179,
											"end": 8201,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8158,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 8158,
											"end": 8211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8158,
											"end": 8211,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 8158,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8211,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8104,
											"end": 8221,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8262,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8286,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 8331,
											"end": 8338,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8322,
											"end": 8328,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8311,
											"end": 8320,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8307,
											"end": 8329,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8286,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 8286,
											"end": 8339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8286,
											"end": 8339,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 8286,
											"end": 8339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8339,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8231,
											"end": 8349,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 8356,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 8356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 8356,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 8356,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 8356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 8356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8362,
											"end": 8836,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 8362,
											"end": 8836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8436,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8438,
											"end": 8444,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8487,
											"end": 8489,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8475,
											"end": 8484,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8473,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8462,
											"end": 8485,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8458,
											"end": 8490,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8455,
											"end": 8574,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8455,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 8455,
											"end": 8574,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8493,
											"end": 8572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 8493,
											"end": 8572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 8493,
											"end": 8572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8493,
											"end": 8572,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 8493,
											"end": 8572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8455,
											"end": 8574,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 8455,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8638,
											"end": 8691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 8683,
											"end": 8690,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8674,
											"end": 8680,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8663,
											"end": 8672,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8659,
											"end": 8681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8638,
											"end": 8691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 8638,
											"end": 8691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8638,
											"end": 8691,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 8638,
											"end": 8691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8628,
											"end": 8691,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8628,
											"end": 8691,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8584,
											"end": 8701,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8740,
											"end": 8742,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8766,
											"end": 8819,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8802,
											"end": 8808,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8791,
											"end": 8800,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8787,
											"end": 8809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8766,
											"end": 8819,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 8766,
											"end": 8819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8766,
											"end": 8819,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 8766,
											"end": 8819,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8756,
											"end": 8819,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8756,
											"end": 8819,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8829,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8362,
											"end": 8836,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8362,
											"end": 8836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8362,
											"end": 8836,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8362,
											"end": 8836,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8362,
											"end": 8836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8362,
											"end": 8836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8842,
											"end": 9022,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 8842,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8890,
											"end": 8967,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8887,
											"end": 8888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8880,
											"end": 8968,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8987,
											"end": 8991,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 8984,
											"end": 8985,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8977,
											"end": 8992,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9008,
											"end": 9009,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9001,
											"end": 9016,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9028,
											"end": 9348,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 9028,
											"end": 9348,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9072,
											"end": 9078,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9109,
											"end": 9110,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9103,
											"end": 9107,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9111,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9089,
											"end": 9111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9156,
											"end": 9157,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9150,
											"end": 9154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9146,
											"end": 9158,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9177,
											"end": 9195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9167,
											"end": 9248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 9167,
											"end": 9248,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9233,
											"end": 9237,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 9225,
											"end": 9231,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9221,
											"end": 9238,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9211,
											"end": 9238,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9211,
											"end": 9238,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9167,
											"end": 9248,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 9167,
											"end": 9248,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9295,
											"end": 9297,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9287,
											"end": 9293,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9284,
											"end": 9298,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9264,
											"end": 9282,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9299,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9258,
											"end": 9342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 9258,
											"end": 9342,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9314,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 9314,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 9314,
											"end": 9332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9314,
											"end": 9332,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 9314,
											"end": 9332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9258,
											"end": 9342,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 9258,
											"end": 9342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9079,
											"end": 9348,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9028,
											"end": 9348,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9028,
											"end": 9348,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9028,
											"end": 9348,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9028,
											"end": 9348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9354,
											"end": 9534,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 9354,
											"end": 9534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9402,
											"end": 9479,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9399,
											"end": 9400,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9392,
											"end": 9480,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9499,
											"end": 9503,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 9496,
											"end": 9497,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9489,
											"end": 9504,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9523,
											"end": 9527,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9520,
											"end": 9521,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9513,
											"end": 9528,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9540,
											"end": 9731,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 9540,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9580,
											"end": 9583,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9599,
											"end": 9619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 9617,
											"end": 9618,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9599,
											"end": 9619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 9599,
											"end": 9619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9599,
											"end": 9619,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 9599,
											"end": 9619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9594,
											"end": 9619,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9594,
											"end": 9619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9633,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 9651,
											"end": 9652,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9633,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 9633,
											"end": 9653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9633,
											"end": 9653,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 9633,
											"end": 9653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9628,
											"end": 9653,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9628,
											"end": 9653,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9676,
											"end": 9677,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9673,
											"end": 9674,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9669,
											"end": 9678,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9662,
											"end": 9678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9662,
											"end": 9678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9697,
											"end": 9700,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9694,
											"end": 9695,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9691,
											"end": 9701,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9688,
											"end": 9724,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9688,
											"end": 9724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 9688,
											"end": 9724,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9704,
											"end": 9722,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 9704,
											"end": 9722,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 9704,
											"end": 9722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9704,
											"end": 9722,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 9704,
											"end": 9722,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9688,
											"end": 9724,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 9688,
											"end": 9724,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9540,
											"end": 9731,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9540,
											"end": 9731,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9540,
											"end": 9731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9540,
											"end": 9731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9540,
											"end": 9731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9737,
											"end": 9797,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 9737,
											"end": 9797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9765,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9786,
											"end": 9791,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9779,
											"end": 9791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9779,
											"end": 9791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9737,
											"end": 9797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9737,
											"end": 9797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9737,
											"end": 9797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9737,
											"end": 9797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9803,
											"end": 9943,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 9803,
											"end": 9943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9852,
											"end": 9861,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9885,
											"end": 9937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 9903,
											"end": 9936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 9912,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 9929,
											"end": 9934,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9912,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 9912,
											"end": 9935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9912,
											"end": 9935,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 9912,
											"end": 9935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9903,
											"end": 9936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 9903,
											"end": 9936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9903,
											"end": 9936,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 9903,
											"end": 9936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9885,
											"end": 9937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 9885,
											"end": 9937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9885,
											"end": 9937,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 9885,
											"end": 9937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9872,
											"end": 9937,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9872,
											"end": 9937,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9803,
											"end": 9943,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9803,
											"end": 9943,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9803,
											"end": 9943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9803,
											"end": 9943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9949,
											"end": 10078,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 9949,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 10065,
											"end": 10070,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 10035,
											"end": 10071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10071,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 10035,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10030,
											"end": 10033,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10023,
											"end": 10072,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9949,
											"end": 10078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9949,
											"end": 10078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9949,
											"end": 10078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10084,
											"end": 10304,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 10084,
											"end": 10304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10176,
											"end": 10180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10214,
											"end": 10216,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10203,
											"end": 10212,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10217,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10191,
											"end": 10217,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10191,
											"end": 10217,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10227,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 10294,
											"end": 10295,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10283,
											"end": 10292,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10279,
											"end": 10296,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10227,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 10227,
											"end": 10297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10227,
											"end": 10297,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 10227,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10084,
											"end": 10304,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10084,
											"end": 10304,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10084,
											"end": 10304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10084,
											"end": 10304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10084,
											"end": 10304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10310,
											"end": 10453,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 10310,
											"end": 10453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10367,
											"end": 10372,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10398,
											"end": 10404,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10392,
											"end": 10405,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10383,
											"end": 10405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10383,
											"end": 10405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10414,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 10441,
											"end": 10446,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10414,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 10414,
											"end": 10447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10414,
											"end": 10447,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 10414,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10310,
											"end": 10453,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10310,
											"end": 10453,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10310,
											"end": 10453,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10310,
											"end": 10453,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10310,
											"end": 10453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10459,
											"end": 10810,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 10459,
											"end": 10810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10529,
											"end": 10535,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10578,
											"end": 10580,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10566,
											"end": 10575,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10557,
											"end": 10564,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10553,
											"end": 10576,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10549,
											"end": 10581,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 10546,
											"end": 10665,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10546,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 10546,
											"end": 10665,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10584,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 10584,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 10584,
											"end": 10663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10584,
											"end": 10663,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 10584,
											"end": 10663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10546,
											"end": 10665,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 10546,
											"end": 10665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10704,
											"end": 10705,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10729,
											"end": 10793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 10785,
											"end": 10792,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10776,
											"end": 10782,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10765,
											"end": 10774,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10729,
											"end": 10793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 10729,
											"end": 10793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10729,
											"end": 10793,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 10729,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10719,
											"end": 10793,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10719,
											"end": 10793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10675,
											"end": 10803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10459,
											"end": 10810,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10459,
											"end": 10810,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10459,
											"end": 10810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10459,
											"end": 10810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10459,
											"end": 10810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10816,
											"end": 10901,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 10816,
											"end": 10901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10861,
											"end": 10868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10890,
											"end": 10895,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10879,
											"end": 10895,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10879,
											"end": 10895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10816,
											"end": 10901,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10816,
											"end": 10901,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10816,
											"end": 10901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10816,
											"end": 10901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10907,
											"end": 11065,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 10907,
											"end": 11065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10965,
											"end": 10974,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10998,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 11016,
											"end": 11058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 11025,
											"end": 11057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 11051,
											"end": 11056,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11025,
											"end": 11057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 11025,
											"end": 11057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11025,
											"end": 11057,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 11025,
											"end": 11057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11016,
											"end": 11058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 11016,
											"end": 11058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11016,
											"end": 11058,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 11016,
											"end": 11058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 10998,
											"end": 11059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11059,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 10998,
											"end": 11059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10985,
											"end": 11059,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10985,
											"end": 11059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10907,
											"end": 11065,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10907,
											"end": 11065,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10907,
											"end": 11065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10907,
											"end": 11065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11071,
											"end": 11218,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 11071,
											"end": 11218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11166,
											"end": 11211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 11205,
											"end": 11210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11166,
											"end": 11211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 11166,
											"end": 11211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11166,
											"end": 11211,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 11166,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11161,
											"end": 11164,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11154,
											"end": 11212,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11071,
											"end": 11218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11071,
											"end": 11218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11071,
											"end": 11218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11224,
											"end": 11680,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 11224,
											"end": 11680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11380,
											"end": 11384,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11418,
											"end": 11420,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11407,
											"end": 11416,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11403,
											"end": 11421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11395,
											"end": 11421,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11395,
											"end": 11421,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11431,
											"end": 11501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 11498,
											"end": 11499,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11487,
											"end": 11496,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11483,
											"end": 11500,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11474,
											"end": 11480,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11431,
											"end": 11501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 11431,
											"end": 11501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11431,
											"end": 11501,
											"name": "tag",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 11431,
											"end": 11501,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11511,
											"end": 11591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 11587,
											"end": 11589,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11576,
											"end": 11585,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11572,
											"end": 11590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11563,
											"end": 11569,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11511,
											"end": 11591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 11511,
											"end": 11591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11511,
											"end": 11591,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 11511,
											"end": 11591,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11601,
											"end": 11673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 11669,
											"end": 11671,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11658,
											"end": 11667,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11654,
											"end": 11672,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11651,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11601,
											"end": 11673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 11601,
											"end": 11673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11601,
											"end": 11673,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 11601,
											"end": 11673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11224,
											"end": 11680,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 11224,
											"end": 11680,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11224,
											"end": 11680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11224,
											"end": 11680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11224,
											"end": 11680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11224,
											"end": 11680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11224,
											"end": 11680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11686,
											"end": 12018,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 11686,
											"end": 12018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11807,
											"end": 11811,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11845,
											"end": 11847,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11834,
											"end": 11843,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11830,
											"end": 11848,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11822,
											"end": 11848,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11822,
											"end": 11848,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11858,
											"end": 11929,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 11926,
											"end": 11927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11915,
											"end": 11924,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11911,
											"end": 11928,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11902,
											"end": 11908,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11858,
											"end": 11929,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 11858,
											"end": 11929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11858,
											"end": 11929,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 11858,
											"end": 11929,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11939,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 12007,
											"end": 12009,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11996,
											"end": 12005,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11992,
											"end": 12010,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11983,
											"end": 11989,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11939,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 11939,
											"end": 12011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11939,
											"end": 12011,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 11939,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11686,
											"end": 12018,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11686,
											"end": 12018,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11686,
											"end": 12018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11686,
											"end": 12018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11686,
											"end": 12018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11686,
											"end": 12018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12024,
											"end": 12204,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 12024,
											"end": 12204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12072,
											"end": 12149,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12069,
											"end": 12070,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12062,
											"end": 12150,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12169,
											"end": 12173,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 12166,
											"end": 12167,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12159,
											"end": 12174,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12193,
											"end": 12197,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12190,
											"end": 12191,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12183,
											"end": 12198,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12210,
											"end": 12395,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 12210,
											"end": 12395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12250,
											"end": 12251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 12285,
											"end": 12286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12267,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 12267,
											"end": 12287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12267,
											"end": 12287,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 12267,
											"end": 12287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12262,
											"end": 12287,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12262,
											"end": 12287,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12301,
											"end": 12321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 12319,
											"end": 12320,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12301,
											"end": 12321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 12301,
											"end": 12321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12301,
											"end": 12321,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 12301,
											"end": 12321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12296,
											"end": 12321,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12296,
											"end": 12321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12340,
											"end": 12341,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12330,
											"end": 12365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 12330,
											"end": 12365,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12345,
											"end": 12363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 12345,
											"end": 12363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 12345,
											"end": 12363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12345,
											"end": 12363,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 12345,
											"end": 12363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12330,
											"end": 12365,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 12330,
											"end": 12365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12387,
											"end": 12388,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12384,
											"end": 12385,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12380,
											"end": 12389,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12375,
											"end": 12389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12375,
											"end": 12389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12210,
											"end": 12395,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12210,
											"end": 12395,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12210,
											"end": 12395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12210,
											"end": 12395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12210,
											"end": 12395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12401,
											"end": 12811,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 12401,
											"end": 12811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12441,
											"end": 12448,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12464,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 12482,
											"end": 12483,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12464,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 12464,
											"end": 12484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12464,
											"end": 12484,
											"name": "tag",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 12464,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12459,
											"end": 12484,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12459,
											"end": 12484,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12498,
											"end": 12518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 12516,
											"end": 12517,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12498,
											"end": 12518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 12498,
											"end": 12518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12498,
											"end": 12518,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 12498,
											"end": 12518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12493,
											"end": 12518,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12493,
											"end": 12518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12553,
											"end": 12554,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12550,
											"end": 12551,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12546,
											"end": 12555,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12575,
											"end": 12605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 12593,
											"end": 12604,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12575,
											"end": 12605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 12575,
											"end": 12605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12575,
											"end": 12605,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 12575,
											"end": 12605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12564,
											"end": 12605,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12564,
											"end": 12605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12754,
											"end": 12755,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12745,
											"end": 12752,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12741,
											"end": 12756,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12738,
											"end": 12739,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12735,
											"end": 12757,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12715,
											"end": 12716,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12708,
											"end": 12717,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12688,
											"end": 12771,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 12665,
											"end": 12804,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 12784,
											"end": 12802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "tag",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12804,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 12665,
											"end": 12804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12449,
											"end": 12811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12401,
											"end": 12811,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12401,
											"end": 12811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12401,
											"end": 12811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12401,
											"end": 12811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12401,
											"end": 12811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12964,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 12817,
											"end": 12964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12918,
											"end": 12929,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12955,
											"end": 12958,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12940,
											"end": 12958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12940,
											"end": 12958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12964,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12964,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12970,
											"end": 13084,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 12970,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12970,
											"end": 13084,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12970,
											"end": 13084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13090,
											"end": 13488,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 13090,
											"end": 13488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13249,
											"end": 13252,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13270,
											"end": 13353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 13351,
											"end": 13352,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13346,
											"end": 13349,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13270,
											"end": 13353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 13270,
											"end": 13353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13270,
											"end": 13353,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 13270,
											"end": 13353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13263,
											"end": 13353,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13263,
											"end": 13353,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13362,
											"end": 13455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 13451,
											"end": 13454,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13362,
											"end": 13455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 13362,
											"end": 13455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13362,
											"end": 13455,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 13362,
											"end": 13455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13480,
											"end": 13481,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13475,
											"end": 13478,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13471,
											"end": 13482,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13464,
											"end": 13482,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13464,
											"end": 13482,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13090,
											"end": 13488,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13090,
											"end": 13488,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13090,
											"end": 13488,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13090,
											"end": 13488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13494,
											"end": 13873,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 13494,
											"end": 13873,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13678,
											"end": 13681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13700,
											"end": 13847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 13843,
											"end": 13846,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13700,
											"end": 13847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 13700,
											"end": 13847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13700,
											"end": 13847,
											"name": "tag",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 13700,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13693,
											"end": 13847,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13693,
											"end": 13847,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13864,
											"end": 13867,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13867,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13867,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13494,
											"end": 13873,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13494,
											"end": 13873,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13494,
											"end": 13873,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13494,
											"end": 13873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13879,
											"end": 14073,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 13879,
											"end": 14073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13919,
											"end": 13923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13939,
											"end": 13959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 13957,
											"end": 13958,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13939,
											"end": 13959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 13939,
											"end": 13959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13939,
											"end": 13959,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 13939,
											"end": 13959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13934,
											"end": 13959,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13934,
											"end": 13959,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13973,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 13991,
											"end": 13992,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13973,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 13973,
											"end": 13993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13973,
											"end": 13993,
											"name": "tag",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 13973,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13968,
											"end": 13993,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13968,
											"end": 13993,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14017,
											"end": 14018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14014,
											"end": 14015,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14010,
											"end": 14019,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14002,
											"end": 14019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14002,
											"end": 14019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14041,
											"end": 14042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14035,
											"end": 14039,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14032,
											"end": 14043,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 14029,
											"end": 14066,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14029,
											"end": 14066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 14029,
											"end": 14066,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14046,
											"end": 14064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 14046,
											"end": 14064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 14046,
											"end": 14064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14046,
											"end": 14064,
											"name": "tag",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 14046,
											"end": 14064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14029,
											"end": 14066,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 14029,
											"end": 14066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13879,
											"end": 14073,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13879,
											"end": 14073,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13879,
											"end": 14073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13879,
											"end": 14073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13879,
											"end": 14073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14079,
											"end": 14411,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 14079,
											"end": 14411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14200,
											"end": 14204,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14238,
											"end": 14240,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14227,
											"end": 14236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14223,
											"end": 14241,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14215,
											"end": 14241,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14215,
											"end": 14241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14251,
											"end": 14322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 14319,
											"end": 14320,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14308,
											"end": 14317,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14304,
											"end": 14321,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14295,
											"end": 14301,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14251,
											"end": 14322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 14251,
											"end": 14322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14251,
											"end": 14322,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 14251,
											"end": 14322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14332,
											"end": 14404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 14400,
											"end": 14402,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14389,
											"end": 14398,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14385,
											"end": 14403,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14376,
											"end": 14382,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14332,
											"end": 14404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 14332,
											"end": 14404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14332,
											"end": 14404,
											"name": "tag",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 14332,
											"end": 14404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14079,
											"end": 14411,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14079,
											"end": 14411,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14079,
											"end": 14411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14079,
											"end": 14411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14079,
											"end": 14411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14079,
											"end": 14411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14417,
											"end": 14597,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 14417,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14465,
											"end": 14542,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14462,
											"end": 14463,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14455,
											"end": 14543,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14562,
											"end": 14566,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 14559,
											"end": 14560,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14552,
											"end": 14567,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14586,
											"end": 14590,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14583,
											"end": 14584,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14603,
											"end": 14779,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 14603,
											"end": 14779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14635,
											"end": 14636,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14652,
											"end": 14672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 14670,
											"end": 14671,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14652,
											"end": 14672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 14652,
											"end": 14672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14652,
											"end": 14672,
											"name": "tag",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 14652,
											"end": 14672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14647,
											"end": 14672,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14647,
											"end": 14672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14686,
											"end": 14706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 14704,
											"end": 14705,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14686,
											"end": 14706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 14686,
											"end": 14706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14686,
											"end": 14706,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 14686,
											"end": 14706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14681,
											"end": 14706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14681,
											"end": 14706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14725,
											"end": 14726,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14715,
											"end": 14750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 14715,
											"end": 14750,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14730,
											"end": 14748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 14730,
											"end": 14748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 14730,
											"end": 14748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14730,
											"end": 14748,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 14730,
											"end": 14748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14715,
											"end": 14750,
											"name": "tag",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 14715,
											"end": 14750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14771,
											"end": 14772,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14768,
											"end": 14769,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14764,
											"end": 14773,
											"name": "MOD",
											"source": 9
										},
										{
											"begin": 14759,
											"end": 14773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14759,
											"end": 14773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14603,
											"end": 14779,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14603,
											"end": 14779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14603,
											"end": 14779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14603,
											"end": 14779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14603,
											"end": 14779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14785,
											"end": 15227,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 14785,
											"end": 15227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14934,
											"end": 14938,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14972,
											"end": 14974,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 14961,
											"end": 14970,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14957,
											"end": 14975,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14949,
											"end": 14975,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14949,
											"end": 14975,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14985,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 15053,
											"end": 15054,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15042,
											"end": 15051,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15038,
											"end": 15055,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15029,
											"end": 15035,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14985,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 14985,
											"end": 15056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14985,
											"end": 15056,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 14985,
											"end": 15056,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15066,
											"end": 15138,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 15134,
											"end": 15136,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15123,
											"end": 15132,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15119,
											"end": 15137,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15110,
											"end": 15116,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15066,
											"end": 15138,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 15066,
											"end": 15138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15066,
											"end": 15138,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 15066,
											"end": 15138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15148,
											"end": 15220,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 15216,
											"end": 15218,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15205,
											"end": 15214,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15201,
											"end": 15219,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15192,
											"end": 15198,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15148,
											"end": 15220,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 15148,
											"end": 15220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15148,
											"end": 15220,
											"name": "tag",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 15148,
											"end": 15220,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14785,
											"end": 15227,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 14785,
											"end": 15227,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14785,
											"end": 15227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14785,
											"end": 15227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14785,
											"end": 15227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14785,
											"end": 15227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14785,
											"end": 15227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol",
								"@paintswap/vrf/contracts/interfaces/IPaintswapVRFConsumer.sol",
								"@paintswap/vrf/contracts/interfaces/IPaintswapVRFCoordinator.sol",
								"contracts/ProofOfClick.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CALLBACK_GAS_LIMIT()": "33d608f1",
							"Click()": "1d6ad8e2",
							"FEE()": "c57981b5",
							"HALVING_INTERVAL_ROUNDS()": "36667e7f",
							"INITIAL_REWARD()": "36bcf7d6",
							"LIQUIDITY_SHARE()": "43270d56",
							"ROUND_DURATION()": "6641ea08",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"currentReward()": "07621eca",
							"decimals()": "313ce567",
							"getPlayersCountInRound(uint256)": "f68c2bfd",
							"lastHalvingRound()": "967372a3",
							"lastRoundTs()": "47fec1a2",
							"liquidityVault()": "708666ad",
							"maxSupply()": "d5abeb01",
							"name()": "06fdde03",
							"nextHalvingRound()": "1d729c5a",
							"playerCount(uint256)": "2566c9ea",
							"players(uint256,uint256)": "998f1b80",
							"rawFulfillRandomWords(uint256,uint256[])": "1fe543e3",
							"roundId()": "8cd221c9",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vaultAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientContractBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NothingToBurn\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyVRFCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RefundFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethOut\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"Clicked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"playersCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RoundRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WinnerMinted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALLBACK_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Click\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HALVING_INTERVAL_ROUNDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIQUIDITY_SHARE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"getPlayersCountInRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastHalvingRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRoundTs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextHalvingRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"playerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roundId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OnlyVRFCoordinator(address,address)\":[{\"details\":\"Error thrown when a function restricted to the VRF coordinator is called by another address\",\"params\":{\"coordinator\":\"The address of the authorized VRF coordinator\",\"sender\":\"The address that attempted to call the function\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"rawFulfillRandomWords(uint256,uint256[])\":{\"details\":\"Callback function called by the VRF coordinator to deliver random wordsSpecial care should be taken when overriding this function. Use `_fulfillRandomWords()` instead.\",\"params\":{\"randomWords\":\"The array of random words for the request\",\"requestId\":\"The ID of the request to which these random words belong\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"rawFulfillRandomWords(uint256,uint256[])\":{\"notice\":\"This function can only be called by the VRF coordinator\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProofOfClick.sol\":\"POC\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol\":{\"keccak256\":\"0xdefecf647e6ea3284c0e41fc72b08559661d1dc4b6a3d9988325cd11173f9139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fad97744d1fc398a844cde07a845e2ccda64e03f58f8d077de99ff7cb98e121\",\"dweb:/ipfs/QmceonZfb4mPY23yq4eTXupNNPdXeMLgAk8hmpdjSrj6LF\"]},\"@paintswap/vrf/contracts/interfaces/IPaintswapVRFConsumer.sol\":{\"keccak256\":\"0x0c266266faa3223f24913ba79232558b0d4a4d415dc9b7f1f4c444767977485c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d9023a63870ed706b12a1c6d6d429511cd4df23f0de482f8abdef0e78d11b99\",\"dweb:/ipfs/QmNoCywrmrX7gCqQgLSmasJ2G3RDX4LYzks2XG7qKkSH7x\"]},\"@paintswap/vrf/contracts/interfaces/IPaintswapVRFCoordinator.sol\":{\"keccak256\":\"0x496c76c11862c9d689e88f982f8e4c592c60b860eb66cc96e767f1148f583681\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86dc962111b535627f179d7120033da364a0d41489ad58b16ce9842df490283d\",\"dweb:/ipfs/QmbxHks3Nd4VUfZp1nPCVjZ4yCEWquu5vB6CfdJMm7jTQx\"]},\"contracts/ProofOfClick.sol\":{\"keccak256\":\"0x6de61a6487239cff33a7d3f85745c7651fc34afd313dfb60105876e69b2ea531\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://038fc27a09f634bf1769e1df90f44baf886f97d60425e92e951160a056c9c29f\",\"dweb:/ipfs/QmbiTLkqwoPZJGwxsVg3eJJYCT4Z9FwLaQs7Aq5W6N6kDi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/ProofOfClick.sol:POC",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/ProofOfClick.sol:POC",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/ProofOfClick.sol:POC",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/ProofOfClick.sol:POC",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/ProofOfClick.sol:POC",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1191,
								"contract": "contracts/ProofOfClick.sol:POC",
								"label": "maxSupply",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1193,
								"contract": "contracts/ProofOfClick.sol:POC",
								"label": "currentReward",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1195,
								"contract": "contracts/ProofOfClick.sol:POC",
								"label": "roundId",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1197,
								"contract": "contracts/ProofOfClick.sol:POC",
								"label": "lastHalvingRound",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1199,
								"contract": "contracts/ProofOfClick.sol:POC",
								"label": "lastRoundTs",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1201,
								"contract": "contracts/ProofOfClick.sol:POC",
								"label": "liquidityVault",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 1227,
								"contract": "contracts/ProofOfClick.sol:POC",
								"label": "players",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_address))"
							},
							{
								"astId": 1231,
								"contract": "contracts/ProofOfClick.sol:POC",
								"label": "playerCount",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1235,
								"contract": "contracts/ProofOfClick.sol:POC",
								"label": "requestToRoundId",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1239,
								"contract": "contracts/ProofOfClick.sol:POC",
								"label": "rewardPerRound",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => address))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_address)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"rawFulfillRandomWords(uint256,uint256[])": {
								"notice": "This function can only be called by the VRF coordinator"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2864:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2881:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2874:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2855:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:1"
									},
									"scope": 651,
									"src": "2803:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3007:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3024:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3034:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3017:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2952:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2998:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:1"
									},
									"scope": 651,
									"src": "2933:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3319:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3329:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3345:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3377:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3384:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3388:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3367:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3404:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3262:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3274:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3313:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:1"
									},
									"scope": 651,
									"src": "3244:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3544:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3561:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3573:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3580:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3554:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3474:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3489:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3535:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:1"
									},
									"scope": 651,
									"src": "3455:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "3981:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3991:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4007:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4038:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4045:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4054:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4070:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3919:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3936:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3975:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:1"
									},
									"scope": 651,
									"src": "3902:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4773:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4783:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4801:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4839:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4845:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4854:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4823:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4880:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4886:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4890:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4870:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4906:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4702:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4716:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4728:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4767:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:1"
									},
									"scope": 651,
									"src": "4680:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5366:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5380:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5376:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5400:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5421:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5414:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5475:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5471:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5493:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5514:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5507:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5574:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5580:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5584:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5566:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5316:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5330:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:1"
									},
									"scope": 651,
									"src": "5297:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "5987:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6001:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6175:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6189:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6211:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6221:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6244:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6258:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6240:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6265:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6315:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6321:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6334:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6290:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6475:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6485:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6493:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6507:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "5997:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6021:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6137:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6153:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6551:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6766:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6925:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "6935:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6942:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6547:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6569:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6714:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6730:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "6996:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7002:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7006:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "6987:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "6982:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5929:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5943:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5955:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:1"
									},
									"scope": 651,
									"src": "5912:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7418:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7432:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7428:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7455:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7476:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7469:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7548:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7557:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7377:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7394:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:1"
									},
									"scope": 651,
									"src": "7362:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "7944:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "7958:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "7954:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "7981:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8002:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "7995:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8060:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8081:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8052:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7920:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:1"
									},
									"scope": 651,
									"src": "7888:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8704:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8723:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8730:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8739:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8714:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8648:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8663:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8680:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:1"
									},
									"scope": 651,
									"src": "8630:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9703:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9717:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9713:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9738:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9759:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9752:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9815:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9811:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9838:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9859:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9852:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9910:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "9922:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "9929:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "9940:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "9959:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "9955:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "9970:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "9998:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10005:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10014:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "9989:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "9984:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9623:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9638:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9655:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9670:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:1"
									},
									"scope": 651,
									"src": "9605:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10408:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10418:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10455:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10462:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10445:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10484:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10480:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10522:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10540:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10559:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10536:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10566:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10618:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10627:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10645:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10591:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10716:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10723:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10732:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10751:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10707:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10344:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10359:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10376:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:1"
									},
									"scope": 651,
									"src": "10319:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9691:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10693:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "215:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "397:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "406:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "428:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "448:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:2"
									},
									"src": "391:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "628:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "637:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "660:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "685:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:2"
									},
									"src": "622:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "822:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:2"
									},
									"scope": 729,
									"src": "776:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "932:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "972:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:2"
									},
									"scope": 729,
									"src": "913:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1223:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1235:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1268:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:2"
									},
									"scope": 729,
									"src": "1205:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1568:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1583:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1623:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:2"
									},
									"scope": 729,
									"src": "1549:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2327:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2344:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2377:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:2"
									},
									"scope": 729,
									"src": "2310:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2713:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2727:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2739:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2772:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:2"
									},
									"scope": 729,
									"src": "2691:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "205:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2675:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@paintswap/vrf/contracts/PaintswapVRFConsumer.sol": {
				"ast": {
					"absolutePath": "@paintswap/vrf/contracts/PaintswapVRFConsumer.sol",
					"exportedSymbols": {
						"IPaintswapVRFConsumer": [
							921
						],
						"IPaintswapVRFCoordinator": [
							1168
						],
						"PaintswapVRFConsumer": [
							909
						]
					},
					"id": 910,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@paintswap/vrf/contracts/interfaces/IPaintswapVRFCoordinator.sol",
							"file": "./interfaces/IPaintswapVRFCoordinator.sol",
							"id": 789,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 910,
							"sourceUnit": 1169,
							"src": "58:83:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 788,
										"name": "IPaintswapVRFCoordinator",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1168,
										"src": "66:24:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@paintswap/vrf/contracts/interfaces/IPaintswapVRFConsumer.sol",
							"file": "./interfaces/IPaintswapVRFConsumer.sol",
							"id": 791,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 910,
							"sourceUnit": 922,
							"src": "142:77:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 790,
										"name": "IPaintswapVRFConsumer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 921,
										"src": "150:21:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 793,
										"name": "IPaintswapVRFConsumer",
										"nameLocations": [
											"514:21:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 921,
										"src": "514:21:5"
									},
									"id": 794,
									"nodeType": "InheritanceSpecifier",
									"src": "514:21:5"
								}
							],
							"canonicalName": "PaintswapVRFConsumer",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 792,
								"nodeType": "StructuredDocumentation",
								"src": "221:250:5",
								"text": " @title PaintswapVRFConsumer\n @dev Abstract contract for consuming randomness from the Paintswap VRF (Verifiable Random Function) service\n @notice Implement this contract to request and receive verifiable randomness from Paintswap's VRF"
							},
							"fullyImplemented": false,
							"id": 909,
							"linearizedBaseContracts": [
								909,
								921
							],
							"name": "PaintswapVRFConsumer",
							"nameLocation": "490:20:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "540:139:5",
										"text": " @dev Reference to the Paintswap VRF coordinator contract\n @notice This is immutable and set during contract construction"
									},
									"id": 798,
									"mutability": "immutable",
									"name": "_vrfCoordinator",
									"nameLocation": "726:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 909,
									"src": "682:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPaintswapVRFCoordinator_$1168",
										"typeString": "contract IPaintswapVRFCoordinator"
									},
									"typeName": {
										"id": 797,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 796,
											"name": "IPaintswapVRFCoordinator",
											"nameLocations": [
												"682:24:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1168,
											"src": "682:24:5"
										},
										"referencedDeclaration": 1168,
										"src": "682:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPaintswapVRFCoordinator_$1168",
											"typeString": "contract IPaintswapVRFCoordinator"
										}
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "746:248:5",
										"text": " @dev Error thrown when a function restricted to the VRF coordinator is called by another address\n @param sender The address that attempted to call the function\n @param coordinator The address of the authorized VRF coordinator"
									},
									"errorSelector": "20138a9f",
									"id": 805,
									"name": "OnlyVRFCoordinator",
									"nameLocation": "1003:18:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1030:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "1022:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "coordinator",
												"nameLocation": "1046:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "1038:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1021:37:5"
									},
									"src": "997:62:5"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "1259:139:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 808,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1269:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1273:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1269:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 812,
																"name": "_vrfCoordinator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "1291:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IPaintswapVRFCoordinator_$1168",
																	"typeString": "contract IPaintswapVRFCoordinator"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IPaintswapVRFCoordinator_$1168",
																	"typeString": "contract IPaintswapVRFCoordinator"
																}
															],
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1283:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 810,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1283:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1283:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1269:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 825,
												"nodeType": "IfStatement",
												"src": "1265:122:5",
												"trueBody": {
													"id": 824,
													"nodeType": "Block",
													"src": "1309:78:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 816,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1343:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1347:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1343:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 820,
																				"name": "_vrfCoordinator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "1363:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IPaintswapVRFCoordinator_$1168",
																					"typeString": "contract IPaintswapVRFCoordinator"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IPaintswapVRFCoordinator_$1168",
																					"typeString": "contract IPaintswapVRFCoordinator"
																				}
																			],
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1355:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 818,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1355:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1355:24:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 815,
																	"name": "OnlyVRFCoordinator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "1324:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,address) pure returns (error)"
																	}
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1324:56:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 823,
															"nodeType": "RevertStatement",
															"src": "1317:63:5"
														}
													]
												}
											},
											{
												"id": 826,
												"nodeType": "PlaceholderStatement",
												"src": "1392:1:5"
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "1063:166:5",
										"text": " @dev Restricts function access to only the VRF coordinator\n @notice Functions with this modifier can only be called by the VRF coordinator contract"
									},
									"id": 828,
									"name": "onlyCoordinator",
									"nameLocation": "1241:15:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1256:2:5"
									},
									"src": "1232:166:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "1604:69:5",
										"statements": [
											{
												"expression": {
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 834,
														"name": "_vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1610:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPaintswapVRFCoordinator_$1168",
															"typeString": "contract IPaintswapVRFCoordinator"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 836,
																"name": "vrfCoordinator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "1653:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 835,
															"name": "IPaintswapVRFCoordinator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "1628:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IPaintswapVRFCoordinator_$1168_$",
																"typeString": "type(contract IPaintswapVRFCoordinator)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1628:40:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPaintswapVRFCoordinator_$1168",
															"typeString": "contract IPaintswapVRFCoordinator"
														}
													},
													"src": "1610:58:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPaintswapVRFCoordinator_$1168",
														"typeString": "contract IPaintswapVRFCoordinator"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "1610:58:5"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "1402:163:5",
										"text": " @dev Initializes the consumer contract with the VRF coordinator address\n @param vrfCoordinator Address of the Paintswap VRF coordinator contract"
									},
									"id": 841,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "vrfCoordinator",
												"nameLocation": "1588:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "1580:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:24:5"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1604:0:5"
									},
									"scope": 909,
									"src": "1568:105:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "2113:99:5",
										"statements": [
											{
												"expression": {
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 849,
														"name": "requestPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "2119:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 852,
																"name": "callbackGasLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "2185:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 850,
																"name": "_vrfCoordinator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "2134:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IPaintswapVRFCoordinator_$1168",
																	"typeString": "contract IPaintswapVRFCoordinator"
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2150:27:5",
															"memberName": "calculateRequestPriceNative",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1111,
															"src": "2134:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view external returns (uint256)"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2134:73:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2119:88:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "2119:88:5"
											}
										]
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "1677:316:5",
										"text": " @dev Calculates the price in native currency for a randomness request\n @param callbackGasLimit Maximum gas allowed for the fulfillment callback\n @return requestPrice The price in native currency for the request\n @notice The price depends on the current gas price and the callback gas limit"
									},
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateRequestPriceNative",
									"nameLocation": "2005:28:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "callbackGasLimit",
												"nameLocation": "2047:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2039:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2033:34:5"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "requestPrice",
												"nameLocation": "2099:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2091:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2091:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:22:5"
									},
									"scope": 909,
									"src": "1996:216:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "2935:157:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 875,
															"name": "callbackGasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "3027:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 876,
															"name": "numWords",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "3053:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 877,
															"name": "refundee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "3071:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 871,
																"name": "_vrfCoordinator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "2954:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IPaintswapVRFCoordinator_$1168",
																	"typeString": "contract IPaintswapVRFCoordinator"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2970:28:5",
															"memberName": "requestRandomnessPayInNative",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1123,
															"src": "2954:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,address) payable external returns (uint256)"
															}
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 873,
																"name": "gasPayment",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "3006:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2954:63:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$value",
															"typeString": "function (uint256,uint256,address) payable external returns (uint256)"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2954:133:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 870,
												"id": 879,
												"nodeType": "Return",
												"src": "2941:146:5"
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "2216:538:5",
										"text": " @dev Requests random words from the VRF coordinator, paying with native currency, specifying a refundee\n @param callbackGasLimit Maximum gas allowed for the fulfillment callback\n @param numWords Number of random words to request\n @param refundee Address to receive any unused gas refund\n @param gasPayment Amount of native currency to pay for the request\n @return requestId Unique identifier for this randomness request\n @notice The contract must have sufficient balance to cover the value parameter"
									},
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requestRandomnessPayInNative",
									"nameLocation": "2766:29:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "callbackGasLimit",
												"nameLocation": "2809:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2801:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2801:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "numWords",
												"nameLocation": "2839:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2831:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "refundee",
												"nameLocation": "2861:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2853:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2853:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "gasPayment",
												"nameLocation": "2883:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2875:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2875:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:102:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "2924:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2916:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2915:19:5"
									},
									"scope": 909,
									"src": "2757:335:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "3096:296:5",
										"text": " @dev Processes the received random words\n @param requestId The ID of the request that corresponds to these random words\n @param randomWords The array of random words received from the VRF coordinator\n @notice This function must be implemented by the inheriting contract"
									},
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_fulfillRandomWords",
									"nameLocation": "3404:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "3437:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "3429:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3429:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "randomWords",
												"nameLocation": "3471:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "3452:30:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 885,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3452:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 886,
													"nodeType": "ArrayTypeName",
													"src": "3452:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3423:63:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3503:0:5"
									},
									"scope": 909,
									"src": "3395:109:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										920
									],
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "4051:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 903,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "4077:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 904,
															"name": "randomWords",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "4088:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 902,
														"name": "_fulfillRandomWords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "4057:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
															"typeString": "function (uint256,uint256[] calldata)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4057:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "4057:43:5"
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "3508:412:5",
										"text": " @dev Callback function called by the VRF coordinator to deliver random words\n @dev Special care should be taken when overriding this function. Use `_fulfillRandomWords()` instead.\n @param requestId The ID of the request to which these random words belong\n @param randomWords The array of random words for the request\n @notice This function can only be called by the VRF coordinator"
									},
									"functionSelector": "1fe543e3",
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 900,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 899,
												"name": "onlyCoordinator",
												"nameLocations": [
													"4035:15:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 828,
												"src": "4035:15:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4035:15:5"
										}
									],
									"name": "rawFulfillRandomWords",
									"nameLocation": "3932:21:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 898,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4026:8:5"
									},
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "3967:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "3959:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3959:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "randomWords",
												"nameLocation": "4001:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "3982:30:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 894,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3982:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 895,
													"nodeType": "ArrayTypeName",
													"src": "3982:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:63:5"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4051:0:5"
									},
									"scope": 909,
									"src": "3923:182:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 910,
							"src": "472:3635:5",
							"usedErrors": [
								805
							],
							"usedEvents": []
						}
					],
					"src": "32:4076:5"
				},
				"id": 5
			},
			"@paintswap/vrf/contracts/interfaces/IPaintswapVRFConsumer.sol": {
				"ast": {
					"absolutePath": "@paintswap/vrf/contracts/interfaces/IPaintswapVRFConsumer.sol",
					"exportedSymbols": {
						"IPaintswapVRFConsumer": [
							921
						]
					},
					"id": 922,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 911,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPaintswapVRFConsumer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 921,
							"linearizedBaseContracts": [
								921
							],
							"name": "IPaintswapVRFConsumer",
							"nameLocation": "69:21:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "95:261:6",
										"text": " @notice rawFulfillRandomWords handles the VRF response and your contract must implement it!\n @param requestId The Id initially returned by requestRandomness\n @param randomWords The VRF output expanded to the requested number of words"
									},
									"functionSelector": "1fe543e3",
									"id": 920,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rawFulfillRandomWords",
									"nameLocation": "368:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "403:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "395:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "395:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "randomWords",
												"nameLocation": "437:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "418:30:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 915,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "418:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 916,
													"nodeType": "ArrayTypeName",
													"src": "418:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:63:6"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "461:0:6"
									},
									"scope": 921,
									"src": "359:103:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 922,
							"src": "59:405:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:433:6"
				},
				"id": 6
			},
			"@paintswap/vrf/contracts/interfaces/IPaintswapVRFCoordinator.sol": {
				"ast": {
					"absolutePath": "@paintswap/vrf/contracts/interfaces/IPaintswapVRFCoordinator.sol",
					"exportedSymbols": {
						"IPaintswapVRFCoordinator": [
							1168
						]
					},
					"id": 1169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 923,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPaintswapVRFCoordinator",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1168,
							"linearizedBaseContracts": [
								1168
							],
							"name": "IPaintswapVRFCoordinator",
							"nameLocation": "69:24:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "348:66:7",
										"text": "@dev Emitted when a request is made to PaintswapVRFCoordinator"
									},
									"eventSelector": "4b4c1cc36d4d06cb8b07fa0318eef67e05f706969fffd87db157945020800453",
									"id": 944,
									"name": "RandomWordsRequested",
									"nameLocation": "423:20:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"indexed": true,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "465:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "449:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"indexed": false,
												"mutability": "mutable",
												"name": "callbackGasLimit",
												"nameLocation": "488:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "480:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "480:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"indexed": false,
												"mutability": "mutable",
												"name": "numWords",
												"nameLocation": "518:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "510:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"indexed": true,
												"mutability": "mutable",
												"name": "origin",
												"nameLocation": "548:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "532:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"indexed": true,
												"mutability": "mutable",
												"name": "consumer",
												"nameLocation": "576:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "560:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "598:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "590:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"indexed": false,
												"mutability": "mutable",
												"name": "refundee",
												"nameLocation": "617:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "609:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"indexed": false,
												"mutability": "mutable",
												"name": "gasPricePaid",
												"nameLocation": "639:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "631:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"indexed": false,
												"mutability": "mutable",
												"name": "requestedAt",
												"nameLocation": "665:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "657:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:237:7"
									},
									"src": "417:264:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "684:64:7",
										"text": "@dev Emitted when PaintswapVRFCoordinator fulfills a request"
									},
									"eventSelector": "509d806e1694818ba2ff1ad74bc7a9db6cbd59f106d7f4cf8799f567d0c23507",
									"id": 958,
									"name": "RandomWordsFulfilled",
									"nameLocation": "757:20:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"indexed": true,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "799:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "783:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"indexed": false,
												"mutability": "mutable",
												"name": "randomWords",
												"nameLocation": "824:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "814:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 948,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "814:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 949,
													"nodeType": "ArrayTypeName",
													"src": "814:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "857:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "841:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"indexed": false,
												"mutability": "mutable",
												"name": "callSuccess",
												"nameLocation": "874:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "869:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 953,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"indexed": false,
												"mutability": "mutable",
												"name": "fulfilledAt",
												"nameLocation": "899:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "891:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:137:7"
									},
									"src": "751:164:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "918:59:7",
										"text": "@dev Emitted when a consumer callback is not successful"
									},
									"eventSelector": "26e2b96ff4daaced93be81ebb34fb9734108ec67eaedeaa52dab367253a8465c",
									"id": 969,
									"name": "ConsumerCallbackFailed",
									"nameLocation": "986:22:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"indexed": true,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "1030:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1014:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1014:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"indexed": true,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "1059:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1045:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 962,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1045:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1150:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1134:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"indexed": false,
												"mutability": "mutable",
												"name": "gasLeft",
												"nameLocation": "1170:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1162:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1162:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:173:7"
									},
									"src": "980:202:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "1186:60:7",
										"text": "@dev Emitted when the gas refund after fulfillment fails"
									},
									"eventSelector": "026984d8f6ebe688808e28b356781bd5fcc69818829c7edcc618a83a05340f78",
									"id": 980,
									"name": "FulfillmentGasRefunded",
									"nameLocation": "1255:22:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"indexed": true,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "1299:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "1283:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"indexed": true,
												"mutability": "mutable",
												"name": "refundee",
												"nameLocation": "1330:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "1314:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1314:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"indexed": false,
												"mutability": "mutable",
												"name": "gasRefunded",
												"nameLocation": "1352:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "1344:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1344:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"indexed": false,
												"mutability": "mutable",
												"name": "refundedSuccessfully",
												"nameLocation": "1374:20:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "1369:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1369:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:121:7"
									},
									"src": "1249:150:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "1402:51:7",
										"text": "@dev Emitted when the signer address is updated"
									},
									"eventSelector": "67b0833b261bf8dee41032afa09cb41cf516d84e7ade2bd54dad0aa53ae956b7",
									"id": 985,
									"name": "SignerAddressUpdated",
									"nameLocation": "1462:20:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"indexed": true,
												"mutability": "mutable",
												"name": "signerAddress",
												"nameLocation": "1499:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "1483:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1483:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:31:7"
									},
									"src": "1456:58:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "1517:48:7",
										"text": "@dev Emitted when a new oracle is registered"
									},
									"eventSelector": "d9d9fdcc9f936c76b5aafe54fc3db5dcec0c6583c9ccc4abe91d17575c5145a5",
									"id": 990,
									"name": "OracleRegistered",
									"nameLocation": "1574:16:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"indexed": true,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "1607:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1591:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1591:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1590:24:7"
									},
									"src": "1568:47:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "1618:61:7",
										"text": "@dev Emitted whne the gas price history window is updated"
									},
									"eventSelector": "a7b843f611e92367b5b6e660ce8677f65b888212b1b710c9ccc891d2aac357a0",
									"id": 995,
									"name": "GasPriceHistoryWindowUpdated",
									"nameLocation": "1688:28:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"indexed": false,
												"mutability": "mutable",
												"name": "newWindow",
												"nameLocation": "1725:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1717:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1716:19:7"
									},
									"src": "1682:54:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "1739:48:7",
										"text": "@dev Emitted when request limits are updated"
									},
									"eventSelector": "d8baaca2b3447c5f574461bfd791880ac68d491a90ce14f4927d6f12554ced6f",
									"id": 1004,
									"name": "RandomRequestLimitsUpdated",
									"nameLocation": "1796:26:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"indexed": false,
												"mutability": "mutable",
												"name": "minimumGasLimit",
												"nameLocation": "1835:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "1828:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 997,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1828:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"indexed": false,
												"mutability": "mutable",
												"name": "maximumGasLimit",
												"nameLocation": "1863:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "1856:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 999,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1856:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxNumWords",
												"nameLocation": "1891:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "1884:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1001,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1884:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1822:84:7"
									},
									"src": "1790:117:7"
								},
								{
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "2161:58:7",
										"text": "@dev Revert when submitted address is the zero address"
									},
									"errorSelector": "d92e233d",
									"id": 1007,
									"name": "ZeroAddress",
									"nameLocation": "2228:11:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2239:2:7"
									},
									"src": "2222:20:7"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "2245:53:7",
										"text": "@dev Revert when the oracle is already registered"
									},
									"errorSelector": "6ff7406a",
									"id": 1012,
									"name": "OracleAlreadyRegistered",
									"nameLocation": "2307:23:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "2339:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "2331:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2330:16:7"
									},
									"src": "2301:46:7"
								},
								{
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "2350:59:7",
										"text": "@dev Revert when the oracle has an insufficient balance"
									},
									"errorSelector": "5ee6fb7a",
									"id": 1019,
									"name": "InsufficientOracleBalance",
									"nameLocation": "2418:25:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "2452:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "2444:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2444:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "2468:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "2460:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2443:33:7"
									},
									"src": "2412:65:7"
								},
								{
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "2480:49:7",
										"text": "@dev Revert when the address is not an oracle"
									},
									"errorSelector": "df4f8240",
									"id": 1024,
									"name": "NotOracle",
									"nameLocation": "2538:9:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "invalid",
												"nameLocation": "2556:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "2548:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2548:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2547:17:7"
									},
									"src": "2532:33:7"
								},
								{
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "2568:73:7",
										"text": "@dev Revert when the request has an insufficient gas limit to fulfill"
									},
									"errorSelector": "4332db86",
									"id": 1031,
									"name": "InsufficientGasLimit",
									"nameLocation": "2650:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "sent",
												"nameLocation": "2679:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2671:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2671:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "required",
												"nameLocation": "2693:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2685:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2670:32:7"
									},
									"src": "2644:59:7"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "2706:55:7",
										"text": "@dev Revert when the consumer gas limit is too high"
									},
									"errorSelector": "46c419d2",
									"id": 1038,
									"name": "OverConsumerGasLimit",
									"nameLocation": "2770:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "sent",
												"nameLocation": "2799:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "2791:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "max",
												"nameLocation": "2813:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "2805:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:27:7"
									},
									"src": "2764:54:7"
								},
								{
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "2821:71:7",
										"text": "@dev Revert when the payment is too low for the requested gas limit"
									},
									"errorSelector": "5b1fe5fc",
									"id": 1045,
									"name": "InsufficientGasPayment",
									"nameLocation": "2901:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "sent",
												"nameLocation": "2932:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "2924:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2924:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "required",
												"nameLocation": "2946:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "2938:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2938:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2923:32:7"
									},
									"src": "2895:61:7"
								},
								{
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "2959:63:7",
										"text": "@dev Revert when the request has an invalid number of words"
									},
									"errorSelector": "734a0f5f",
									"id": 1052,
									"name": "InvalidNumWords",
									"nameLocation": "3031:15:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "numWords",
												"nameLocation": "3055:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "3047:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3047:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "max",
												"nameLocation": "3073:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "3065:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3065:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3046:31:7"
									},
									"src": "3025:53:7"
								},
								{
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "3081:70:7",
										"text": "@dev Revert when the fufillment call does not match the commitment"
									},
									"errorSelector": "416821d7",
									"id": 1057,
									"name": "CommitmentMismatch",
									"nameLocation": "3160:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "3187:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "3179:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3179:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3178:19:7"
									},
									"src": "3154:44:7"
								},
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "3201:57:7",
										"text": "@dev Revert when the oracle has an invalid public key"
									},
									"errorSelector": "2095558d",
									"id": 1066,
									"name": "InvalidPublicKey",
									"nameLocation": "3267:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "3297:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "3289:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "proofSigner",
												"nameLocation": "3320:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "3312:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3312:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "vrfSigner",
												"nameLocation": "3345:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "3337:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3337:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3283:75:7"
									},
									"src": "3261:98:7"
								},
								{
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "3362:41:7",
										"text": "@dev Revert when the proof is invalid"
									},
									"errorSelector": "5e3fa051",
									"id": 1071,
									"name": "InvalidProof",
									"nameLocation": "3412:12:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "3433:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "3425:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3425:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3424:19:7"
									},
									"src": "3406:38:7"
								},
								{
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "3447:39:7",
										"text": "@dev Revert when the withdraw fails"
									},
									"errorSelector": "a2269912",
									"id": 1078,
									"name": "WithdrawFailed",
									"nameLocation": "3495:14:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3518:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "3510:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3510:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3537:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "3529:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3529:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:35:7"
									},
									"src": "3489:56:7"
								},
								{
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "3548:53:7",
										"text": "@dev Revert when the gas price history is invalid"
									},
									"errorSelector": "3c0d2ce9",
									"id": 1083,
									"name": "InvalidGasPriceHistoryWindow",
									"nameLocation": "3610:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "window",
												"nameLocation": "3647:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "3639:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3639:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3638:16:7"
									},
									"src": "3604:51:7"
								},
								{
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "3658:39:7",
										"text": "@dev Revert when funding has failed"
									},
									"errorSelector": "d38af830",
									"id": 1090,
									"name": "FundingFailed",
									"nameLocation": "3706:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "3728:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "3720:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3720:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3744:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "3736:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3736:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3719:32:7"
									},
									"src": "3700:52:7"
								},
								{
									"canonicalName": "IPaintswapVRFCoordinator.VRFStatistics",
									"id": 1099,
									"members": [
										{
											"constant": false,
											"id": 1092,
											"mutability": "mutable",
											"name": "totalRequests",
											"nameLocation": "4040:13:7",
											"nodeType": "VariableDeclaration",
											"scope": 1099,
											"src": "4033:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1091,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "4033:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1094,
											"mutability": "mutable",
											"name": "totalWordsRequested",
											"nameLocation": "4066:19:7",
											"nodeType": "VariableDeclaration",
											"scope": 1099,
											"src": "4059:26:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1093,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "4059:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1096,
											"mutability": "mutable",
											"name": "successfulFulfillments",
											"nameLocation": "4098:22:7",
											"nodeType": "VariableDeclaration",
											"scope": 1099,
											"src": "4091:29:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1095,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "4091:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1098,
											"mutability": "mutable",
											"name": "failedFulfillments",
											"nameLocation": "4133:18:7",
											"nodeType": "VariableDeclaration",
											"scope": 1099,
											"src": "4126:25:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1097,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "4126:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VRFStatistics",
									"nameLocation": "4013:13:7",
									"nodeType": "StructDefinition",
									"scope": 1168,
									"src": "4006:150:7",
									"visibility": "public"
								},
								{
									"canonicalName": "IPaintswapVRFCoordinator.CallbackStatus",
									"id": 1103,
									"members": [
										{
											"id": 1100,
											"name": "PENDING",
											"nameLocation": "4436:7:7",
											"nodeType": "EnumValue",
											"src": "4436:7:7"
										},
										{
											"id": 1101,
											"name": "SUCCESS",
											"nameLocation": "4449:7:7",
											"nodeType": "EnumValue",
											"src": "4449:7:7"
										},
										{
											"id": 1102,
											"name": "FAILURE",
											"nameLocation": "4462:7:7",
											"nodeType": "EnumValue",
											"src": "4462:7:7"
										}
									],
									"name": "CallbackStatus",
									"nameLocation": "4415:14:7",
									"nodeType": "EnumDefinition",
									"src": "4410:63:7"
								},
								{
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "4727:197:7",
										"text": "@notice Calculate the payment for a given amount of gas using native currency\n @param callbackGasLimit The amount of gas to provide for the callback\n @return payment The amount to pay"
									},
									"functionSelector": "c66d3d18",
									"id": 1111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRequestPriceNative",
									"nameLocation": "4936:27:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "callbackGasLimit",
												"nameLocation": "4977:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "4969:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4969:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:34:7"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "payment",
												"nameLocation": "5029:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "5021:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5021:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5020:17:7"
									},
									"scope": 1168,
									"src": "4927:111:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "5042:278:7",
										"text": "@notice Request some random words\n @param callbackGasLimit The amount of gas to provide for the callback\n @param numWords The number of words to request\n @param refundee The address to refund the gas fees to\n @return requestId The ID of the request"
									},
									"functionSelector": "cb9bb27f",
									"id": 1123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestRandomnessPayInNative",
									"nameLocation": "5332:28:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "callbackGasLimit",
												"nameLocation": "5374:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "5366:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "numWords",
												"nameLocation": "5404:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "5396:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5396:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "refundee",
												"nameLocation": "5426:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "5418:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5418:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5360:78:7"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "5473:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "5465:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5465:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5464:19:7"
									},
									"scope": 1168,
									"src": "5323:161:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "5488:186:7",
										"text": "@notice Check to see if a request is pending\n @param requestId The ID of the request\n @return isPending True if the request is pending, false otherwise/does not exist"
									},
									"functionSelector": "16221fdf",
									"id": 1131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isRequestPending",
									"nameLocation": "5686:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "5716:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "5708:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5702:27:7"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "isPending",
												"nameLocation": "5758:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "5753:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5753:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5752:16:7"
									},
									"scope": 1168,
									"src": "5677:92:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "5773:755:7",
										"text": "@notice Fulfill the request for random words\n @param requestId The ID of the request\n @param consumer The address to fulfill the request\n @param consumer The amount of gas fees paid to fulfill the request\n @param numWords The number of words to fulfill\n @param refundee The address to refund the gas fees to\n @param gasPricePaid The gas price paid for the request\n @param publicKey The public key of the oracle\n @param proof The proof of the random words\n @param uPoint The `u` EC point defined as `U = s*B - c*Y`\n @param vComponents The components required to compute `v` as `V = s*H - c*Gamma`\n @param proofCtr The proof counter\n @return callSuccess If the fulfillment call succeeded"
									},
									"functionSelector": "61c978ff",
									"id": 1167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fulfillRandomWords",
									"nameLocation": "6540:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "6572:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "6564:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6564:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "consumer",
												"nameLocation": "6595:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "6587:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6587:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "callbackGasLimit",
												"nameLocation": "6617:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "6609:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6609:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "numWords",
												"nameLocation": "6647:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "6639:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6639:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "refundee",
												"nameLocation": "6669:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "6661:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6661:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "gasPricePaid",
												"nameLocation": "6691:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "6683:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6683:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "publicKey",
												"nameLocation": "6727:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "6709:27:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 1145,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6709:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1147,
													"length": {
														"hexValue": "32",
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6717:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "6709:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "6760:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "6742:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
													"typeString": "uint256[4]"
												},
												"typeName": {
													"baseType": {
														"id": 1149,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6742:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1151,
													"length": {
														"hexValue": "34",
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6750:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"nodeType": "ArrayTypeName",
													"src": "6742:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
														"typeString": "uint256[4]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "uPoint",
												"nameLocation": "6789:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "6771:24:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 1153,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6771:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1155,
													"length": {
														"hexValue": "32",
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6779:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "6771:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "vComponents",
												"nameLocation": "6819:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "6801:29:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
													"typeString": "uint256[4]"
												},
												"typeName": {
													"baseType": {
														"id": 1157,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6801:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1159,
													"length": {
														"hexValue": "34",
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6809:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"nodeType": "ArrayTypeName",
													"src": "6801:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
														"typeString": "uint256[4]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "proofCtr",
												"nameLocation": "6842:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "6836:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1161,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6836:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6558:296:7"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "callSuccess",
												"nameLocation": "6878:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "6873:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1164,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6873:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6872:18:7"
									},
									"scope": 1168,
									"src": "6531:360:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1169,
							"src": "59:6834:7",
							"usedErrors": [
								1007,
								1012,
								1019,
								1024,
								1031,
								1038,
								1045,
								1052,
								1057,
								1066,
								1071,
								1078,
								1083,
								1090
							],
							"usedEvents": [
								944,
								958,
								969,
								980,
								985,
								990,
								995,
								1004
							]
						}
					],
					"src": "32:6862:7"
				},
				"id": 7
			},
			"contracts/ProofOfClick.sol": {
				"ast": {
					"absolutePath": "contracts/ProofOfClick.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"IPaintswapVRFConsumer": [
							921
						],
						"IPaintswapVRFCoordinator": [
							1168
						],
						"POC": [
							1740
						],
						"PaintswapVRFConsumer": [
							909
						]
					},
					"id": 1741,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1741,
							"sourceUnit": 652,
							"src": "61:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@paintswap/vrf/contracts/PaintswapVRFConsumer.sol",
							"file": "@paintswap/vrf/contracts/PaintswapVRFConsumer.sol",
							"id": 1172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1741,
							"sourceUnit": 910,
							"src": "118:59:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@paintswap/vrf/contracts/interfaces/IPaintswapVRFCoordinator.sol",
							"file": "@paintswap/vrf/contracts/interfaces/IPaintswapVRFCoordinator.sol",
							"id": 1173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1741,
							"sourceUnit": 1169,
							"src": "179:74:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1174,
										"name": "PaintswapVRFConsumer",
										"nameLocations": [
											"273:20:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 909,
										"src": "273:20:8"
									},
									"id": 1175,
									"nodeType": "InheritanceSpecifier",
									"src": "273:20:8"
								},
								{
									"baseName": {
										"id": 1176,
										"name": "ERC20",
										"nameLocations": [
											"295:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "295:5:8"
									},
									"id": 1177,
									"nodeType": "InheritanceSpecifier",
									"src": "295:5:8"
								}
							],
							"canonicalName": "POC",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1740,
							"linearizedBaseContracts": [
								1740,
								651,
								41,
								755,
								729,
								785,
								909,
								921
							],
							"name": "POC",
							"nameLocation": "266:3:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "732f9413",
									"id": 1179,
									"name": "FeeTooLow",
									"nameLocation": "314:9:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "323:2:8"
									},
									"src": "308:18:8"
								},
								{
									"errorSelector": "4033e4e3",
									"id": 1181,
									"name": "FeeTransferFailed",
									"nameLocation": "338:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "355:2:8"
									},
									"src": "332:26:8"
								},
								{
									"errorSelector": "f0c49d44",
									"id": 1183,
									"name": "RefundFailed",
									"nameLocation": "370:12:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "382:2:8"
									},
									"src": "364:21:8"
								},
								{
									"errorSelector": "786e0a99",
									"id": 1185,
									"name": "InsufficientContractBalance",
									"nameLocation": "397:27:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:8"
									},
									"src": "391:36:8"
								},
								{
									"errorSelector": "98642b86",
									"id": 1187,
									"name": "NothingToBurn",
									"nameLocation": "439:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "452:2:8"
									},
									"src": "433:22:8"
								},
								{
									"errorSelector": "90b8ec18",
									"id": 1189,
									"name": "TransferFailed",
									"nameLocation": "467:14:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "481:2:8"
									},
									"src": "461:23:8"
								},
								{
									"constant": false,
									"functionSelector": "d5abeb01",
									"id": 1191,
									"mutability": "mutable",
									"name": "maxSupply",
									"nameLocation": "507:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "492:24:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1190,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "492:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "07621eca",
									"id": 1193,
									"mutability": "mutable",
									"name": "currentReward",
									"nameLocation": "538:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "523:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1192,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "523:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8cd221c9",
									"id": 1195,
									"mutability": "mutable",
									"name": "roundId",
									"nameLocation": "573:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "558:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1194,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "558:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "967372a3",
									"id": 1197,
									"mutability": "mutable",
									"name": "lastHalvingRound",
									"nameLocation": "602:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "587:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1196,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "587:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "47fec1a2",
									"id": 1199,
									"mutability": "mutable",
									"name": "lastRoundTs",
									"nameLocation": "640:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "625:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1198,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "625:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "708666ad",
									"id": 1201,
									"mutability": "mutable",
									"name": "liquidityVault",
									"nameLocation": "673:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "658:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1200,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "658:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "36bcf7d6",
									"id": 1206,
									"mutability": "constant",
									"name": "INITIAL_REWARD",
									"nameLocation": "720:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "696:60:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1202,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "696:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_666000000000000000000_by_1",
											"typeString": "int_const 666000000000000000000"
										},
										"id": 1205,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "363636",
											"id": 1203,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "746:3:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_666_by_1",
												"typeString": "int_const 666"
											},
											"value": "666"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 1204,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "752:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "746:10:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_666000000000000000000_by_1",
											"typeString": "int_const 666000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "36667e7f",
									"id": 1209,
									"mutability": "constant",
									"name": "HALVING_INTERVAL_ROUNDS",
									"nameLocation": "787:23:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "763:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1207,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530303530",
										"id": 1208,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "813:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50050_by_1",
											"typeString": "int_const 50050"
										},
										"value": "50050"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6641ea08",
									"id": 1212,
									"mutability": "constant",
									"name": "ROUND_DURATION",
									"nameLocation": "849:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "825:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1210,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "825:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3630",
										"id": 1211,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "875:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_60_by_1",
											"typeString": "int_const 60"
										},
										"value": "60"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c57981b5",
									"id": 1215,
									"mutability": "constant",
									"name": "FEE",
									"nameLocation": "908:3:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "884:59:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1213,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "884:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e31",
										"id": 1214,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "934:9:8",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000_by_1",
											"typeString": "int_const 100000000000000000"
										},
										"value": "0.1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "43270d56",
									"id": 1218,
									"mutability": "constant",
									"name": "LIQUIDITY_SHARE",
									"nameLocation": "974:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "950:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1216,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "950:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 1217,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1000:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "33d608f1",
									"id": 1221,
									"mutability": "constant",
									"name": "CALLBACK_GAS_LIMIT",
									"nameLocation": "1032:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "1008:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 1219,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "1008:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "3230305f303030",
										"id": 1220,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1058:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200000_by_1",
											"typeString": "int_const 200000"
										},
										"value": "200_000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "998f1b80",
									"id": 1227,
									"mutability": "mutable",
									"name": "players",
									"nameLocation": "1129:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "1074:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => address))"
									},
									"typeName": {
										"id": 1226,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1222,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1082:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1074:47:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => address))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1225,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1223,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1093:27:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
												"typeString": "mapping(uint256 => address)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1224,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1112:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2566c9ea",
									"id": 1231,
									"mutability": "mutable",
									"name": "playerCount",
									"nameLocation": "1178:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "1143:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1230,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1228,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1151:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1143:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1229,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1162:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1235,
									"mutability": "mutable",
									"name": "requestToRoundId",
									"nameLocation": "1232:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "1196:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1234,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1232,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1204:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1196:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1233,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1215:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1239,
									"mutability": "mutable",
									"name": "rewardPerRound",
									"nameLocation": "1291:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1740,
									"src": "1255:50:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1238,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1236,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1263:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1255:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1237,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1274:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "66f19fb732c3e13893ea1bb5573839d7d0b41effc0aef6b59283c15ea5a0dbf9",
									"id": 1245,
									"name": "Clicked",
									"nameLocation": "1320:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"indexed": true,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "1344:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "1328:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "1369:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "1353:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1327:49:8"
									},
									"src": "1314:63:8"
								},
								{
									"anonymous": false,
									"eventSelector": "a77018cfa060263f92c58b53277f73d2eade9d69e943460421e26e648eed9f33",
									"id": 1255,
									"name": "RoundRequested",
									"nameLocation": "1389:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"indexed": true,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "1420:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "1404:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"indexed": true,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "1447:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "1431:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1431:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"indexed": false,
												"mutability": "mutable",
												"name": "playersCount",
												"nameLocation": "1464:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "1456:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1456:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1486:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "1478:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1403:90:8"
									},
									"src": "1383:111:8"
								},
								{
									"anonymous": false,
									"eventSelector": "dd7933a060407298571fe36223f480ee3508053fdb7238a1fe246f52b62c8e73",
									"id": 1265,
									"name": "WinnerMinted",
									"nameLocation": "1506:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"indexed": true,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "1535:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1519:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"indexed": true,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "1562:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1546:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "1587:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1571:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1603:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1595:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1595:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:92:8"
									},
									"src": "1500:111:8"
								},
								{
									"anonymous": false,
									"eventSelector": "23ff0e75edf108e3d0392d92e13e8c8a868ef19001bd49f9e94876dc46dff87f",
									"id": 1273,
									"name": "Burned",
									"nameLocation": "1623:6:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"indexed": true,
												"mutability": "mutable",
												"name": "burner",
												"nameLocation": "1646:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "1630:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1662:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "1654:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1654:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethOut",
												"nameLocation": "1678:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "1670:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:56:8"
									},
									"src": "1617:69:8"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "1862:223:8",
										"statements": [
											{
												"expression": {
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1287,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "1873:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_66666666000000000000000000_by_1",
															"typeString": "int_const 66666666000000000000000000"
														},
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "36365f3636365f363636",
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1885:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_66666666_by_1",
																"typeString": "int_const 66666666"
															},
															"value": "66_666_666"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1898:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "1885:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_66666666000000000000000000_by_1",
															"typeString": "int_const 66666666000000000000000000"
														}
													},
													"src": "1873:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "1873:29:8"
											},
											{
												"expression": {
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1293,
														"name": "currentReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "1913:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1294,
														"name": "INITIAL_REWARD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "1929:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1913:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "1913:30:8"
											},
											{
												"expression": {
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1297,
														"name": "liquidityVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "1954:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1298,
														"name": "_vaultAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "1971:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1954:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "1954:30:8"
											},
											{
												"expression": {
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1301,
														"name": "lastRoundTs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "1995:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1302,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2009:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2015:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2009:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1995:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "1995:29:8"
											},
											{
												"expression": {
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1306,
														"name": "roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "2035:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2045:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2035:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "2035:11:8"
											},
											{
												"expression": {
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1310,
														"name": "lastHalvingRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "2057:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2076:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2057:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1313,
												"nodeType": "ExpressionStatement",
												"src": "2057:20:8"
											}
										]
									},
									"id": 1315,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "536174616e47616d6573205320546f6b656e",
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1775:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_6c7c216365e6a30056ce97c82163b59f40800826f72b93913dfb9edff8732b6d",
														"typeString": "literal_string \"SatanGames S Token\""
													},
													"value": "SatanGames S Token"
												},
												{
													"hexValue": "736753",
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1797:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_15579164392ae527c03b90bbfe7e6536ce4ae3ac4b0ee5563d31286e7e775cc2",
														"typeString": "literal_string \"sgS\""
													},
													"value": "sgS"
												}
											],
											"id": 1282,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1279,
												"name": "ERC20",
												"nameLocations": [
													"1769:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "1769:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1769:34:8"
										},
										{
											"arguments": [
												{
													"id": 1284,
													"name": "vrfCoordinatorAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1275,
													"src": "1834:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1285,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1283,
												"name": "PaintswapVRFConsumer",
												"nameLocations": [
													"1813:20:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 909,
												"src": "1813:20:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1813:43:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "vrfCoordinatorAddress",
												"nameLocation": "1714:21:8",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "1706:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1706:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "_vaultAddress",
												"nameLocation": "1745:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "1737:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1705:54:8"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1862:0:8"
									},
									"scope": 1740,
									"src": "1694:391:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "2127:1898:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1318,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2142:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2146:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2142:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1320,
														"name": "FEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "2154:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2142:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1325,
												"nodeType": "IfStatement",
												"src": "2138:39:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1322,
															"name": "FeeTooLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "2166:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2166:11:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1324,
													"nodeType": "RevertStatement",
													"src": "2159:18:8"
												}
											},
											{
												"assignments": [
													1327
												],
												"declarations": [
													{
														"constant": false,
														"id": 1327,
														"mutability": "mutable",
														"name": "timeIsUp",
														"nameLocation": "2195:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "2190:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1326,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2190:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1335,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1328,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2207:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2213:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2207:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1330,
																	"name": "lastRoundTs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1199,
																	"src": "2226:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1331,
																	"name": "ROUND_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "2240:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2226:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2207:47:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1334,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2206:49:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2190:65:8"
											},
											{
												"assignments": [
													1337
												],
												"declarations": [
													{
														"constant": false,
														"id": 1337,
														"mutability": "mutable",
														"name": "hasPlayers",
														"nameLocation": "2271:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "2266:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1336,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2266:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1344,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1338,
																	"name": "playerCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "2285:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1340,
																"indexExpression": {
																	"id": 1339,
																	"name": "roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "2297:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2285:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2308:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2285:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1343,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2284:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2266:44:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1345,
														"name": "timeIsUp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "2327:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1346,
														"name": "hasPlayers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "2339:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2327:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1448,
												"nodeType": "IfStatement",
												"src": "2323:1126:8",
												"trueBody": {
													"id": 1447,
													"nodeType": "Block",
													"src": "2351:1098:8",
													"statements": [
														{
															"assignments": [
																1349
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1349,
																	"mutability": "mutable",
																	"name": "vrfFee",
																	"nameLocation": "2374:6:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1447,
																	"src": "2366:14:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1348,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2366:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1356,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1354,
																		"name": "CALLBACK_GAS_LIMIT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1221,
																		"src": "2453:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1351,
																				"name": "_vrfCoordinator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "2408:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IPaintswapVRFCoordinator_$1168",
																					"typeString": "contract IPaintswapVRFCoordinator"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IPaintswapVRFCoordinator_$1168",
																					"typeString": "contract IPaintswapVRFCoordinator"
																				}
																			],
																			"id": 1350,
																			"name": "IPaintswapVRFCoordinator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1168,
																			"src": "2383:24:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IPaintswapVRFCoordinator_$1168_$",
																				"typeString": "type(contract IPaintswapVRFCoordinator)"
																			}
																		},
																		"id": 1352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2383:41:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IPaintswapVRFCoordinator_$1168",
																			"typeString": "contract IPaintswapVRFCoordinator"
																		}
																	},
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2425:27:8",
																	"memberName": "calculateRequestPriceNative",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1111,
																	"src": "2383:69:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view external returns (uint256)"
																	}
																},
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2383:89:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2366:106:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1359,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2499:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_POC_$1740",
																					"typeString": "contract POC"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_POC_$1740",
																					"typeString": "contract POC"
																				}
																			],
																			"id": 1358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2491:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1357,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2491:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2491:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2505:7:8",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "2491:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1362,
																	"name": "vrfFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "2515:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2491:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1367,
															"nodeType": "IfStatement",
															"src": "2487:72:8",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1364,
																		"name": "InsufficientContractBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "2530:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2530:29:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1366,
																"nodeType": "RevertStatement",
																"src": "2523:36:8"
															}
														},
														{
															"assignments": [
																1369
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1369,
																	"mutability": "mutable",
																	"name": "count",
																	"nameLocation": "2584:5:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1447,
																	"src": "2576:13:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1368,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2576:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1373,
															"initialValue": {
																"baseExpression": {
																	"id": 1370,
																	"name": "playerCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "2592:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1372,
																"indexExpression": {
																	"id": 1371,
																	"name": "roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "2604:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2592:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2576:36:8"
														},
														{
															"assignments": [
																1375
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1375,
																	"mutability": "mutable",
																	"name": "rewardForRound",
																	"nameLocation": "2635:14:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1447,
																	"src": "2627:22:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1374,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2627:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1379,
															"initialValue": {
																"baseExpression": {
																	"id": 1376,
																	"name": "rewardPerRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "2652:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1378,
																"indexExpression": {
																	"id": 1377,
																	"name": "roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "2667:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2652:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2627:48:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1380,
																	"name": "rewardForRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "2694:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2712:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2694:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1387,
															"nodeType": "IfStatement",
															"src": "2690:55:8",
															"trueBody": {
																"expression": {
																	"id": 1385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1383,
																		"name": "rewardForRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1375,
																		"src": "2715:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1384,
																		"name": "currentReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "2732:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2715:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1386,
																"nodeType": "ExpressionStatement",
																"src": "2715:30:8"
															}
														},
														{
															"assignments": [
																1389
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1389,
																	"mutability": "mutable",
																	"name": "requestId",
																	"nameLocation": "2770:9:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1447,
																	"src": "2762:17:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1388,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2762:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1403,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1396,
																		"name": "CALLBACK_GAS_LIMIT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1221,
																		"src": "2908:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 1397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2949:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"id": 1400,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2981:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_POC_$1740",
																					"typeString": "contract POC"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_POC_$1740",
																					"typeString": "contract POC"
																				}
																			],
																			"id": 1399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2973:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1398,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2973:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2973:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1391,
																					"name": "_vrfCoordinator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "2807:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IPaintswapVRFCoordinator_$1168",
																						"typeString": "contract IPaintswapVRFCoordinator"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IPaintswapVRFCoordinator_$1168",
																						"typeString": "contract IPaintswapVRFCoordinator"
																					}
																				],
																				"id": 1390,
																				"name": "IPaintswapVRFCoordinator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1168,
																				"src": "2782:24:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IPaintswapVRFCoordinator_$1168_$",
																					"typeString": "type(contract IPaintswapVRFCoordinator)"
																				}
																			},
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2782:41:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IPaintswapVRFCoordinator_$1168",
																				"typeString": "contract IPaintswapVRFCoordinator"
																			}
																		},
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2842:28:8",
																		"memberName": "requestRandomnessPayInNative",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1123,
																		"src": "2782:88:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,address) payable external returns (uint256)"
																		}
																	},
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1394,
																			"name": "vrfFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1349,
																			"src": "2878:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "2782:103:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$value",
																		"typeString": "function (uint256,uint256,address) payable external returns (uint256)"
																	}
																},
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2782:223:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2762:243:8"
														},
														{
															"expression": {
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1404,
																		"name": "requestToRoundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "3022:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1406,
																	"indexExpression": {
																		"id": 1405,
																		"name": "requestId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1389,
																		"src": "3039:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3022:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1407,
																	"name": "roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "3052:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3022:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1409,
															"nodeType": "ExpressionStatement",
															"src": "3022:37:8"
														},
														{
															"expression": {
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1410,
																		"name": "rewardPerRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1239,
																		"src": "3074:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1412,
																	"indexExpression": {
																		"id": 1411,
																		"name": "roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1195,
																		"src": "3089:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3074:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1413,
																	"name": "rewardForRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "3100:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3074:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1415,
															"nodeType": "ExpressionStatement",
															"src": "3074:40:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1417,
																		"name": "requestId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1389,
																		"src": "3149:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1418,
																		"name": "roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1195,
																		"src": "3160:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1419,
																		"name": "count",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1369,
																		"src": "3169:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1420,
																		"name": "rewardForRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1375,
																		"src": "3176:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1416,
																	"name": "RoundRequested",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "3134:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3134:57:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1422,
															"nodeType": "EmitStatement",
															"src": "3129:62:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1423,
																	"name": "roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "3212:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1424,
																		"name": "lastHalvingRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1197,
																		"src": "3223:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1425,
																		"name": "HALVING_INTERVAL_ROUNDS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1209,
																		"src": "3242:23:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3223:42:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3212:53:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1437,
															"nodeType": "IfStatement",
															"src": "3208:157:8",
															"trueBody": {
																"id": 1436,
																"nodeType": "Block",
																"src": "3267:98:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1428,
																				"name": "currentReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1193,
																				"src": "3286:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "/=",
																			"rightHandSide": {
																				"hexValue": "32",
																				"id": 1429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3303:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "3286:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1431,
																		"nodeType": "ExpressionStatement",
																		"src": "3286:18:8"
																	},
																	{
																		"expression": {
																			"id": 1434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1432,
																				"name": "lastHalvingRound",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1197,
																				"src": "3323:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1433,
																				"name": "roundId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1195,
																				"src": "3342:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3323:26:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1435,
																		"nodeType": "ExpressionStatement",
																		"src": "3323:26:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1438,
																	"name": "roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "3381:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3392:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3381:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1441,
															"nodeType": "ExpressionStatement",
															"src": "3381:12:8"
														},
														{
															"expression": {
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1442,
																	"name": "lastRoundTs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1199,
																	"src": "3408:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1443,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3422:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3428:9:8",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3422:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3408:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1446,
															"nodeType": "ExpressionStatement",
															"src": "3408:29:8"
														}
													]
												}
											},
											{
												"assignments": [
													1450
												],
												"declarations": [
													{
														"constant": false,
														"id": 1450,
														"mutability": "mutable",
														"name": "idx",
														"nameLocation": "3469:3:8",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "3461:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1449,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3461:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1454,
												"initialValue": {
													"baseExpression": {
														"id": 1451,
														"name": "playerCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3475:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1453,
													"indexExpression": {
														"id": 1452,
														"name": "roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "3487:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3475:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3461:34:8"
											},
											{
												"expression": {
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1455,
																"name": "players",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1227,
																"src": "3506:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$",
																	"typeString": "mapping(uint256 => mapping(uint256 => address))"
																}
															},
															"id": 1458,
															"indexExpression": {
																"id": 1456,
																"name": "roundId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1195,
																"src": "3514:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3506:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1459,
														"indexExpression": {
															"id": 1457,
															"name": "idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "3523:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3506:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1460,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3530:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3534:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3530:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3506:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "3506:34:8"
											},
											{
												"expression": {
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1464,
															"name": "playerCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "3551:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1466,
														"indexExpression": {
															"id": 1465,
															"name": "roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "3563:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3551:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1467,
															"name": "idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "3574:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3580:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3574:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3551:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "3551:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1473,
															"name": "roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "3607:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1474,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3616:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3620:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3616:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1472,
														"name": "Clicked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "3599:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3599:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "EmitStatement",
												"src": "3594:33:8"
											},
											{
												"assignments": [
													1479
												],
												"declarations": [
													{
														"constant": false,
														"id": 1479,
														"mutability": "mutable",
														"name": "liquidityAmount",
														"nameLocation": "3648:15:8",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "3640:23:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1478,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3640:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1486,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1480,
																	"name": "FEE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "3667:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1481,
																	"name": "LIQUIDITY_SHARE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "3673:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3667:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1483,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3666:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3692:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3666:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3640:55:8"
											},
											{
												"assignments": [
													1488,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1488,
														"mutability": "mutable",
														"name": "ok",
														"nameLocation": "3712:2:8",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "3707:7:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1487,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3707:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1498,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3773:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1491,
																		"name": "liquidityVault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1201,
																		"src": "3728:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3720:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1489,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3720:8:8",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3720:23:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3744:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3720:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1494,
																"name": "liquidityAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1479,
																"src": "3756:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3720:52:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3720:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3706:70:8"
											},
											{
												"condition": {
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3791:3:8",
													"subExpression": {
														"id": 1499,
														"name": "ok",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "3792:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1504,
												"nodeType": "IfStatement",
												"src": "3787:35:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1501,
															"name": "FeeTransferFailed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "3803:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3803:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1503,
													"nodeType": "RevertStatement",
													"src": "3796:26:8"
												}
											},
											{
												"assignments": [
													1506
												],
												"declarations": [
													{
														"constant": false,
														"id": 1506,
														"mutability": "mutable",
														"name": "change",
														"nameLocation": "3843:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "3835:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3835:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1511,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1507,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3852:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3856:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "3852:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1509,
														"name": "FEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "3864:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3852:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3835:32:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1512,
														"name": "change",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "3882:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3891:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3882:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1536,
												"nodeType": "IfStatement",
												"src": "3878:140:8",
												"trueBody": {
													"id": 1535,
													"nodeType": "Block",
													"src": "3894:124:8",
													"statements": [
														{
															"expression": {
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 1515,
																			"name": "ok",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1488,
																			"src": "3910:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		null
																	],
																	"id": 1516,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "3909:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$__$",
																		"typeString": "tuple(bool,)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "",
																			"id": 1525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3958:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			},
																			"value": ""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																					"typeString": "literal_string \"\""
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1519,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "3926:3:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 1520,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3930:6:8",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "3926:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1518,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3918:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_payable_$",
																						"typeString": "type(address payable)"
																					},
																					"typeName": {
																						"id": 1517,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "3918:8:8",
																						"stateMutability": "payable",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1521,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3918:19:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"id": 1522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3938:4:8",
																			"memberName": "call",
																			"nodeType": "MemberAccess",
																			"src": "3918:24:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																			}
																		},
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"names": [
																			"value"
																		],
																		"nodeType": "FunctionCallOptions",
																		"options": [
																			{
																				"id": 1523,
																				"name": "change",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1506,
																				"src": "3950:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"src": "3918:39:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3918:43:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "tuple(bool,bytes memory)"
																	}
																},
																"src": "3909:52:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1528,
															"nodeType": "ExpressionStatement",
															"src": "3909:52:8"
														},
														{
															"condition": {
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3980:3:8",
																"subExpression": {
																	"id": 1529,
																	"name": "ok",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1488,
																	"src": "3981:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1534,
															"nodeType": "IfStatement",
															"src": "3976:30:8",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1531,
																		"name": "RefundFailed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "3992:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3992:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1533,
																"nodeType": "RevertStatement",
																"src": "3985:21:8"
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "1d6ad8e2",
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Click",
									"nameLocation": "2102:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2107:2:8"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:8"
									},
									"scope": 1740,
									"src": "2093:1932:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "4072:606:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1543,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "4087:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4097:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4087:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1549,
												"nodeType": "IfStatement",
												"src": "4083:39:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1546,
															"name": "NothingToBurn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "4107:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4107:15:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1548,
													"nodeType": "RevertStatement",
													"src": "4100:22:8"
												}
											},
											{
												"assignments": [
													1551
												],
												"declarations": [
													{
														"constant": false,
														"id": 1551,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "4143:15:8",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "4135:23:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4135:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1557,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1554,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "4169:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_POC_$1740",
																	"typeString": "contract POC"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_POC_$1740",
																	"typeString": "contract POC"
																}
															],
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4161:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1552,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4161:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4161:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4175:7:8",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "4161:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4135:47:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1558,
														"name": "contractBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "4197:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4216:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4197:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1564,
												"nodeType": "IfStatement",
												"src": "4193:62:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1561,
															"name": "InsufficientContractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "4226:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4226:29:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1563,
													"nodeType": "RevertStatement",
													"src": "4219:36:8"
												}
											},
											{
												"assignments": [
													1566
												],
												"declarations": [
													{
														"constant": false,
														"id": 1566,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "4276:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "4268:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1565,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4268:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1569,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1567,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4285:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4285:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4268:30:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1570,
														"name": "supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "4313:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4323:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4313:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1576,
												"nodeType": "IfStatement",
												"src": "4309:53:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1573,
															"name": "InsufficientContractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "4333:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4333:29:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1575,
													"nodeType": "RevertStatement",
													"src": "4326:36:8"
												}
											},
											{
												"assignments": [
													1578
												],
												"declarations": [
													{
														"constant": false,
														"id": 1578,
														"mutability": "mutable",
														"name": "ethOut",
														"nameLocation": "4383:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "4375:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1577,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4375:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1585,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1579,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1540,
																	"src": "4393:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1580,
																	"name": "contractBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1551,
																	"src": "4402:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4393:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1582,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4392:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1583,
														"name": "supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "4421:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4392:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4375:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1587,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4446:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4450:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4446:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1589,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "4458:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1586,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "4440:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4440:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1591,
												"nodeType": "ExpressionStatement",
												"src": "4440:25:8"
											},
											{
												"expression": {
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1592,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "4476:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1593,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "4489:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4476:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1595,
												"nodeType": "ExpressionStatement",
												"src": "4476:19:8"
											},
											{
												"assignments": [
													1597,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1597,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4514:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "4509:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1596,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4509:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1608,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4567:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1600,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4535:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4539:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4535:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4527:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1598,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4527:8:8",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4527:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4547:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4527:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1604,
																"name": "ethOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1578,
																"src": "4559:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4527:39:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4527:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4508:62:8"
											},
											{
												"condition": {
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4585:8:8",
													"subExpression": {
														"id": 1609,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "4586:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1614,
												"nodeType": "IfStatement",
												"src": "4581:37:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1611,
															"name": "TransferFailed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "4602:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4602:16:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1613,
													"nodeType": "RevertStatement",
													"src": "4595:23:8"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1616,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4643:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4647:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4643:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1618,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "4655:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1619,
															"name": "ethOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "4663:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1615,
														"name": "Burned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "4636:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4636:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1621,
												"nodeType": "EmitStatement",
												"src": "4631:39:8"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "4042:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4055:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "4047:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4047:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4046:16:8"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4072:0:8"
									},
									"scope": 1740,
									"src": "4033:645:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "4784:711:8",
										"statements": [
											{
												"assignments": [
													1633
												],
												"declarations": [
													{
														"constant": false,
														"id": 1633,
														"mutability": "mutable",
														"name": "resolvedRound",
														"nameLocation": "4803:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1716,
														"src": "4795:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1632,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4795:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1637,
												"initialValue": {
													"baseExpression": {
														"id": 1634,
														"name": "requestToRoundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "4819:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1636,
													"indexExpression": {
														"id": 1635,
														"name": "requestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "4836:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4819:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4795:51:8"
											},
											{
												"expression": {
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4857:34:8",
													"subExpression": {
														"baseExpression": {
															"id": 1638,
															"name": "requestToRoundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "4864:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1640,
														"indexExpression": {
															"id": 1639,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "4881:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4864:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "4857:34:8"
											},
											{
												"assignments": [
													1644
												],
												"declarations": [
													{
														"constant": false,
														"id": 1644,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "4912:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 1716,
														"src": "4904:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4904:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1648,
												"initialValue": {
													"baseExpression": {
														"id": 1645,
														"name": "playerCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "4916:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1647,
													"indexExpression": {
														"id": 1646,
														"name": "resolvedRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1633,
														"src": "4928:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4916:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4904:38:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1649,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "4957:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4961:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4957:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1715,
												"nodeType": "IfStatement",
												"src": "4953:535:8",
												"trueBody": {
													"id": 1714,
													"nodeType": "Block",
													"src": "4964:524:8",
													"statements": [
														{
															"assignments": [
																1653
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1653,
																	"mutability": "mutable",
																	"name": "idx",
																	"nameLocation": "4987:3:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1714,
																	"src": "4979:11:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1652,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4979:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1659,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1654,
																		"name": "randomWords",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "4993:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1656,
																	"indexExpression": {
																		"hexValue": "30",
																		"id": 1655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5005:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4993:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 1657,
																	"name": "n",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1644,
																	"src": "5010:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4993:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4979:32:8"
														},
														{
															"assignments": [
																1661
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1661,
																	"mutability": "mutable",
																	"name": "winner",
																	"nameLocation": "5034:6:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1714,
																	"src": "5026:14:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1660,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5026:7:8",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1667,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1662,
																		"name": "players",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1227,
																		"src": "5043:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$",
																			"typeString": "mapping(uint256 => mapping(uint256 => address))"
																		}
																	},
																	"id": 1664,
																	"indexExpression": {
																		"id": 1663,
																		"name": "resolvedRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1633,
																		"src": "5051:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5043:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 1666,
																"indexExpression": {
																	"id": 1665,
																	"name": "idx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "5066:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5043:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5026:44:8"
														},
														{
															"assignments": [
																1669
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1669,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "5095:6:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1714,
																	"src": "5087:14:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1668,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5087:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1673,
															"initialValue": {
																"baseExpression": {
																	"id": 1670,
																	"name": "rewardPerRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "5104:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1672,
																"indexExpression": {
																	"id": 1671,
																	"name": "resolvedRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1633,
																	"src": "5119:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5104:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5087:46:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1674,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "5152:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5162:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5152:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1681,
															"nodeType": "IfStatement",
															"src": "5148:39:8",
															"trueBody": {
																"expression": {
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1677,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "5165:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1678,
																		"name": "currentReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "5174:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5165:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1680,
																"nodeType": "ExpressionStatement",
																"src": "5165:22:8"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1682,
																			"name": "totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "5208:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5208:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1684,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "5224:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5208:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1686,
																	"name": "maxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1191,
																	"src": "5233:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5208:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1696,
															"nodeType": "IfStatement",
															"src": "5204:109:8",
															"trueBody": {
																"id": 1695,
																"nodeType": "Block",
																"src": "5244:69:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1688,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1669,
																				"src": "5263:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1692,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1689,
																					"name": "maxSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1191,
																					"src": "5272:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1690,
																						"name": "totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 224,
																						"src": "5284:11:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 1691,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5284:13:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5272:25:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5263:34:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1694,
																		"nodeType": "ExpressionStatement",
																		"src": "5263:34:8"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1697,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "5331:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5340:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5331:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1713,
															"nodeType": "IfStatement",
															"src": "5327:150:8",
															"trueBody": {
																"id": 1712,
																"nodeType": "Block",
																"src": "5343:134:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1701,
																					"name": "winner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1661,
																					"src": "5368:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1702,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1669,
																					"src": "5376:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1700,
																				"name": "_mint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "5362:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5362:21:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1704,
																		"nodeType": "ExpressionStatement",
																		"src": "5362:21:8"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1706,
																					"name": "requestId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1625,
																					"src": "5420:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1707,
																					"name": "resolvedRound",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1633,
																					"src": "5431:13:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1708,
																					"name": "winner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1661,
																					"src": "5446:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1709,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1669,
																					"src": "5454:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1705,
																				"name": "WinnerMinted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1265,
																				"src": "5407:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256,address,uint256)"
																				}
																			},
																			"id": 1710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5407:54:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1711,
																		"nodeType": "EmitStatement",
																		"src": "5402:59:8"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fulfillRandomWords",
									"nameLocation": "4695:19:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1630,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4775:8:8"
									},
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "4723:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "4715:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4715:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "randomWords",
												"nameLocation": "4753:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "4734:30:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1626,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4734:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1627,
													"nodeType": "ArrayTypeName",
													"src": "4734:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4714:51:8"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4784:0:8"
									},
									"scope": 1740,
									"src": "4686:809:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "5585:47:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1724,
														"name": "playerCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "5603:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1726,
													"indexExpression": {
														"id": 1725,
														"name": "_roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "5615:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5603:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1723,
												"id": 1727,
												"nodeType": "Return",
												"src": "5596:28:8"
											}
										]
									},
									"functionSelector": "f68c2bfd",
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPlayersCountInRound",
									"nameLocation": "5512:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "5543:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "5535:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5535:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5534:18:8"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "5576:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5576:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:9:8"
									},
									"scope": 1740,
									"src": "5503:129:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "5700:68:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1734,
														"name": "lastHalvingRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "5718:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1735,
														"name": "HALVING_INTERVAL_ROUNDS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "5737:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5718:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1733,
												"id": 1737,
												"nodeType": "Return",
												"src": "5711:49:8"
											}
										]
									},
									"functionSelector": "1d729c5a",
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextHalvingRound",
									"nameLocation": "5649:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5665:2:8"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "5691:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5691:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5690:9:8"
									},
									"scope": 1740,
									"src": "5640:128:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1741,
							"src": "257:5514:8",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40,
								805,
								1179,
								1181,
								1183,
								1185,
								1187,
								1189
							],
							"usedEvents": [
								663,
								672,
								1245,
								1255,
								1265,
								1273
							]
						}
					],
					"src": "33:5738:8"
				},
				"id": 8
			}
		}
	}
}